{
	"id": "398467a11c8e77e7e114a900751a5196",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"blockjack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/// @title TODO\n/// @author TODO\n/// @notice TODO\ncontract BlockJack {\n    uint256 private constant ZERO_INDEX_SHIFT = 1;\n    uint256 private constant MAX_CARD_VALUE = 10;\n    uint256 private constant BLACK_JACK = 21;\n    uint256 private constant DEALER_DECISION = 17;\n    uint16 public initialBet;\n    uint16 public roundSessionExpiry;\n    address public dealer;\n    uint256 currentRoundTimeout;\n    uint256 multiplier;\n    uint8 constant numberOfCards = 13;\n\n    event Hit(address indexed player);\n    event Stand(address indexed player);\n    event Bust(address indexed player);\n\n    address[] private players;\n    mapping(address => Card[]) public hands;\n    mapping(address => uint256) public bets;\n    mapping(address => PlayerDecision) public playerDecisions;\n    Phase public phase;\n\n    mapping(Card => uint8[]) private enumValues;\n\n    constructor(\n        uint16 _initialBet,\n        uint16 _roundSessionExpiry,\n        uint256 _multiplier\n    ) {\n        dealer = msg.sender;\n        initialBet = _initialBet;\n        roundSessionExpiry = _roundSessionExpiry;\n        phase = Phase.PlaceBets;\n        multiplier = _multiplier;\n    }\n\n    function placeBet() public payable {\n        require(phase == Phase.PlaceBets, \"Not taking any new players.\");\n        require(msg.value == initialBet, \"Incorrect initial bet.\");\n        bets[msg.sender] = msg.value;\n        players.push(msg.sender);\n\n        playerDecisions[msg.sender] = PlayerDecision.Undecided;\n    }\n\n    function deal() public {\n        require(msg.sender == dealer, \"Only the dealer can deal\");\n        require(\n            block.timestamp >= currentRoundTimeout,\n            \"Current round is still running.\"\n        );\n\n        require(\n            phase == Phase.PlaceBets || phase == Phase.HitOrStand,\n            \"Game not in correct state.\"\n        );\n\n        if (phase == Phase.PlaceBets) {\n            dealInitialHand();\n            dealCardToDealer();\n            phase = Phase.HitOrStand;\n        } else if (phase == Phase.HitOrStand) {\n            dealCardsToPlayers();\n            finalDealerReveal();\n        }\n\n        currentRoundTimeout = block.timestamp + roundSessionExpiry;\n    }\n\n    function getCard() private view returns (Card card) {\n        return Card(getRandomNumber() % numberOfCards);\n    }\n\n    function getRandomNumber() internal view returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(msg.sender, block.timestamp)));\n    }\n\n    function dealCardsToPlayers() private {\n        for (uint256 i = 0; i < players.length; i++) {\n            address playerAddress = players[i];\n            PlayerDecision decision = playerDecisions[playerAddress];\n            if (decision == PlayerDecision.Hit) {\n                hands[playerAddress].push(getCard());\n                if (sumOfHand(hands[playerAddress]) > BLACK_JACK) {\n                    // sum of player cards is higher than BLACK_JACK\n                    emit Bust(playerAddress);\n                    playerDecisions[playerAddress] = PlayerDecision.Stand;\n                } else {\n                    playerDecisions[playerAddress] = PlayerDecision.Undecided;\n                }\n            } else if (decision == PlayerDecision.Undecided) {\n                // handle the case the player missed the opportunity to decide on hit or stand\n                emit Stand(playerAddress);\n                playerDecisions[playerAddress] = PlayerDecision.Stand;\n            }\n        }\n    }\n\n    function dealInitialHand() private {\n        for (uint256 i = 0; i < players.length; i++) {\n            address playerAddress = players[i];\n            hands[playerAddress].push(getCard());\n            hands[playerAddress].push(getCard());\n        }\n    }\n\n    function dealCardToDealer() private {\n        hands[dealer].push(getCard());\n    }\n\n    function finalDealerReveal() private {\n        while (sumOfHand(hands[dealer]) < DEALER_DECISION) {\n            hands[dealer].push(getCard());\n        }\n        if (sumOfHand(hands[dealer]) > BLACK_JACK) {\n            emit Bust(dealer);\n        }\n    }\n\n    function hit() public {\n        require(\n            playerDecisions[msg.sender] != PlayerDecision.Stand,\n            \"Player already selected stand once.\"\n        );\n        decide(PlayerDecision.Hit);\n        emit Hit(msg.sender);\n    }\n\n    function stand() public {\n        require(\n            playerDecisions[msg.sender] != PlayerDecision.Hit,\n            \"Player already selected hit once.\"\n        );\n        decide(PlayerDecision.Stand);\n        emit Stand(msg.sender);\n    }\n\n    function decide(PlayerDecision decision) private {\n        require(bets[msg.sender] != 0, \"Player didn't place any bets.\");\n        require(\n            phase == Phase.HitOrStand,\n            \"Currently not allowing hit or stand actions.\"\n        );\n        require(\n            block.timestamp <= currentRoundTimeout,\n            \"Round does not accept any more changes\"\n        );\n\n        playerDecisions[msg.sender] = decision;\n    }\n\n    function sumOfHand(Card[] memory hand)\n        private\n        pure\n        returns (uint256 totalSum)\n    {\n        uint256 aceCount = 0;\n        for (uint256 i = 0; i < hand.length; i++) {\n            totalSum += Math.min(\n                uint256(hand[i]) + ZERO_INDEX_SHIFT,\n                MAX_CARD_VALUE\n            );\n            if (hand[i] == Card.Ace) aceCount++;\n        }\n\n        while (aceCount > 0 && totalSum + 10 <= BLACK_JACK) {\n            totalSum += 10; \n            aceCount--;\n        }\n\n        return totalSum;\n    }\n\n    enum Card {\n        Ace,\n        Two,\n        Three,\n        Four,\n        Five,\n        Six,\n        Seven,\n        Eight,\n        Nine,\n        Ten,\n        Jack,\n        Queen,\n        King\n    }\n    enum Phase {\n        PlaceBets,\n        HitOrStand\n    }\n\n    enum PlayerDecision {\n        Undecided,\n        Hit,\n        Stand\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PUSH0 0xF6 0xBF PUSH22 0x52944E02BC2E758597BEAADBCF6C3C3213E4E251FCE9 MCOPY DUP13 RETURNDATASIZE 0xD8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "657:1315:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f55ff6bf7552944e02bc2e758597beaadbcf6c3c3213e4e251fce95e8c3dd88b64736f6c634300081a0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"blockjack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xEB RETURNDATACOPY DUP12 SWAP10 GT PC 0x2E MSTORE 0x2D EXTCODEHASH COINBASE 0xAB SAR 0xB4 0xB7 0xB4 PUSH32 0x1EEABEABCC4DD92D878384FD569564736F6C634300081A003300000000000000 ",
							"sourceMap": "281:28026:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122097eb3e8b9911582e522d3f41ab1db4b7b47f1eeabeabcc4dd92d878384fd569564736f6c634300081a0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"blockjack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0x4E DUP2 0x2B PUSH5 0xF9A3ACB159 0x22 SWAP3 MLOAD MCOPY 0xB6 0xE8 MLOAD 0xB1 EXTCODEHASH 0xD SDIV PUSH18 0xD796380FEE560C22512C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "769:34173:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d4e812b64f9a3acb1592292515eb6e851b13f0d0571d796380fee560c22512c64736f6c634300081a0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"blockjack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"blockjack.sol": {
				"BlockJack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_initialBet",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_roundSessionExpiry",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "Bust",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "Hit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "Stand",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dealer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "hands",
							"outputs": [
								{
									"internalType": "enum BlockJack.Card",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialBet",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "phase",
							"outputs": [
								{
									"internalType": "enum BlockJack.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "placeBet",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "playerDecisions",
							"outputs": [
								{
									"internalType": "enum BlockJack.PlayerDecision",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roundSessionExpiry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stand",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "TODO",
						"kind": "dev",
						"methods": {},
						"title": "TODO",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"blockjack.sol\":163:5996  contract BlockJack {... */\n  mstore(0x40, 0x80)\n    /* \"blockjack.sol\":958:1256  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"blockjack.sol\":1088:1098  msg.sender */\n  caller\n    /* \"blockjack.sol\":1079:1085  dealer */\n  0x00\n  0x04\n    /* \"blockjack.sol\":1079:1098  dealer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockjack.sol\":1121:1132  _initialBet */\n  dup3\n    /* \"blockjack.sol\":1108:1118  initialBet */\n  0x00\n  dup1\n    /* \"blockjack.sol\":1108:1132  initialBet = _initialBet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockjack.sol\":1163:1182  _roundSessionExpiry */\n  dup2\n    /* \"blockjack.sol\":1142:1160  roundSessionExpiry */\n  0x00\n  0x02\n    /* \"blockjack.sol\":1142:1182  roundSessionExpiry = _roundSessionExpiry */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockjack.sol\":1200:1215  Phase.PlaceBets */\n  0x00\n    /* \"blockjack.sol\":1192:1197  phase */\n  0x07\n  0x00\n    /* \"blockjack.sol\":1192:1215  phase = Phase.PlaceBets */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_6\n  jumpi\n  tag_7\n  tag_8\n  jump\t// in\ntag_7:\ntag_6:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"blockjack.sol\":1238:1249  _multiplier */\n  dup1\n    /* \"blockjack.sol\":1225:1235  multiplier */\n  0x02\n    /* \"blockjack.sol\":1225:1249  multiplier = _multiplier */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"blockjack.sol\":958:1256  constructor(... */\n  pop\n  pop\n  pop\n    /* \"blockjack.sol\":163:5996  contract BlockJack {... */\n  jump(tag_9)\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:423   */\ntag_13:\n    /* \"#utility.yul\":370:377   */\n  0x00\n    /* \"#utility.yul\":410:416   */\n  0xffff\n    /* \"#utility.yul\":403:408   */\n  dup3\n    /* \"#utility.yul\":399:417   */\n  and\n    /* \"#utility.yul\":388:417   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":429:549   */\ntag_14:\n    /* \"#utility.yul\":501:524   */\n  tag_25\n    /* \"#utility.yul\":518:523   */\n  dup2\n    /* \"#utility.yul\":501:524   */\n  tag_13\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":494:499   */\n  dup2\n    /* \"#utility.yul\":491:525   */\n  eq\n    /* \"#utility.yul\":481:543   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":539:540   */\n  0x00\n    /* \"#utility.yul\":536:537   */\n  dup1\n    /* \"#utility.yul\":529:541   */\n  revert\n    /* \"#utility.yul\":481:543   */\ntag_26:\n    /* \"#utility.yul\":429:549   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":555:696   */\ntag_15:\n    /* \"#utility.yul\":611:616   */\n  0x00\n    /* \"#utility.yul\":642:648   */\n  dup2\n    /* \"#utility.yul\":636:649   */\n  mload\n    /* \"#utility.yul\":627:649   */\n  swap1\n  pop\n    /* \"#utility.yul\":658:690   */\n  tag_28\n    /* \"#utility.yul\":684:689   */\n  dup2\n    /* \"#utility.yul\":658:690   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":555:696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":702:779   */\ntag_16:\n    /* \"#utility.yul\":739:746   */\n  0x00\n    /* \"#utility.yul\":768:773   */\n  dup2\n    /* \"#utility.yul\":757:773   */\n  swap1\n  pop\n    /* \"#utility.yul\":702:779   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":785:907   */\ntag_17:\n    /* \"#utility.yul\":858:882   */\n  tag_31\n    /* \"#utility.yul\":876:881   */\n  dup2\n    /* \"#utility.yul\":858:882   */\n  tag_16\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":851:856   */\n  dup2\n    /* \"#utility.yul\":848:883   */\n  eq\n    /* \"#utility.yul\":838:901   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":897:898   */\n  0x00\n    /* \"#utility.yul\":894:895   */\n  dup1\n    /* \"#utility.yul\":887:899   */\n  revert\n    /* \"#utility.yul\":838:901   */\ntag_32:\n    /* \"#utility.yul\":785:907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":913:1056   */\ntag_18:\n    /* \"#utility.yul\":970:975   */\n  0x00\n    /* \"#utility.yul\":1001:1007   */\n  dup2\n    /* \"#utility.yul\":995:1008   */\n  mload\n    /* \"#utility.yul\":986:1008   */\n  swap1\n  pop\n    /* \"#utility.yul\":1017:1050   */\n  tag_34\n    /* \"#utility.yul\":1044:1049   */\n  dup2\n    /* \"#utility.yul\":1017:1050   */\n  tag_17\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":913:1056   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1062:1721   */\ntag_3:\n    /* \"#utility.yul\":1148:1154   */\n  0x00\n    /* \"#utility.yul\":1156:1162   */\n  dup1\n    /* \"#utility.yul\":1164:1170   */\n  0x00\n    /* \"#utility.yul\":1213:1215   */\n  0x60\n    /* \"#utility.yul\":1201:1210   */\n  dup5\n    /* \"#utility.yul\":1192:1199   */\n  dup7\n    /* \"#utility.yul\":1188:1211   */\n  sub\n    /* \"#utility.yul\":1184:1216   */\n  slt\n    /* \"#utility.yul\":1181:1300   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1219:1298   */\n  tag_37\n  tag_11\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1181:1300   */\ntag_36:\n    /* \"#utility.yul\":1339:1340   */\n  0x00\n    /* \"#utility.yul\":1364:1427   */\n  tag_38\n    /* \"#utility.yul\":1419:1426   */\n  dup7\n    /* \"#utility.yul\":1410:1416   */\n  dup3\n    /* \"#utility.yul\":1399:1408   */\n  dup8\n    /* \"#utility.yul\":1395:1417   */\n  add\n    /* \"#utility.yul\":1364:1427   */\n  tag_15\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1354:1427   */\n  swap4\n  pop\n    /* \"#utility.yul\":1310:1437   */\n  pop\n    /* \"#utility.yul\":1476:1478   */\n  0x20\n    /* \"#utility.yul\":1502:1565   */\n  tag_39\n    /* \"#utility.yul\":1557:1564   */\n  dup7\n    /* \"#utility.yul\":1548:1554   */\n  dup3\n    /* \"#utility.yul\":1537:1546   */\n  dup8\n    /* \"#utility.yul\":1533:1555   */\n  add\n    /* \"#utility.yul\":1502:1565   */\n  tag_15\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1492:1565   */\n  swap3\n  pop\n    /* \"#utility.yul\":1447:1575   */\n  pop\n    /* \"#utility.yul\":1614:1616   */\n  0x40\n    /* \"#utility.yul\":1640:1704   */\n  tag_40\n    /* \"#utility.yul\":1696:1703   */\n  dup7\n    /* \"#utility.yul\":1687:1693   */\n  dup3\n    /* \"#utility.yul\":1676:1685   */\n  dup8\n    /* \"#utility.yul\":1672:1694   */\n  add\n    /* \"#utility.yul\":1640:1704   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1630:1704   */\n  swap2\n  pop\n    /* \"#utility.yul\":1585:1714   */\n  pop\n    /* \"#utility.yul\":1062:1721   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1727:1907   */\ntag_8:\n    /* \"#utility.yul\":1775:1852   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1772:1773   */\n  0x00\n    /* \"#utility.yul\":1765:1853   */\n  mstore\n    /* \"#utility.yul\":1872:1876   */\n  0x21\n    /* \"#utility.yul\":1869:1870   */\n  0x04\n    /* \"#utility.yul\":1862:1877   */\n  mstore\n    /* \"#utility.yul\":1896:1900   */\n  0x24\n    /* \"#utility.yul\":1893:1894   */\n  0x00\n    /* \"#utility.yul\":1886:1901   */\n  revert\n    /* \"blockjack.sol\":163:5996  contract BlockJack {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"blockjack.sol\":163:5996  contract BlockJack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb1c9fe6e\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xb1c9fe6e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc2897b10\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe69828b1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xefa2e37f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf120daf3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf90f4560\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x1d73c64c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ae3594a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x553df021\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x89a78f1a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9de2ee21\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"blockjack.sol\":386:410  uint16 public initialBet */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":4177:4415  function hit() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"blockjack.sol\":1589:2285  function deal() public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"blockjack.sol\":775:814  mapping(address => uint256) public bets */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":454:475  address public dealer */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":883:901  Phase public phase */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":4421:4661  function stand() public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"blockjack.sol\":416:448  uint16 public roundSessionExpiry */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":730:769  mapping(address => Card[]) public hands */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":820:877  mapping(address => PlayerDecision) public playerDecisions */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"blockjack.sol\":1262:1583  function placeBet() public payable {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"blockjack.sol\":386:410  uint16 public initialBet */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":4177:4415  function hit() public {... */\n    tag_21:\n        /* \"blockjack.sol\":4261:4281  PlayerDecision.Stand */\n      0x02\n        /* \"blockjack.sol\":4230:4281  playerDecisions[msg.sender] != PlayerDecision.Stand */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n    tag_65:\n        /* \"blockjack.sol\":4230:4245  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":4230:4257  playerDecisions[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":4246:4256  msg.sender */\n      caller\n        /* \"blockjack.sol\":4230:4257  playerDecisions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":4230:4281  playerDecisions[msg.sender] != PlayerDecision.Stand */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_68\n      jumpi\n      tag_69\n      tag_67\n      jump\t// in\n    tag_69:\n    tag_68:\n      sub\n        /* \"blockjack.sol\":4209:4342  require(... */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"blockjack.sol\":4352:4378  decide(PlayerDecision.Hit) */\n      tag_73\n        /* \"blockjack.sol\":4359:4377  PlayerDecision.Hit */\n      0x01\n        /* \"blockjack.sol\":4352:4358  decide */\n      tag_74\n        /* \"blockjack.sol\":4352:4378  decide(PlayerDecision.Hit) */\n      jump\t// in\n    tag_73:\n        /* \"blockjack.sol\":4397:4407  msg.sender */\n      caller\n        /* \"blockjack.sol\":4393:4408  Hit(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7eddbf27696273b85afcfa4ac444b5cbe6a9cb035d808d8e28b25c1fa694a659\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"blockjack.sol\":4177:4415  function hit() public {... */\n      jump\t// out\n        /* \"blockjack.sol\":1589:2285  function deal() public {... */\n    tag_24:\n        /* \"blockjack.sol\":1644:1650  dealer */\n      0x00\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":1630:1650  msg.sender == dealer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":1630:1640  msg.sender */\n      caller\n        /* \"blockjack.sol\":1630:1650  msg.sender == dealer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"blockjack.sol\":1622:1679  require(msg.sender == dealer, \"Only the dealer can deal\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"blockjack.sol\":1729:1748  currentRoundTimeout */\n      sload(0x01)\n        /* \"blockjack.sol\":1710:1725  block.timestamp */\n      timestamp\n        /* \"blockjack.sol\":1710:1748  block.timestamp >= currentRoundTimeout */\n      lt\n      iszero\n        /* \"blockjack.sol\":1689:1805  require(... */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"blockjack.sol\":1846:1861  Phase.PlaceBets */\n      0x00\n        /* \"blockjack.sol\":1837:1861  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      tag_83\n      tag_67\n      jump\t// in\n    tag_83:\n    tag_82:\n        /* \"blockjack.sol\":1837:1842  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":1837:1861  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_84\n      jumpi\n      tag_85\n      tag_67\n      jump\t// in\n    tag_85:\n    tag_84:\n      eq\n        /* \"blockjack.sol\":1837:1890  phase == Phase.PlaceBets || phase == Phase.HitOrStand */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"blockjack.sol\":1874:1890  Phase.HitOrStand */\n      0x01\n        /* \"blockjack.sol\":1865:1890  phase == Phase.HitOrStand */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_88\n      tag_67\n      jump\t// in\n    tag_88:\n    tag_87:\n        /* \"blockjack.sol\":1865:1870  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":1865:1890  phase == Phase.HitOrStand */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      tag_90\n      tag_67\n      jump\t// in\n    tag_90:\n    tag_89:\n      eq\n        /* \"blockjack.sol\":1837:1890  phase == Phase.PlaceBets || phase == Phase.HitOrStand */\n    tag_86:\n        /* \"blockjack.sol\":1816:1942  require(... */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"blockjack.sol\":1966:1981  Phase.PlaceBets */\n      0x00\n        /* \"blockjack.sol\":1957:1981  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_94\n      jumpi\n      tag_95\n      tag_67\n      jump\t// in\n    tag_95:\n    tag_94:\n        /* \"blockjack.sol\":1957:1962  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":1957:1981  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      tag_97\n      tag_67\n      jump\t// in\n    tag_97:\n    tag_96:\n      sub\n        /* \"blockjack.sol\":1953:2210  if (phase == Phase.PlaceBets) {... */\n      tag_98\n      jumpi\n        /* \"blockjack.sol\":1997:2014  dealInitialHand() */\n      tag_99\n        /* \"blockjack.sol\":1997:2012  dealInitialHand */\n      tag_100\n        /* \"blockjack.sol\":1997:2014  dealInitialHand() */\n      jump\t// in\n    tag_99:\n        /* \"blockjack.sol\":2028:2046  dealCardToDealer() */\n      tag_101\n        /* \"blockjack.sol\":2028:2044  dealCardToDealer */\n      tag_102\n        /* \"blockjack.sol\":2028:2046  dealCardToDealer() */\n      jump\t// in\n    tag_101:\n        /* \"blockjack.sol\":2068:2084  Phase.HitOrStand */\n      0x01\n        /* \"blockjack.sol\":2060:2065  phase */\n      0x07\n      0x00\n        /* \"blockjack.sol\":2060:2084  phase = Phase.HitOrStand */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_103\n      jumpi\n      tag_104\n      tag_67\n      jump\t// in\n    tag_104:\n    tag_103:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":1953:2210  if (phase == Phase.PlaceBets) {... */\n      jump(tag_105)\n    tag_98:\n        /* \"blockjack.sol\":2114:2130  Phase.HitOrStand */\n      0x01\n        /* \"blockjack.sol\":2105:2130  phase == Phase.HitOrStand */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_106\n      jumpi\n      tag_107\n      tag_67\n      jump\t// in\n    tag_107:\n    tag_106:\n        /* \"blockjack.sol\":2105:2110  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":2105:2130  phase == Phase.HitOrStand */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_108\n      jumpi\n      tag_109\n      tag_67\n      jump\t// in\n    tag_109:\n    tag_108:\n      sub\n        /* \"blockjack.sol\":2101:2210  if (phase == Phase.HitOrStand) {... */\n      tag_110\n      jumpi\n        /* \"blockjack.sol\":2146:2166  dealCardsToPlayers() */\n      tag_111\n        /* \"blockjack.sol\":2146:2164  dealCardsToPlayers */\n      tag_112\n        /* \"blockjack.sol\":2146:2166  dealCardsToPlayers() */\n      jump\t// in\n    tag_111:\n        /* \"blockjack.sol\":2180:2199  finalDealerReveal() */\n      tag_113\n        /* \"blockjack.sol\":2180:2197  finalDealerReveal */\n      tag_114\n        /* \"blockjack.sol\":2180:2199  finalDealerReveal() */\n      jump\t// in\n    tag_113:\n        /* \"blockjack.sol\":2101:2210  if (phase == Phase.HitOrStand) {... */\n    tag_110:\n        /* \"blockjack.sol\":1953:2210  if (phase == Phase.PlaceBets) {... */\n    tag_105:\n        /* \"blockjack.sol\":2260:2278  roundSessionExpiry */\n      0x00\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"blockjack.sol\":2242:2278  block.timestamp + roundSessionExpiry */\n      0xffff\n      and\n        /* \"blockjack.sol\":2242:2257  block.timestamp */\n      timestamp\n        /* \"blockjack.sol\":2242:2278  block.timestamp + roundSessionExpiry */\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"blockjack.sol\":2220:2239  currentRoundTimeout */\n      0x01\n        /* \"blockjack.sol\":2220:2278  currentRoundTimeout = block.timestamp + roundSessionExpiry */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":1589:2285  function deal() public {... */\n      jump\t// out\n        /* \"blockjack.sol\":775:814  mapping(address => uint256) public bets */\n    tag_29:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":454:475  address public dealer */\n    tag_34:\n      0x00\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":883:901  Phase public phase */\n    tag_39:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":4421:4661  function stand() public {... */\n    tag_44:\n        /* \"blockjack.sol\":4507:4525  PlayerDecision.Hit */\n      0x01\n        /* \"blockjack.sol\":4476:4525  playerDecisions[msg.sender] != PlayerDecision.Hit */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_118\n      jumpi\n      tag_119\n      tag_67\n      jump\t// in\n    tag_119:\n    tag_118:\n        /* \"blockjack.sol\":4476:4491  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":4476:4503  playerDecisions[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":4492:4502  msg.sender */\n      caller\n        /* \"blockjack.sol\":4476:4503  playerDecisions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":4476:4525  playerDecisions[msg.sender] != PlayerDecision.Hit */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_67\n      jump\t// in\n    tag_121:\n    tag_120:\n      sub\n        /* \"blockjack.sol\":4455:4584  require(... */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"blockjack.sol\":4594:4622  decide(PlayerDecision.Stand) */\n      tag_125\n        /* \"blockjack.sol\":4601:4621  PlayerDecision.Stand */\n      0x02\n        /* \"blockjack.sol\":4594:4600  decide */\n      tag_74\n        /* \"blockjack.sol\":4594:4622  decide(PlayerDecision.Stand) */\n      jump\t// in\n    tag_125:\n        /* \"blockjack.sol\":4643:4653  msg.sender */\n      caller\n        /* \"blockjack.sol\":4637:4654  Stand(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc20375\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"blockjack.sol\":4421:4661  function stand() public {... */\n      jump\t// out\n        /* \"blockjack.sol\":416:448  uint16 public roundSessionExpiry */\n    tag_47:\n      0x00\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":730:769  mapping(address => Card[]) public hands */\n    tag_53:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":820:877  mapping(address => PlayerDecision) public playerDecisions */\n    tag_59:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"blockjack.sol\":1262:1583  function placeBet() public payable {... */\n    tag_63:\n        /* \"blockjack.sol\":1324:1339  Phase.PlaceBets */\n      0x00\n        /* \"blockjack.sol\":1315:1339  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_129\n      jumpi\n      tag_130\n      tag_67\n      jump\t// in\n    tag_130:\n    tag_129:\n        /* \"blockjack.sol\":1315:1320  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":1315:1339  phase == Phase.PlaceBets */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_67\n      jump\t// in\n    tag_132:\n    tag_131:\n      eq\n        /* \"blockjack.sol\":1307:1371  require(phase == Phase.PlaceBets, \"Not taking any new players.\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"blockjack.sol\":1402:1412  initialBet */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"blockjack.sol\":1389:1412  msg.value == initialBet */\n      0xffff\n      and\n        /* \"blockjack.sol\":1389:1398  msg.value */\n      callvalue\n        /* \"blockjack.sol\":1389:1412  msg.value == initialBet */\n      eq\n        /* \"blockjack.sol\":1381:1439  require(msg.value == initialBet, \"Incorrect initial bet.\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"blockjack.sol\":1468:1477  msg.value */\n      callvalue\n        /* \"blockjack.sol\":1449:1453  bets */\n      0x05\n        /* \"blockjack.sol\":1449:1465  bets[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":1454:1464  msg.sender */\n      caller\n        /* \"blockjack.sol\":1449:1465  bets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":1449:1477  bets[msg.sender] = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":1487:1494  players */\n      0x03\n        /* \"blockjack.sol\":1500:1510  msg.sender */\n      caller\n        /* \"blockjack.sol\":1487:1511  players.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":1552:1576  PlayerDecision.Undecided */\n      0x00\n        /* \"blockjack.sol\":1522:1537  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":1522:1549  playerDecisions[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":1538:1548  msg.sender */\n      caller\n        /* \"blockjack.sol\":1522:1549  playerDecisions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"blockjack.sol\":1522:1576  playerDecisions[msg.sender] = PlayerDecision.Undecided */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      tag_141\n      tag_67\n      jump\t// in\n    tag_141:\n    tag_140:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":1262:1583  function placeBet() public payable {... */\n      jump\t// out\n        /* \"blockjack.sol\":4667:5104  function decide(PlayerDecision decision) private {... */\n    tag_74:\n        /* \"blockjack.sol\":4754:4755  0 */\n      0x00\n        /* \"blockjack.sol\":4734:4738  bets */\n      0x05\n        /* \"blockjack.sol\":4734:4750  bets[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":4739:4749  msg.sender */\n      caller\n        /* \"blockjack.sol\":4734:4750  bets[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"blockjack.sol\":4734:4755  bets[msg.sender] != 0 */\n      sub\n        /* \"blockjack.sol\":4726:4789  require(bets[msg.sender] != 0, \"Player didn't place any bets.\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"blockjack.sol\":4829:4845  Phase.HitOrStand */\n      0x01\n        /* \"blockjack.sol\":4820:4845  phase == Phase.HitOrStand */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_147\n      tag_67\n      jump\t// in\n    tag_147:\n    tag_146:\n        /* \"blockjack.sol\":4820:4825  phase */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":4820:4845  phase == Phase.HitOrStand */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_67\n      jump\t// in\n    tag_149:\n    tag_148:\n      eq\n        /* \"blockjack.sol\":4799:4915  require(... */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"blockjack.sol\":4965:4984  currentRoundTimeout */\n      sload(0x01)\n        /* \"blockjack.sol\":4946:4961  block.timestamp */\n      timestamp\n        /* \"blockjack.sol\":4946:4984  block.timestamp <= currentRoundTimeout */\n      gt\n      iszero\n        /* \"blockjack.sol\":4925:5048  require(... */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"blockjack.sol\":5089:5097  decision */\n      dup1\n        /* \"blockjack.sol\":5059:5074  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":5059:5086  playerDecisions[msg.sender] */\n      0x00\n        /* \"blockjack.sol\":5075:5085  msg.sender */\n      caller\n        /* \"blockjack.sol\":5059:5086  playerDecisions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"blockjack.sol\":5059:5097  playerDecisions[msg.sender] = decision */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_156\n      jumpi\n      tag_157\n      tag_67\n      jump\t// in\n    tag_157:\n    tag_156:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":4667:5104  function decide(PlayerDecision decision) private {... */\n      pop\n      jump\t// out\n        /* \"blockjack.sol\":3570:3825  function dealInitialHand() private {... */\n    tag_100:\n        /* \"blockjack.sol\":3620:3629  uint256 i */\n      0x00\n        /* \"blockjack.sol\":3615:3819  for (uint256 i = 0; i < players.length; i++) {... */\n    tag_159:\n        /* \"blockjack.sol\":3639:3646  players */\n      0x03\n        /* \"blockjack.sol\":3639:3653  players.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"blockjack.sol\":3635:3636  i */\n      dup2\n        /* \"blockjack.sol\":3635:3653  i < players.length */\n      lt\n        /* \"blockjack.sol\":3615:3819  for (uint256 i = 0; i < players.length; i++) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"blockjack.sol\":3674:3695  address playerAddress */\n      0x00\n        /* \"blockjack.sol\":3698:3705  players */\n      0x03\n        /* \"blockjack.sol\":3706:3707  i */\n      dup3\n        /* \"blockjack.sol\":3698:3708  players[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n    tag_162:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":3674:3708  address playerAddress = players[i] */\n      swap1\n      pop\n        /* \"blockjack.sol\":3722:3727  hands */\n      0x04\n        /* \"blockjack.sol\":3722:3742  hands[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":3728:3741  playerAddress */\n      dup3\n        /* \"blockjack.sol\":3722:3742  hands[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":3748:3757  getCard() */\n      tag_166\n        /* \"blockjack.sol\":3748:3755  getCard */\n      tag_167\n        /* \"blockjack.sol\":3748:3757  getCard() */\n      jump\t// in\n    tag_166:\n        /* \"blockjack.sol\":3722:3758  hands[playerAddress].push(getCard()) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_169\n      jumpi\n      tag_170\n      tag_67\n      jump\t// in\n    tag_170:\n    tag_169:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":3772:3777  hands */\n      0x04\n        /* \"blockjack.sol\":3772:3792  hands[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":3778:3791  playerAddress */\n      dup3\n        /* \"blockjack.sol\":3772:3792  hands[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":3798:3807  getCard() */\n      tag_171\n        /* \"blockjack.sol\":3798:3805  getCard */\n      tag_167\n        /* \"blockjack.sol\":3798:3807  getCard() */\n      jump\t// in\n    tag_171:\n        /* \"blockjack.sol\":3772:3808  hands[playerAddress].push(getCard()) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_173\n      jumpi\n      tag_174\n      tag_67\n      jump\t// in\n    tag_174:\n    tag_173:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":3660:3819  {... */\n      pop\n        /* \"blockjack.sol\":3655:3658  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"blockjack.sol\":3615:3819  for (uint256 i = 0; i < players.length; i++) {... */\n      jump(tag_159)\n    tag_160:\n      pop\n        /* \"blockjack.sol\":3570:3825  function dealInitialHand() private {... */\n      jump\t// out\n        /* \"blockjack.sol\":3831:3913  function dealCardToDealer() private {... */\n    tag_102:\n        /* \"blockjack.sol\":3877:3882  hands */\n      0x04\n        /* \"blockjack.sol\":3877:3890  hands[dealer] */\n      0x00\n        /* \"blockjack.sol\":3883:3889  dealer */\n      dup1\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":3877:3890  hands[dealer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":3896:3905  getCard() */\n      tag_176\n        /* \"blockjack.sol\":3896:3903  getCard */\n      tag_167\n        /* \"blockjack.sol\":3896:3905  getCard() */\n      jump\t// in\n    tag_176:\n        /* \"blockjack.sol\":3877:3906  hands[dealer].push(getCard()) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_178\n      jumpi\n      tag_179\n      tag_67\n      jump\t// in\n    tag_179:\n    tag_178:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":3831:3913  function dealCardToDealer() private {... */\n      jump\t// out\n        /* \"blockjack.sol\":2566:3564  function dealCardsToPlayers() private {... */\n    tag_112:\n        /* \"blockjack.sol\":2619:2628  uint256 i */\n      0x00\n        /* \"blockjack.sol\":2614:3558  for (uint256 i = 0; i < players.length; i++) {... */\n    tag_181:\n        /* \"blockjack.sol\":2638:2645  players */\n      0x03\n        /* \"blockjack.sol\":2638:2652  players.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"blockjack.sol\":2634:2635  i */\n      dup2\n        /* \"blockjack.sol\":2634:2652  i < players.length */\n      lt\n        /* \"blockjack.sol\":2614:3558  for (uint256 i = 0; i < players.length; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"blockjack.sol\":2673:2694  address playerAddress */\n      0x00\n        /* \"blockjack.sol\":2697:2704  players */\n      0x03\n        /* \"blockjack.sol\":2705:2706  i */\n      dup3\n        /* \"blockjack.sol\":2697:2707  players[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_164\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":2673:2707  address playerAddress = players[i] */\n      swap1\n      pop\n        /* \"blockjack.sol\":2721:2744  PlayerDecision decision */\n      0x00\n        /* \"blockjack.sol\":2747:2762  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":2747:2777  playerDecisions[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":2763:2776  playerAddress */\n      dup4\n        /* \"blockjack.sol\":2747:2777  playerDecisions[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"blockjack.sol\":2721:2777  PlayerDecision decision = playerDecisions[playerAddress] */\n      swap1\n      pop\n        /* \"blockjack.sol\":2807:2825  PlayerDecision.Hit */\n      0x01\n        /* \"blockjack.sol\":2795:2825  decision == PlayerDecision.Hit */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_67\n      jump\t// in\n    tag_188:\n    tag_187:\n        /* \"blockjack.sol\":2795:2803  decision */\n      dup2\n        /* \"blockjack.sol\":2795:2825  decision == PlayerDecision.Hit */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_67\n      jump\t// in\n    tag_190:\n    tag_189:\n      sub\n        /* \"blockjack.sol\":2791:3548  if (decision == PlayerDecision.Hit) {... */\n      tag_191\n      jumpi\n        /* \"blockjack.sol\":2845:2850  hands */\n      0x04\n        /* \"blockjack.sol\":2845:2865  hands[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":2851:2864  playerAddress */\n      dup4\n        /* \"blockjack.sol\":2845:2865  hands[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":2871:2880  getCard() */\n      tag_192\n        /* \"blockjack.sol\":2871:2878  getCard */\n      tag_167\n        /* \"blockjack.sol\":2871:2880  getCard() */\n      jump\t// in\n    tag_192:\n        /* \"blockjack.sol\":2845:2881  hands[playerAddress].push(getCard()) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_67\n      jump\t// in\n    tag_195:\n    tag_194:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":327:329  21 */\n      0x15\n        /* \"blockjack.sol\":2903:2934  sumOfHand(hands[playerAddress]) */\n      tag_196\n        /* \"blockjack.sol\":2913:2918  hands */\n      0x04\n        /* \"blockjack.sol\":2913:2933  hands[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":2919:2932  playerAddress */\n      dup6\n        /* \"blockjack.sol\":2913:2933  hands[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":2903:2934  sumOfHand(hands[playerAddress]) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap1\n    tag_198:\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_200\n      tag_67\n      jump\t// in\n    tag_200:\n    tag_199:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      dup3\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      dup3\n      mul\n      swap2\n      pop\n      dup1\n      dup5\n      gt\n      tag_198\n      jumpi\n      swap1\n      pop\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"blockjack.sol\":2903:2912  sumOfHand */\n      tag_201\n        /* \"blockjack.sol\":2903:2934  sumOfHand(hands[playerAddress]) */\n      jump\t// in\n    tag_196:\n        /* \"blockjack.sol\":2903:2947  sumOfHand(hands[playerAddress]) > BLACK_JACK */\n      gt\n        /* \"blockjack.sol\":2899:3262  if (sumOfHand(hands[playerAddress]) > BLACK_JACK) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"blockjack.sol\":3050:3063  playerAddress */\n      dup2\n        /* \"blockjack.sol\":3045:3064  Bust(playerAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"blockjack.sol\":3119:3139  PlayerDecision.Stand */\n      0x02\n        /* \"blockjack.sol\":3086:3101  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":3086:3116  playerDecisions[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":3102:3115  playerAddress */\n      dup5\n        /* \"blockjack.sol\":3086:3116  playerDecisions[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"blockjack.sol\":3086:3139  playerDecisions[playerAddress] = PlayerDecision.Stand */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_204\n      tag_67\n      jump\t// in\n    tag_204:\n    tag_203:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":2899:3262  if (sumOfHand(hands[playerAddress]) > BLACK_JACK) {... */\n      jump(tag_205)\n    tag_202:\n        /* \"blockjack.sol\":3219:3243  PlayerDecision.Undecided */\n      0x00\n        /* \"blockjack.sol\":3186:3201  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":3186:3216  playerDecisions[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":3202:3215  playerAddress */\n      dup5\n        /* \"blockjack.sol\":3186:3216  playerDecisions[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"blockjack.sol\":3186:3243  playerDecisions[playerAddress] = PlayerDecision.Undecided */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_206\n      jumpi\n      tag_207\n      tag_67\n      jump\t// in\n    tag_207:\n    tag_206:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":2899:3262  if (sumOfHand(hands[playerAddress]) > BLACK_JACK) {... */\n    tag_205:\n        /* \"blockjack.sol\":2791:3548  if (decision == PlayerDecision.Hit) {... */\n      jump(tag_208)\n    tag_191:\n        /* \"blockjack.sol\":3298:3322  PlayerDecision.Undecided */\n      0x00\n        /* \"blockjack.sol\":3286:3322  decision == PlayerDecision.Undecided */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_210\n      tag_67\n      jump\t// in\n    tag_210:\n    tag_209:\n        /* \"blockjack.sol\":3286:3294  decision */\n      dup2\n        /* \"blockjack.sol\":3286:3322  decision == PlayerDecision.Undecided */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_211\n      jumpi\n      tag_212\n      tag_67\n      jump\t// in\n    tag_212:\n    tag_211:\n      sub\n        /* \"blockjack.sol\":3282:3548  if (decision == PlayerDecision.Undecided) {... */\n      tag_213\n      jumpi\n        /* \"blockjack.sol\":3448:3461  playerAddress */\n      dup2\n        /* \"blockjack.sol\":3442:3462  Stand(playerAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc20375\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"blockjack.sol\":3513:3533  PlayerDecision.Stand */\n      0x02\n        /* \"blockjack.sol\":3480:3495  playerDecisions */\n      0x06\n        /* \"blockjack.sol\":3480:3510  playerDecisions[playerAddress] */\n      0x00\n        /* \"blockjack.sol\":3496:3509  playerAddress */\n      dup5\n        /* \"blockjack.sol\":3480:3510  playerDecisions[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"blockjack.sol\":3480:3533  playerDecisions[playerAddress] = PlayerDecision.Stand */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_214\n      jumpi\n      tag_215\n      tag_67\n      jump\t// in\n    tag_215:\n    tag_214:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":3282:3548  if (decision == PlayerDecision.Undecided) {... */\n    tag_213:\n        /* \"blockjack.sol\":2791:3548  if (decision == PlayerDecision.Hit) {... */\n    tag_208:\n        /* \"blockjack.sol\":2659:3558  {... */\n      pop\n      pop\n        /* \"blockjack.sol\":2654:2657  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"blockjack.sol\":2614:3558  for (uint256 i = 0; i < players.length; i++) {... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"blockjack.sol\":2566:3564  function dealCardsToPlayers() private {... */\n      jump\t// out\n        /* \"blockjack.sol\":3919:4171  function finalDealerReveal() private {... */\n    tag_114:\n        /* \"blockjack.sol\":3966:4071  while (sumOfHand(hands[dealer]) < DEALER_DECISION) {... */\n    tag_217:\n        /* \"blockjack.sol\":378:380  17 */\n      0x11\n        /* \"blockjack.sol\":3973:3997  sumOfHand(hands[dealer]) */\n      tag_219\n        /* \"blockjack.sol\":3983:3988  hands */\n      0x04\n        /* \"blockjack.sol\":3983:3996  hands[dealer] */\n      0x00\n        /* \"blockjack.sol\":3989:3995  dealer */\n      dup1\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":3983:3996  hands[dealer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":3973:3997  sumOfHand(hands[dealer]) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap1\n    tag_221:\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_222\n      jumpi\n      tag_223\n      tag_67\n      jump\t// in\n    tag_223:\n    tag_222:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      dup3\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      dup3\n      mul\n      swap2\n      pop\n      dup1\n      dup5\n      gt\n      tag_221\n      jumpi\n      swap1\n      pop\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"blockjack.sol\":3973:3982  sumOfHand */\n      tag_201\n        /* \"blockjack.sol\":3973:3997  sumOfHand(hands[dealer]) */\n      jump\t// in\n    tag_219:\n        /* \"blockjack.sol\":3973:4015  sumOfHand(hands[dealer]) < DEALER_DECISION */\n      lt\n        /* \"blockjack.sol\":3966:4071  while (sumOfHand(hands[dealer]) < DEALER_DECISION) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"blockjack.sol\":4031:4036  hands */\n      0x04\n        /* \"blockjack.sol\":4031:4044  hands[dealer] */\n      0x00\n        /* \"blockjack.sol\":4037:4043  dealer */\n      dup1\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":4031:4044  hands[dealer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":4050:4059  getCard() */\n      tag_224\n        /* \"blockjack.sol\":4050:4057  getCard */\n      tag_167\n        /* \"blockjack.sol\":4050:4059  getCard() */\n      jump\t// in\n    tag_224:\n        /* \"blockjack.sol\":4031:4060  hands[dealer].push(getCard()) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_226\n      jumpi\n      tag_227\n      tag_67\n      jump\t// in\n    tag_227:\n    tag_226:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"blockjack.sol\":3966:4071  while (sumOfHand(hands[dealer]) < DEALER_DECISION) {... */\n      jump(tag_217)\n    tag_218:\n        /* \"blockjack.sol\":327:329  21 */\n      0x15\n        /* \"blockjack.sol\":4084:4108  sumOfHand(hands[dealer]) */\n      tag_228\n        /* \"blockjack.sol\":4094:4099  hands */\n      0x04\n        /* \"blockjack.sol\":4094:4107  hands[dealer] */\n      0x00\n        /* \"blockjack.sol\":4100:4106  dealer */\n      dup1\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":4094:4107  hands[dealer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"blockjack.sol\":4084:4108  sumOfHand(hands[dealer]) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap1\n    tag_230:\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_67\n      jump\t// in\n    tag_232:\n    tag_231:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      dup3\n      0x00\n      add\n      div\n      swap3\n      dup4\n      add\n      swap3\n      0x01\n      sub\n      dup3\n      mul\n      swap2\n      pop\n      dup1\n      dup5\n      gt\n      tag_230\n      jumpi\n      swap1\n      pop\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"blockjack.sol\":4084:4093  sumOfHand */\n      tag_201\n        /* \"blockjack.sol\":4084:4108  sumOfHand(hands[dealer]) */\n      jump\t// in\n    tag_228:\n        /* \"blockjack.sol\":4084:4121  sumOfHand(hands[dealer]) > BLACK_JACK */\n      gt\n        /* \"blockjack.sol\":4080:4165  if (sumOfHand(hands[dealer]) > BLACK_JACK) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"blockjack.sol\":4147:4153  dealer */\n      0x00\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"blockjack.sol\":4142:4154  Bust(dealer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"blockjack.sol\":4080:4165  if (sumOfHand(hands[dealer]) > BLACK_JACK) {... */\n    tag_233:\n        /* \"blockjack.sol\":3919:4171  function finalDealerReveal() private {... */\n      jump\t// out\n        /* \"blockjack.sol\":2291:2406  function getCard() private view returns (Card card) {... */\n    tag_167:\n        /* \"blockjack.sol\":2332:2341  Card card */\n      0x00\n        /* \"blockjack.sol\":569:571  13 */\n      0x0d\n        /* \"blockjack.sol\":2365:2398  getRandomNumber() % numberOfCards */\n      0xff\n      and\n        /* \"blockjack.sol\":2365:2382  getRandomNumber() */\n      tag_235\n        /* \"blockjack.sol\":2365:2380  getRandomNumber */\n      tag_236\n        /* \"blockjack.sol\":2365:2382  getRandomNumber() */\n      jump\t// in\n    tag_235:\n        /* \"blockjack.sol\":2365:2398  getRandomNumber() % numberOfCards */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"blockjack.sol\":2360:2399  Card(getRandomNumber() % numberOfCards) */\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_239\n      jumpi\n      tag_240\n      tag_67\n      jump\t// in\n    tag_240:\n    tag_239:\n        /* \"blockjack.sol\":2353:2399  return Card(getRandomNumber() % numberOfCards) */\n      swap1\n      pop\n        /* \"blockjack.sol\":2291:2406  function getCard() private view returns (Card card) {... */\n      swap1\n      jump\t// out\n        /* \"blockjack.sol\":5110:5650  function sumOfHand(Card[] memory hand)... */\n    tag_201:\n        /* \"blockjack.sol\":5195:5211  uint256 totalSum */\n      0x00\n        /* \"blockjack.sol\":5227:5243  uint256 aceCount */\n      dup1\n        /* \"blockjack.sol\":5246:5247  0 */\n      0x00\n        /* \"blockjack.sol\":5227:5247  uint256 aceCount = 0 */\n      swap1\n      pop\n        /* \"blockjack.sol\":5262:5271  uint256 i */\n      0x00\n        /* \"blockjack.sol\":5257:5492  for (uint256 i = 0; i < hand.length; i++) {... */\n    tag_242:\n        /* \"blockjack.sol\":5281:5285  hand */\n      dup4\n        /* \"blockjack.sol\":5281:5292  hand.length */\n      mload\n        /* \"blockjack.sol\":5277:5278  i */\n      dup2\n        /* \"blockjack.sol\":5277:5292  i < hand.length */\n      lt\n        /* \"blockjack.sol\":5257:5492  for (uint256 i = 0; i < hand.length; i++) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"blockjack.sol\":5325:5432  Math.min(... */\n      tag_245\n        /* \"blockjack.sol\":232:233  1 */\n      0x01\n        /* \"blockjack.sol\":5359:5363  hand */\n      dup6\n        /* \"blockjack.sol\":5364:5365  i */\n      dup4\n        /* \"blockjack.sol\":5359:5366  hand[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_164\n      jump\t// in\n    tag_247:\n    tag_246:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"blockjack.sol\":5351:5367  uint256(hand[i]) */\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_249\n      tag_67\n      jump\t// in\n    tag_249:\n    tag_248:\n        /* \"blockjack.sol\":5351:5386  uint256(hand[i]) + ZERO_INDEX_SHIFT */\n      tag_250\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_250:\n        /* \"blockjack.sol\":281:283  10 */\n      0x0a\n        /* \"blockjack.sol\":5325:5333  Math.min */\n      tag_251\n        /* \"blockjack.sol\":5325:5432  Math.min(... */\n      jump\t// in\n    tag_245:\n        /* \"blockjack.sol\":5313:5432  totalSum += Math.min(... */\n      dup4\n      tag_252\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_252:\n      swap3\n      pop\n        /* \"blockjack.sol\":5461:5469  Card.Ace */\n      0x00\n        /* \"blockjack.sol\":5450:5469  hand[i] == Card.Ace */\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_253\n      jumpi\n      tag_254\n      tag_67\n      jump\t// in\n    tag_254:\n    tag_253:\n        /* \"blockjack.sol\":5450:5454  hand */\n      dup5\n        /* \"blockjack.sol\":5455:5456  i */\n      dup3\n        /* \"blockjack.sol\":5450:5457  hand[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_256\n      tag_164\n      jump\t// in\n    tag_256:\n    tag_255:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"blockjack.sol\":5450:5469  hand[i] == Card.Ace */\n      0x0c\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_258\n      tag_67\n      jump\t// in\n    tag_258:\n    tag_257:\n      sub\n        /* \"blockjack.sol\":5446:5481  if (hand[i] == Card.Ace) aceCount++ */\n      tag_259\n      jumpi\n        /* \"blockjack.sol\":5471:5481  aceCount++ */\n      dup2\n      dup1\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n        /* \"blockjack.sol\":5446:5481  if (hand[i] == Card.Ace) aceCount++ */\n    tag_259:\n        /* \"blockjack.sol\":5294:5297  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"blockjack.sol\":5257:5492  for (uint256 i = 0; i < hand.length; i++) {... */\n      jump(tag_242)\n    tag_243:\n      pop\n        /* \"blockjack.sol\":5502:5618  while (aceCount > 0 && totalSum + 10 <= BLACK_JACK) {... */\n    tag_262:\n        /* \"blockjack.sol\":5520:5521  0 */\n      0x00\n        /* \"blockjack.sol\":5509:5517  aceCount */\n      dup2\n        /* \"blockjack.sol\":5509:5521  aceCount > 0 */\n      gt\n        /* \"blockjack.sol\":5509:5552  aceCount > 0 && totalSum + 10 <= BLACK_JACK */\n      dup1\n      iszero\n      tag_264\n      jumpi\n      pop\n        /* \"blockjack.sol\":327:329  21 */\n      0x15\n        /* \"blockjack.sol\":5536:5538  10 */\n      0x0a\n        /* \"blockjack.sol\":5525:5533  totalSum */\n      dup4\n        /* \"blockjack.sol\":5525:5538  totalSum + 10 */\n      tag_265\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_265:\n        /* \"blockjack.sol\":5525:5552  totalSum + 10 <= BLACK_JACK */\n      gt\n      iszero\n        /* \"blockjack.sol\":5509:5552  aceCount > 0 && totalSum + 10 <= BLACK_JACK */\n    tag_264:\n        /* \"blockjack.sol\":5502:5618  while (aceCount > 0 && totalSum + 10 <= BLACK_JACK) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"blockjack.sol\":5580:5582  10 */\n      0x0a\n        /* \"blockjack.sol\":5568:5582  totalSum += 10 */\n      dup3\n      tag_266\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_266:\n      swap2\n      pop\n        /* \"blockjack.sol\":5597:5607  aceCount-- */\n      dup1\n      dup1\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      swap2\n      pop\n      pop\n        /* \"blockjack.sol\":5502:5618  while (aceCount > 0 && totalSum + 10 <= BLACK_JACK) {... */\n      jump(tag_262)\n    tag_263:\n        /* \"blockjack.sol\":5628:5643  return totalSum */\n      pop\n        /* \"blockjack.sol\":5110:5650  function sumOfHand(Card[] memory hand)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"blockjack.sol\":2412:2560  function getRandomNumber() internal view returns (uint256) {... */\n    tag_236:\n        /* \"blockjack.sol\":2462:2469  uint256 */\n      0x00\n        /* \"blockjack.sol\":2523:2533  msg.sender */\n      caller\n        /* \"blockjack.sol\":2535:2550  block.timestamp */\n      timestamp\n        /* \"blockjack.sol\":2506:2551  abi.encodePacked(msg.sender, block.timestamp) */\n      add(0x20, mload(0x40))\n      tag_270\n      swap3\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"blockjack.sol\":2496:2552  keccak256(abi.encodePacked(msg.sender, block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"blockjack.sol\":2488:2553  uint256(keccak256(abi.encodePacked(msg.sender, block.timestamp))) */\n      0x00\n      shr\n        /* \"blockjack.sol\":2481:2553  return uint256(keccak256(abi.encodePacked(msg.sender, block.timestamp))) */\n      swap1\n      pop\n        /* \"blockjack.sol\":2412:2560  function getRandomNumber() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3371:3482  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3429:3436  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3455:3475  ternary(a < b, a, b) */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3467:3468  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3463:3464  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3463:3468  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3470:3471  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3473:3474  b */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3455:3462  ternary */\n      tag_274\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3455:3475  ternary(a < b, a, b) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3448:3475  return ternary(a < b, a, b) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3371:3482  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2825:3119  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2903:2910  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3075:3101  SafeCast.toUint(condition) */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3091:3100  condition */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3075:3090  SafeCast.toUint */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3075:3101  SafeCast.toUint(condition) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3070:3071  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3066:3067  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3066:3071  a ^ b */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3065:3101  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3060:3061  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3060:3102  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":3053:3102  return b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":2825:3119  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34842:34851  uint256 u */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34921:34922  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34914:34923  iszero(b) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34907:34924  iszero(iszero(b)) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34902:34924  u := iszero(iszero(b)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_279:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:217   */\n    tag_280:\n        /* \"#utility.yul\":187:210   */\n      tag_337\n        /* \"#utility.yul\":204:209   */\n      dup2\n        /* \"#utility.yul\":187:210   */\n      tag_279\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":182:185   */\n      dup3\n        /* \"#utility.yul\":175:211   */\n      mstore\n        /* \"#utility.yul\":102:217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":223:441   */\n    tag_18:\n        /* \"#utility.yul\":314:318   */\n      0x00\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":341:350   */\n      dup3\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"#utility.yul\":329:355   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:434   */\n      tag_339\n        /* \"#utility.yul\":431:432   */\n      0x00\n        /* \"#utility.yul\":420:429   */\n      dup4\n        /* \"#utility.yul\":416:433   */\n      add\n        /* \"#utility.yul\":407:413   */\n      dup5\n        /* \"#utility.yul\":365:434   */\n      tag_280\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":223:441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":528:645   */\n    tag_282:\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":634:635   */\n      dup1\n        /* \"#utility.yul\":627:639   */\n      revert\n        /* \"#utility.yul\":774:900   */\n    tag_284:\n        /* \"#utility.yul\":811:818   */\n      0x00\n        /* \"#utility.yul\":851:893   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":844:849   */\n      dup3\n        /* \"#utility.yul\":840:894   */\n      and\n        /* \"#utility.yul\":829:894   */\n      swap1\n      pop\n        /* \"#utility.yul\":774:900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":906:1002   */\n    tag_285:\n        /* \"#utility.yul\":943:950   */\n      0x00\n        /* \"#utility.yul\":972:996   */\n      tag_345\n        /* \"#utility.yul\":990:995   */\n      dup3\n        /* \"#utility.yul\":972:996   */\n      tag_284\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":961:996   */\n      swap1\n      pop\n        /* \"#utility.yul\":906:1002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1008:1130   */\n    tag_286:\n        /* \"#utility.yul\":1081:1105   */\n      tag_347\n        /* \"#utility.yul\":1099:1104   */\n      dup2\n        /* \"#utility.yul\":1081:1105   */\n      tag_285\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":1074:1079   */\n      dup2\n        /* \"#utility.yul\":1071:1106   */\n      eq\n        /* \"#utility.yul\":1061:1124   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1120:1121   */\n      0x00\n        /* \"#utility.yul\":1117:1118   */\n      dup1\n        /* \"#utility.yul\":1110:1122   */\n      revert\n        /* \"#utility.yul\":1061:1124   */\n    tag_348:\n        /* \"#utility.yul\":1008:1130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1136:1275   */\n    tag_287:\n        /* \"#utility.yul\":1182:1187   */\n      0x00\n        /* \"#utility.yul\":1220:1226   */\n      dup2\n        /* \"#utility.yul\":1207:1227   */\n      calldataload\n        /* \"#utility.yul\":1198:1227   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1269   */\n      tag_350\n        /* \"#utility.yul\":1263:1268   */\n      dup2\n        /* \"#utility.yul\":1236:1269   */\n      tag_286\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1136:1275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1281:1610   */\n    tag_28:\n        /* \"#utility.yul\":1340:1346   */\n      0x00\n        /* \"#utility.yul\":1389:1391   */\n      0x20\n        /* \"#utility.yul\":1377:1386   */\n      dup3\n        /* \"#utility.yul\":1368:1375   */\n      dup5\n        /* \"#utility.yul\":1364:1387   */\n      sub\n        /* \"#utility.yul\":1360:1392   */\n      slt\n        /* \"#utility.yul\":1357:1476   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1395:1474   */\n      tag_353\n      tag_282\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1357:1476   */\n    tag_352:\n        /* \"#utility.yul\":1515:1516   */\n      0x00\n        /* \"#utility.yul\":1540:1593   */\n      tag_354\n        /* \"#utility.yul\":1585:1592   */\n      dup5\n        /* \"#utility.yul\":1576:1582   */\n      dup3\n        /* \"#utility.yul\":1565:1574   */\n      dup6\n        /* \"#utility.yul\":1561:1583   */\n      add\n        /* \"#utility.yul\":1540:1593   */\n      tag_287\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1530:1593   */\n      swap2\n      pop\n        /* \"#utility.yul\":1486:1603   */\n      pop\n        /* \"#utility.yul\":1281:1610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1616:1693   */\n    tag_288:\n        /* \"#utility.yul\":1653:1660   */\n      0x00\n        /* \"#utility.yul\":1682:1687   */\n      dup2\n        /* \"#utility.yul\":1671:1687   */\n      swap1\n      pop\n        /* \"#utility.yul\":1616:1693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1817   */\n    tag_289:\n        /* \"#utility.yul\":1786:1810   */\n      tag_357\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1786:1810   */\n      tag_288\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1781:1784   */\n      dup3\n        /* \"#utility.yul\":1774:1811   */\n      mstore\n        /* \"#utility.yul\":1699:1817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1823:2045   */\n    tag_31:\n        /* \"#utility.yul\":1916:1920   */\n      0x00\n        /* \"#utility.yul\":1954:1956   */\n      0x20\n        /* \"#utility.yul\":1943:1952   */\n      dup3\n        /* \"#utility.yul\":1939:1957   */\n      add\n        /* \"#utility.yul\":1931:1957   */\n      swap1\n      pop\n        /* \"#utility.yul\":1967:2038   */\n      tag_359\n        /* \"#utility.yul\":2035:2036   */\n      0x00\n        /* \"#utility.yul\":2024:2033   */\n      dup4\n        /* \"#utility.yul\":2020:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1967:2038   */\n      tag_289\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1823:2045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2169   */\n    tag_290:\n        /* \"#utility.yul\":2138:2162   */\n      tag_361\n        /* \"#utility.yul\":2156:2161   */\n      dup2\n        /* \"#utility.yul\":2138:2162   */\n      tag_285\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2133:2136   */\n      dup3\n        /* \"#utility.yul\":2126:2163   */\n      mstore\n        /* \"#utility.yul\":2051:2169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2175:2397   */\n    tag_36:\n        /* \"#utility.yul\":2268:2272   */\n      0x00\n        /* \"#utility.yul\":2306:2308   */\n      0x20\n        /* \"#utility.yul\":2295:2304   */\n      dup3\n        /* \"#utility.yul\":2291:2309   */\n      add\n        /* \"#utility.yul\":2283:2309   */\n      swap1\n      pop\n        /* \"#utility.yul\":2319:2390   */\n      tag_363\n        /* \"#utility.yul\":2387:2388   */\n      0x00\n        /* \"#utility.yul\":2376:2385   */\n      dup4\n        /* \"#utility.yul\":2372:2389   */\n      add\n        /* \"#utility.yul\":2363:2369   */\n      dup5\n        /* \"#utility.yul\":2319:2390   */\n      tag_290\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2175:2397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2403:2583   */\n    tag_67:\n        /* \"#utility.yul\":2451:2528   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2448:2449   */\n      0x00\n        /* \"#utility.yul\":2441:2529   */\n      mstore\n        /* \"#utility.yul\":2548:2552   */\n      0x21\n        /* \"#utility.yul\":2545:2546   */\n      0x04\n        /* \"#utility.yul\":2538:2553   */\n      mstore\n        /* \"#utility.yul\":2572:2576   */\n      0x24\n        /* \"#utility.yul\":2569:2570   */\n      0x00\n        /* \"#utility.yul\":2562:2577   */\n      revert\n        /* \"#utility.yul\":2589:2704   */\n    tag_291:\n        /* \"#utility.yul\":2672:2673   */\n      0x02\n        /* \"#utility.yul\":2665:2670   */\n      dup2\n        /* \"#utility.yul\":2662:2674   */\n      lt\n        /* \"#utility.yul\":2652:2698   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":2678:2696   */\n      tag_367\n      tag_67\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2652:2698   */\n    tag_366:\n        /* \"#utility.yul\":2589:2704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2841   */\n    tag_292:\n        /* \"#utility.yul\":2757:2764   */\n      0x00\n        /* \"#utility.yul\":2786:2791   */\n      dup2\n        /* \"#utility.yul\":2775:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2835   */\n      tag_369\n        /* \"#utility.yul\":2829:2834   */\n      dup3\n        /* \"#utility.yul\":2792:2835   */\n      tag_291\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2710:2841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2847:2978   */\n    tag_293:\n        /* \"#utility.yul\":2905:2914   */\n      0x00\n        /* \"#utility.yul\":2938:2972   */\n      tag_371\n        /* \"#utility.yul\":2966:2971   */\n      dup3\n        /* \"#utility.yul\":2938:2972   */\n      tag_292\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2925:2972   */\n      swap1\n      pop\n        /* \"#utility.yul\":2847:2978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2984:3131   */\n    tag_294:\n        /* \"#utility.yul\":3079:3124   */\n      tag_373\n        /* \"#utility.yul\":3118:3123   */\n      dup2\n        /* \"#utility.yul\":3079:3124   */\n      tag_293\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3074:3077   */\n      dup3\n        /* \"#utility.yul\":3067:3125   */\n      mstore\n        /* \"#utility.yul\":2984:3131   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3137:3375   */\n    tag_41:\n        /* \"#utility.yul\":3238:3242   */\n      0x00\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"#utility.yul\":3265:3274   */\n      dup3\n        /* \"#utility.yul\":3261:3279   */\n      add\n        /* \"#utility.yul\":3253:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":3289:3368   */\n      tag_375\n        /* \"#utility.yul\":3365:3366   */\n      0x00\n        /* \"#utility.yul\":3354:3363   */\n      dup4\n        /* \"#utility.yul\":3350:3367   */\n      add\n        /* \"#utility.yul\":3341:3347   */\n      dup5\n        /* \"#utility.yul\":3289:3368   */\n      tag_294\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3137:3375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3381:3503   */\n    tag_295:\n        /* \"#utility.yul\":3454:3478   */\n      tag_377\n        /* \"#utility.yul\":3472:3477   */\n      dup2\n        /* \"#utility.yul\":3454:3478   */\n      tag_288\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3447:3452   */\n      dup2\n        /* \"#utility.yul\":3444:3479   */\n      eq\n        /* \"#utility.yul\":3434:3497   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3490:3491   */\n      dup1\n        /* \"#utility.yul\":3483:3495   */\n      revert\n        /* \"#utility.yul\":3434:3497   */\n    tag_378:\n        /* \"#utility.yul\":3381:3503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3509:3648   */\n    tag_296:\n        /* \"#utility.yul\":3555:3560   */\n      0x00\n        /* \"#utility.yul\":3593:3599   */\n      dup2\n        /* \"#utility.yul\":3580:3600   */\n      calldataload\n        /* \"#utility.yul\":3571:3600   */\n      swap1\n      pop\n        /* \"#utility.yul\":3609:3642   */\n      tag_380\n        /* \"#utility.yul\":3636:3641   */\n      dup2\n        /* \"#utility.yul\":3609:3642   */\n      tag_295\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3509:3648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:4128   */\n    tag_52:\n        /* \"#utility.yul\":3722:3728   */\n      0x00\n        /* \"#utility.yul\":3730:3736   */\n      dup1\n        /* \"#utility.yul\":3779:3781   */\n      0x40\n        /* \"#utility.yul\":3767:3776   */\n      dup4\n        /* \"#utility.yul\":3758:3765   */\n      dup6\n        /* \"#utility.yul\":3754:3777   */\n      sub\n        /* \"#utility.yul\":3750:3782   */\n      slt\n        /* \"#utility.yul\":3747:3866   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3785:3864   */\n      tag_383\n      tag_282\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3747:3866   */\n    tag_382:\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3930:3983   */\n      tag_384\n        /* \"#utility.yul\":3975:3982   */\n      dup6\n        /* \"#utility.yul\":3966:3972   */\n      dup3\n        /* \"#utility.yul\":3955:3964   */\n      dup7\n        /* \"#utility.yul\":3951:3973   */\n      add\n        /* \"#utility.yul\":3930:3983   */\n      tag_287\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3920:3983   */\n      swap3\n      pop\n        /* \"#utility.yul\":3876:3993   */\n      pop\n        /* \"#utility.yul\":4032:4034   */\n      0x20\n        /* \"#utility.yul\":4058:4111   */\n      tag_385\n        /* \"#utility.yul\":4103:4110   */\n      dup6\n        /* \"#utility.yul\":4094:4100   */\n      dup3\n        /* \"#utility.yul\":4083:4092   */\n      dup7\n        /* \"#utility.yul\":4079:4101   */\n      add\n        /* \"#utility.yul\":4058:4111   */\n      tag_296\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4048:4111   */\n      swap2\n      pop\n        /* \"#utility.yul\":4003:4121   */\n      pop\n        /* \"#utility.yul\":3654:4128   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4134:4249   */\n    tag_297:\n        /* \"#utility.yul\":4216:4218   */\n      0x0d\n        /* \"#utility.yul\":4209:4214   */\n      dup2\n        /* \"#utility.yul\":4206:4219   */\n      lt\n        /* \"#utility.yul\":4196:4243   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":4223:4241   */\n      tag_388\n      tag_67\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4196:4243   */\n    tag_387:\n        /* \"#utility.yul\":4134:4249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4384   */\n    tag_298:\n        /* \"#utility.yul\":4301:4308   */\n      0x00\n        /* \"#utility.yul\":4330:4335   */\n      dup2\n        /* \"#utility.yul\":4319:4335   */\n      swap1\n      pop\n        /* \"#utility.yul\":4336:4378   */\n      tag_390\n        /* \"#utility.yul\":4372:4377   */\n      dup3\n        /* \"#utility.yul\":4336:4378   */\n      tag_297\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":4255:4384   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4390:4519   */\n    tag_299:\n        /* \"#utility.yul\":4447:4456   */\n      0x00\n        /* \"#utility.yul\":4480:4513   */\n      tag_392\n        /* \"#utility.yul\":4507:4512   */\n      dup3\n        /* \"#utility.yul\":4480:4513   */\n      tag_298\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4467:4513   */\n      swap1\n      pop\n        /* \"#utility.yul\":4390:4519   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4525:4670   */\n    tag_300:\n        /* \"#utility.yul\":4619:4663   */\n      tag_394\n        /* \"#utility.yul\":4657:4662   */\n      dup2\n        /* \"#utility.yul\":4619:4663   */\n      tag_299\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4614:4617   */\n      dup3\n        /* \"#utility.yul\":4607:4664   */\n      mstore\n        /* \"#utility.yul\":4525:4670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4676:4912   */\n    tag_55:\n        /* \"#utility.yul\":4776:4780   */\n      0x00\n        /* \"#utility.yul\":4814:4816   */\n      0x20\n        /* \"#utility.yul\":4803:4812   */\n      dup3\n        /* \"#utility.yul\":4799:4817   */\n      add\n        /* \"#utility.yul\":4791:4817   */\n      swap1\n      pop\n        /* \"#utility.yul\":4827:4905   */\n      tag_396\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4891:4900   */\n      dup4\n        /* \"#utility.yul\":4887:4904   */\n      add\n        /* \"#utility.yul\":4878:4884   */\n      dup5\n        /* \"#utility.yul\":4827:4905   */\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4676:4912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4918:5042   */\n    tag_301:\n        /* \"#utility.yul\":5010:5011   */\n      0x03\n        /* \"#utility.yul\":5003:5008   */\n      dup2\n        /* \"#utility.yul\":5000:5012   */\n      lt\n        /* \"#utility.yul\":4990:5036   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5016:5034   */\n      tag_399\n      tag_67\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4990:5036   */\n    tag_398:\n        /* \"#utility.yul\":4918:5042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5048:5197   */\n    tag_302:\n        /* \"#utility.yul\":5104:5111   */\n      0x00\n        /* \"#utility.yul\":5133:5138   */\n      dup2\n        /* \"#utility.yul\":5122:5138   */\n      swap1\n      pop\n        /* \"#utility.yul\":5139:5191   */\n      tag_401\n        /* \"#utility.yul\":5185:5190   */\n      dup3\n        /* \"#utility.yul\":5139:5191   */\n      tag_301\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5048:5197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5203:5352   */\n    tag_303:\n        /* \"#utility.yul\":5270:5279   */\n      0x00\n        /* \"#utility.yul\":5303:5346   */\n      tag_403\n        /* \"#utility.yul\":5340:5345   */\n      dup3\n        /* \"#utility.yul\":5303:5346   */\n      tag_302\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5290:5346   */\n      swap1\n      pop\n        /* \"#utility.yul\":5203:5352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5358:5523   */\n    tag_304:\n        /* \"#utility.yul\":5462:5516   */\n      tag_405\n        /* \"#utility.yul\":5510:5515   */\n      dup2\n        /* \"#utility.yul\":5462:5516   */\n      tag_303\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5457:5460   */\n      dup3\n        /* \"#utility.yul\":5450:5517   */\n      mstore\n        /* \"#utility.yul\":5358:5523   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5529:5785   */\n    tag_61:\n        /* \"#utility.yul\":5639:5643   */\n      0x00\n        /* \"#utility.yul\":5677:5679   */\n      0x20\n        /* \"#utility.yul\":5666:5675   */\n      dup3\n        /* \"#utility.yul\":5662:5680   */\n      add\n        /* \"#utility.yul\":5654:5680   */\n      swap1\n      pop\n        /* \"#utility.yul\":5690:5778   */\n      tag_407\n        /* \"#utility.yul\":5775:5776   */\n      0x00\n        /* \"#utility.yul\":5764:5773   */\n      dup4\n        /* \"#utility.yul\":5760:5777   */\n      add\n        /* \"#utility.yul\":5751:5757   */\n      dup5\n        /* \"#utility.yul\":5690:5778   */\n      tag_304\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5529:5785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5791:5960   */\n    tag_305:\n        /* \"#utility.yul\":5875:5886   */\n      0x00\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5904:5907   */\n      dup3\n        /* \"#utility.yul\":5897:5916   */\n      mstore\n        /* \"#utility.yul\":5949:5953   */\n      0x20\n        /* \"#utility.yul\":5944:5947   */\n      dup3\n        /* \"#utility.yul\":5940:5954   */\n      add\n        /* \"#utility.yul\":5925:5954   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5960   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5966:6188   */\n    tag_306:\n        /* \"#utility.yul\":6106:6140   */\n      0x506c6179657220616c72656164792073656c6563746564207374616e64206f6e\n        /* \"#utility.yul\":6102:6103   */\n      0x00\n        /* \"#utility.yul\":6094:6100   */\n      dup3\n        /* \"#utility.yul\":6090:6104   */\n      add\n        /* \"#utility.yul\":6083:6141   */\n      mstore\n        /* \"#utility.yul\":6175:6180   */\n      0x63652e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6170:6172   */\n      0x20\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6158:6173   */\n      add\n        /* \"#utility.yul\":6151:6181   */\n      mstore\n        /* \"#utility.yul\":5966:6188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6194:6560   */\n    tag_307:\n        /* \"#utility.yul\":6336:6339   */\n      0x00\n        /* \"#utility.yul\":6357:6424   */\n      tag_411\n        /* \"#utility.yul\":6421:6423   */\n      0x23\n        /* \"#utility.yul\":6416:6419   */\n      dup4\n        /* \"#utility.yul\":6357:6424   */\n      tag_305\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6350:6424   */\n      swap2\n      pop\n        /* \"#utility.yul\":6433:6526   */\n      tag_412\n        /* \"#utility.yul\":6522:6525   */\n      dup3\n        /* \"#utility.yul\":6433:6526   */\n      tag_306\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":6551:6553   */\n      0x40\n        /* \"#utility.yul\":6546:6549   */\n      dup3\n        /* \"#utility.yul\":6542:6554   */\n      add\n        /* \"#utility.yul\":6535:6554   */\n      swap1\n      pop\n        /* \"#utility.yul\":6194:6560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6566:6985   */\n    tag_72:\n        /* \"#utility.yul\":6732:6736   */\n      0x00\n        /* \"#utility.yul\":6770:6772   */\n      0x20\n        /* \"#utility.yul\":6759:6768   */\n      dup3\n        /* \"#utility.yul\":6755:6773   */\n      add\n        /* \"#utility.yul\":6747:6773   */\n      swap1\n      pop\n        /* \"#utility.yul\":6819:6828   */\n      dup2\n        /* \"#utility.yul\":6813:6817   */\n      dup2\n        /* \"#utility.yul\":6809:6829   */\n      sub\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6794:6803   */\n      dup4\n        /* \"#utility.yul\":6790:6807   */\n      add\n        /* \"#utility.yul\":6783:6830   */\n      mstore\n        /* \"#utility.yul\":6847:6978   */\n      tag_414\n        /* \"#utility.yul\":6973:6977   */\n      dup2\n        /* \"#utility.yul\":6847:6978   */\n      tag_307\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":6839:6978   */\n      swap1\n      pop\n        /* \"#utility.yul\":6566:6985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6991:7165   */\n    tag_308:\n        /* \"#utility.yul\":7131:7157   */\n      0x4f6e6c7920746865206465616c65722063616e206465616c0000000000000000\n        /* \"#utility.yul\":7127:7128   */\n      0x00\n        /* \"#utility.yul\":7119:7125   */\n      dup3\n        /* \"#utility.yul\":7115:7129   */\n      add\n        /* \"#utility.yul\":7108:7158   */\n      mstore\n        /* \"#utility.yul\":6991:7165   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7171:7537   */\n    tag_309:\n        /* \"#utility.yul\":7313:7316   */\n      0x00\n        /* \"#utility.yul\":7334:7401   */\n      tag_417\n        /* \"#utility.yul\":7398:7400   */\n      0x18\n        /* \"#utility.yul\":7393:7396   */\n      dup4\n        /* \"#utility.yul\":7334:7401   */\n      tag_305\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7327:7401   */\n      swap2\n      pop\n        /* \"#utility.yul\":7410:7503   */\n      tag_418\n        /* \"#utility.yul\":7499:7502   */\n      dup3\n        /* \"#utility.yul\":7410:7503   */\n      tag_308\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7528:7530   */\n      0x20\n        /* \"#utility.yul\":7523:7526   */\n      dup3\n        /* \"#utility.yul\":7519:7531   */\n      add\n        /* \"#utility.yul\":7512:7531   */\n      swap1\n      pop\n        /* \"#utility.yul\":7171:7537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7543:7962   */\n    tag_78:\n        /* \"#utility.yul\":7709:7713   */\n      0x00\n        /* \"#utility.yul\":7747:7749   */\n      0x20\n        /* \"#utility.yul\":7736:7745   */\n      dup3\n        /* \"#utility.yul\":7732:7750   */\n      add\n        /* \"#utility.yul\":7724:7750   */\n      swap1\n      pop\n        /* \"#utility.yul\":7796:7805   */\n      dup2\n        /* \"#utility.yul\":7790:7794   */\n      dup2\n        /* \"#utility.yul\":7786:7806   */\n      sub\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7771:7780   */\n      dup4\n        /* \"#utility.yul\":7767:7784   */\n      add\n        /* \"#utility.yul\":7760:7807   */\n      mstore\n        /* \"#utility.yul\":7824:7955   */\n      tag_420\n        /* \"#utility.yul\":7950:7954   */\n      dup2\n        /* \"#utility.yul\":7824:7955   */\n      tag_309\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7816:7955   */\n      swap1\n      pop\n        /* \"#utility.yul\":7543:7962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7968:8149   */\n    tag_310:\n        /* \"#utility.yul\":8108:8141   */\n      0x43757272656e7420726f756e64206973207374696c6c2072756e6e696e672e00\n        /* \"#utility.yul\":8104:8105   */\n      0x00\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8092:8106   */\n      add\n        /* \"#utility.yul\":8085:8142   */\n      mstore\n        /* \"#utility.yul\":7968:8149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8521   */\n    tag_311:\n        /* \"#utility.yul\":8297:8300   */\n      0x00\n        /* \"#utility.yul\":8318:8385   */\n      tag_423\n        /* \"#utility.yul\":8382:8384   */\n      0x1f\n        /* \"#utility.yul\":8377:8380   */\n      dup4\n        /* \"#utility.yul\":8318:8385   */\n      tag_305\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8311:8385   */\n      swap2\n      pop\n        /* \"#utility.yul\":8394:8487   */\n      tag_424\n        /* \"#utility.yul\":8483:8486   */\n      dup3\n        /* \"#utility.yul\":8394:8487   */\n      tag_310\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8512:8514   */\n      0x20\n        /* \"#utility.yul\":8507:8510   */\n      dup3\n        /* \"#utility.yul\":8503:8515   */\n      add\n        /* \"#utility.yul\":8496:8515   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8527:8946   */\n    tag_81:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8731:8733   */\n      0x20\n        /* \"#utility.yul\":8720:8729   */\n      dup3\n        /* \"#utility.yul\":8716:8734   */\n      add\n        /* \"#utility.yul\":8708:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8780:8789   */\n      dup2\n        /* \"#utility.yul\":8774:8778   */\n      dup2\n        /* \"#utility.yul\":8770:8790   */\n      sub\n        /* \"#utility.yul\":8766:8767   */\n      0x00\n        /* \"#utility.yul\":8755:8764   */\n      dup4\n        /* \"#utility.yul\":8751:8768   */\n      add\n        /* \"#utility.yul\":8744:8791   */\n      mstore\n        /* \"#utility.yul\":8808:8939   */\n      tag_426\n        /* \"#utility.yul\":8934:8938   */\n      dup2\n        /* \"#utility.yul\":8808:8939   */\n      tag_311\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8800:8939   */\n      swap1\n      pop\n        /* \"#utility.yul\":8527:8946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8952:9128   */\n    tag_312:\n        /* \"#utility.yul\":9092:9120   */\n      0x47616d65206e6f7420696e20636f72726563742073746174652e000000000000\n        /* \"#utility.yul\":9088:9089   */\n      0x00\n        /* \"#utility.yul\":9080:9086   */\n      dup3\n        /* \"#utility.yul\":9076:9090   */\n      add\n        /* \"#utility.yul\":9069:9121   */\n      mstore\n        /* \"#utility.yul\":8952:9128   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9134:9500   */\n    tag_313:\n        /* \"#utility.yul\":9276:9279   */\n      0x00\n        /* \"#utility.yul\":9297:9364   */\n      tag_429\n        /* \"#utility.yul\":9361:9363   */\n      0x1a\n        /* \"#utility.yul\":9356:9359   */\n      dup4\n        /* \"#utility.yul\":9297:9364   */\n      tag_305\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9290:9364   */\n      swap2\n      pop\n        /* \"#utility.yul\":9373:9466   */\n      tag_430\n        /* \"#utility.yul\":9462:9465   */\n      dup3\n        /* \"#utility.yul\":9373:9466   */\n      tag_312\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9491:9493   */\n      0x20\n        /* \"#utility.yul\":9486:9489   */\n      dup3\n        /* \"#utility.yul\":9482:9494   */\n      add\n        /* \"#utility.yul\":9475:9494   */\n      swap1\n      pop\n        /* \"#utility.yul\":9134:9500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9925   */\n    tag_93:\n        /* \"#utility.yul\":9672:9676   */\n      0x00\n        /* \"#utility.yul\":9710:9712   */\n      0x20\n        /* \"#utility.yul\":9699:9708   */\n      dup3\n        /* \"#utility.yul\":9695:9713   */\n      add\n        /* \"#utility.yul\":9687:9713   */\n      swap1\n      pop\n        /* \"#utility.yul\":9759:9768   */\n      dup2\n        /* \"#utility.yul\":9753:9757   */\n      dup2\n        /* \"#utility.yul\":9749:9769   */\n      sub\n        /* \"#utility.yul\":9745:9746   */\n      0x00\n        /* \"#utility.yul\":9734:9743   */\n      dup4\n        /* \"#utility.yul\":9730:9747   */\n      add\n        /* \"#utility.yul\":9723:9770   */\n      mstore\n        /* \"#utility.yul\":9787:9918   */\n      tag_432\n        /* \"#utility.yul\":9913:9917   */\n      dup2\n        /* \"#utility.yul\":9787:9918   */\n      tag_313\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9779:9918   */\n      swap1\n      pop\n        /* \"#utility.yul\":9506:9925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9931:10111   */\n    tag_314:\n        /* \"#utility.yul\":9979:10056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9976:9977   */\n      0x00\n        /* \"#utility.yul\":9969:10057   */\n      mstore\n        /* \"#utility.yul\":10076:10080   */\n      0x11\n        /* \"#utility.yul\":10073:10074   */\n      0x04\n        /* \"#utility.yul\":10066:10081   */\n      mstore\n        /* \"#utility.yul\":10100:10104   */\n      0x24\n        /* \"#utility.yul\":10097:10098   */\n      0x00\n        /* \"#utility.yul\":10090:10105   */\n      revert\n        /* \"#utility.yul\":10117:10308   */\n    tag_116:\n        /* \"#utility.yul\":10157:10160   */\n      0x00\n        /* \"#utility.yul\":10176:10196   */\n      tag_435\n        /* \"#utility.yul\":10194:10195   */\n      dup3\n        /* \"#utility.yul\":10176:10196   */\n      tag_288\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10171:10196   */\n      swap2\n      pop\n        /* \"#utility.yul\":10210:10230   */\n      tag_436\n        /* \"#utility.yul\":10228:10229   */\n      dup4\n        /* \"#utility.yul\":10210:10230   */\n      tag_288\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10205:10230   */\n      swap3\n      pop\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10250:10251   */\n      dup3\n        /* \"#utility.yul\":10246:10255   */\n      add\n        /* \"#utility.yul\":10239:10255   */\n      swap1\n      pop\n        /* \"#utility.yul\":10274:10277   */\n      dup1\n        /* \"#utility.yul\":10271:10272   */\n      dup3\n        /* \"#utility.yul\":10268:10278   */\n      gt\n        /* \"#utility.yul\":10265:10301   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10281:10299   */\n      tag_438\n      tag_314\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10265:10301   */\n    tag_437:\n        /* \"#utility.yul\":10117:10308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10314:10534   */\n    tag_315:\n        /* \"#utility.yul\":10454:10488   */\n      0x506c6179657220616c72656164792073656c656374656420686974206f6e6365\n        /* \"#utility.yul\":10450:10451   */\n      0x00\n        /* \"#utility.yul\":10442:10448   */\n      dup3\n        /* \"#utility.yul\":10438:10452   */\n      add\n        /* \"#utility.yul\":10431:10489   */\n      mstore\n        /* \"#utility.yul\":10523:10526   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10518:10520   */\n      0x20\n        /* \"#utility.yul\":10510:10516   */\n      dup3\n        /* \"#utility.yul\":10506:10521   */\n      add\n        /* \"#utility.yul\":10499:10527   */\n      mstore\n        /* \"#utility.yul\":10314:10534   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10540:10906   */\n    tag_316:\n        /* \"#utility.yul\":10682:10685   */\n      0x00\n        /* \"#utility.yul\":10703:10770   */\n      tag_441\n        /* \"#utility.yul\":10767:10769   */\n      0x21\n        /* \"#utility.yul\":10762:10765   */\n      dup4\n        /* \"#utility.yul\":10703:10770   */\n      tag_305\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10696:10770   */\n      swap2\n      pop\n        /* \"#utility.yul\":10779:10872   */\n      tag_442\n        /* \"#utility.yul\":10868:10871   */\n      dup3\n        /* \"#utility.yul\":10779:10872   */\n      tag_315\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10897:10899   */\n      0x40\n        /* \"#utility.yul\":10892:10895   */\n      dup3\n        /* \"#utility.yul\":10888:10900   */\n      add\n        /* \"#utility.yul\":10881:10900   */\n      swap1\n      pop\n        /* \"#utility.yul\":10540:10906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10912:11331   */\n    tag_124:\n        /* \"#utility.yul\":11078:11082   */\n      0x00\n        /* \"#utility.yul\":11116:11118   */\n      0x20\n        /* \"#utility.yul\":11105:11114   */\n      dup3\n        /* \"#utility.yul\":11101:11119   */\n      add\n        /* \"#utility.yul\":11093:11119   */\n      swap1\n      pop\n        /* \"#utility.yul\":11165:11174   */\n      dup2\n        /* \"#utility.yul\":11159:11163   */\n      dup2\n        /* \"#utility.yul\":11155:11175   */\n      sub\n        /* \"#utility.yul\":11151:11152   */\n      0x00\n        /* \"#utility.yul\":11140:11149   */\n      dup4\n        /* \"#utility.yul\":11136:11153   */\n      add\n        /* \"#utility.yul\":11129:11176   */\n      mstore\n        /* \"#utility.yul\":11193:11324   */\n      tag_444\n        /* \"#utility.yul\":11319:11323   */\n      dup2\n        /* \"#utility.yul\":11193:11324   */\n      tag_316\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11185:11324   */\n      swap1\n      pop\n        /* \"#utility.yul\":10912:11331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11337:11514   */\n    tag_317:\n        /* \"#utility.yul\":11477:11506   */\n      0x4e6f742074616b696e6720616e79206e657720706c61796572732e0000000000\n        /* \"#utility.yul\":11473:11474   */\n      0x00\n        /* \"#utility.yul\":11465:11471   */\n      dup3\n        /* \"#utility.yul\":11461:11475   */\n      add\n        /* \"#utility.yul\":11454:11507   */\n      mstore\n        /* \"#utility.yul\":11337:11514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11520:11886   */\n    tag_318:\n        /* \"#utility.yul\":11662:11665   */\n      0x00\n        /* \"#utility.yul\":11683:11750   */\n      tag_447\n        /* \"#utility.yul\":11747:11749   */\n      0x1b\n        /* \"#utility.yul\":11742:11745   */\n      dup4\n        /* \"#utility.yul\":11683:11750   */\n      tag_305\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11676:11750   */\n      swap2\n      pop\n        /* \"#utility.yul\":11759:11852   */\n      tag_448\n        /* \"#utility.yul\":11848:11851   */\n      dup3\n        /* \"#utility.yul\":11759:11852   */\n      tag_317\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11877:11879   */\n      0x20\n        /* \"#utility.yul\":11872:11875   */\n      dup3\n        /* \"#utility.yul\":11868:11880   */\n      add\n        /* \"#utility.yul\":11861:11880   */\n      swap1\n      pop\n        /* \"#utility.yul\":11520:11886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11892:12311   */\n    tag_135:\n        /* \"#utility.yul\":12058:12062   */\n      0x00\n        /* \"#utility.yul\":12096:12098   */\n      0x20\n        /* \"#utility.yul\":12085:12094   */\n      dup3\n        /* \"#utility.yul\":12081:12099   */\n      add\n        /* \"#utility.yul\":12073:12099   */\n      swap1\n      pop\n        /* \"#utility.yul\":12145:12154   */\n      dup2\n        /* \"#utility.yul\":12139:12143   */\n      dup2\n        /* \"#utility.yul\":12135:12155   */\n      sub\n        /* \"#utility.yul\":12131:12132   */\n      0x00\n        /* \"#utility.yul\":12120:12129   */\n      dup4\n        /* \"#utility.yul\":12116:12133   */\n      add\n        /* \"#utility.yul\":12109:12156   */\n      mstore\n        /* \"#utility.yul\":12173:12304   */\n      tag_450\n        /* \"#utility.yul\":12299:12303   */\n      dup2\n        /* \"#utility.yul\":12173:12304   */\n      tag_318\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12165:12304   */\n      swap1\n      pop\n        /* \"#utility.yul\":11892:12311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12317:12489   */\n    tag_319:\n        /* \"#utility.yul\":12457:12481   */\n      0x496e636f727265637420696e697469616c206265742e00000000000000000000\n        /* \"#utility.yul\":12453:12454   */\n      0x00\n        /* \"#utility.yul\":12445:12451   */\n      dup3\n        /* \"#utility.yul\":12441:12455   */\n      add\n        /* \"#utility.yul\":12434:12482   */\n      mstore\n        /* \"#utility.yul\":12317:12489   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12495:12861   */\n    tag_320:\n        /* \"#utility.yul\":12637:12640   */\n      0x00\n        /* \"#utility.yul\":12658:12725   */\n      tag_453\n        /* \"#utility.yul\":12722:12724   */\n      0x16\n        /* \"#utility.yul\":12717:12720   */\n      dup4\n        /* \"#utility.yul\":12658:12725   */\n      tag_305\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12651:12725   */\n      swap2\n      pop\n        /* \"#utility.yul\":12734:12827   */\n      tag_454\n        /* \"#utility.yul\":12823:12826   */\n      dup3\n        /* \"#utility.yul\":12734:12827   */\n      tag_319\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12852:12854   */\n      0x20\n        /* \"#utility.yul\":12847:12850   */\n      dup3\n        /* \"#utility.yul\":12843:12855   */\n      add\n        /* \"#utility.yul\":12836:12855   */\n      swap1\n      pop\n        /* \"#utility.yul\":12495:12861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12867:13286   */\n    tag_138:\n        /* \"#utility.yul\":13033:13037   */\n      0x00\n        /* \"#utility.yul\":13071:13073   */\n      0x20\n        /* \"#utility.yul\":13060:13069   */\n      dup3\n        /* \"#utility.yul\":13056:13074   */\n      add\n        /* \"#utility.yul\":13048:13074   */\n      swap1\n      pop\n        /* \"#utility.yul\":13120:13129   */\n      dup2\n        /* \"#utility.yul\":13114:13118   */\n      dup2\n        /* \"#utility.yul\":13110:13130   */\n      sub\n        /* \"#utility.yul\":13106:13107   */\n      0x00\n        /* \"#utility.yul\":13095:13104   */\n      dup4\n        /* \"#utility.yul\":13091:13108   */\n      add\n        /* \"#utility.yul\":13084:13131   */\n      mstore\n        /* \"#utility.yul\":13148:13279   */\n      tag_456\n        /* \"#utility.yul\":13274:13278   */\n      dup2\n        /* \"#utility.yul\":13148:13279   */\n      tag_320\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13140:13279   */\n      swap1\n      pop\n        /* \"#utility.yul\":12867:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13471   */\n    tag_321:\n        /* \"#utility.yul\":13432:13463   */\n      0x506c61796572206469646e277420706c61636520616e7920626574732e000000\n        /* \"#utility.yul\":13428:13429   */\n      0x00\n        /* \"#utility.yul\":13420:13426   */\n      dup3\n        /* \"#utility.yul\":13416:13430   */\n      add\n        /* \"#utility.yul\":13409:13464   */\n      mstore\n        /* \"#utility.yul\":13292:13471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13477:13843   */\n    tag_322:\n        /* \"#utility.yul\":13619:13622   */\n      0x00\n        /* \"#utility.yul\":13640:13707   */\n      tag_459\n        /* \"#utility.yul\":13704:13706   */\n      0x1d\n        /* \"#utility.yul\":13699:13702   */\n      dup4\n        /* \"#utility.yul\":13640:13707   */\n      tag_305\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13633:13707   */\n      swap2\n      pop\n        /* \"#utility.yul\":13716:13809   */\n      tag_460\n        /* \"#utility.yul\":13805:13808   */\n      dup3\n        /* \"#utility.yul\":13716:13809   */\n      tag_321\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13834:13836   */\n      0x20\n        /* \"#utility.yul\":13829:13832   */\n      dup3\n        /* \"#utility.yul\":13825:13837   */\n      add\n        /* \"#utility.yul\":13818:13837   */\n      swap1\n      pop\n        /* \"#utility.yul\":13477:13843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13849:14268   */\n    tag_145:\n        /* \"#utility.yul\":14015:14019   */\n      0x00\n        /* \"#utility.yul\":14053:14055   */\n      0x20\n        /* \"#utility.yul\":14042:14051   */\n      dup3\n        /* \"#utility.yul\":14038:14056   */\n      add\n        /* \"#utility.yul\":14030:14056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14102:14111   */\n      dup2\n        /* \"#utility.yul\":14096:14100   */\n      dup2\n        /* \"#utility.yul\":14092:14112   */\n      sub\n        /* \"#utility.yul\":14088:14089   */\n      0x00\n        /* \"#utility.yul\":14077:14086   */\n      dup4\n        /* \"#utility.yul\":14073:14090   */\n      add\n        /* \"#utility.yul\":14066:14113   */\n      mstore\n        /* \"#utility.yul\":14130:14261   */\n      tag_462\n        /* \"#utility.yul\":14256:14260   */\n      dup2\n        /* \"#utility.yul\":14130:14261   */\n      tag_322\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14122:14261   */\n      swap1\n      pop\n        /* \"#utility.yul\":13849:14268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14505   */\n    tag_323:\n        /* \"#utility.yul\":14414:14448   */\n      0x43757272656e746c79206e6f7420616c6c6f77696e6720686974206f72207374\n        /* \"#utility.yul\":14410:14411   */\n      0x00\n        /* \"#utility.yul\":14402:14408   */\n      dup3\n        /* \"#utility.yul\":14398:14412   */\n      add\n        /* \"#utility.yul\":14391:14449   */\n      mstore\n        /* \"#utility.yul\":14483:14497   */\n      0x616e6420616374696f6e732e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":14478:14480   */\n      0x20\n        /* \"#utility.yul\":14470:14476   */\n      dup3\n        /* \"#utility.yul\":14466:14481   */\n      add\n        /* \"#utility.yul\":14459:14498   */\n      mstore\n        /* \"#utility.yul\":14274:14505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14511:14877   */\n    tag_324:\n        /* \"#utility.yul\":14653:14656   */\n      0x00\n        /* \"#utility.yul\":14674:14741   */\n      tag_465\n        /* \"#utility.yul\":14738:14740   */\n      0x2c\n        /* \"#utility.yul\":14733:14736   */\n      dup4\n        /* \"#utility.yul\":14674:14741   */\n      tag_305\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14667:14741   */\n      swap2\n      pop\n        /* \"#utility.yul\":14750:14843   */\n      tag_466\n        /* \"#utility.yul\":14839:14842   */\n      dup3\n        /* \"#utility.yul\":14750:14843   */\n      tag_323\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14868:14870   */\n      0x40\n        /* \"#utility.yul\":14863:14866   */\n      dup3\n        /* \"#utility.yul\":14859:14871   */\n      add\n        /* \"#utility.yul\":14852:14871   */\n      swap1\n      pop\n        /* \"#utility.yul\":14511:14877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14883:15302   */\n    tag_152:\n        /* \"#utility.yul\":15049:15053   */\n      0x00\n        /* \"#utility.yul\":15087:15089   */\n      0x20\n        /* \"#utility.yul\":15076:15085   */\n      dup3\n        /* \"#utility.yul\":15072:15090   */\n      add\n        /* \"#utility.yul\":15064:15090   */\n      swap1\n      pop\n        /* \"#utility.yul\":15136:15145   */\n      dup2\n        /* \"#utility.yul\":15130:15134   */\n      dup2\n        /* \"#utility.yul\":15126:15146   */\n      sub\n        /* \"#utility.yul\":15122:15123   */\n      0x00\n        /* \"#utility.yul\":15111:15120   */\n      dup4\n        /* \"#utility.yul\":15107:15124   */\n      add\n        /* \"#utility.yul\":15100:15147   */\n      mstore\n        /* \"#utility.yul\":15164:15295   */\n      tag_468\n        /* \"#utility.yul\":15290:15294   */\n      dup2\n        /* \"#utility.yul\":15164:15295   */\n      tag_324\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15156:15295   */\n      swap1\n      pop\n        /* \"#utility.yul\":14883:15302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15308:15533   */\n    tag_325:\n        /* \"#utility.yul\":15448:15482   */\n      0x526f756e6420646f6573206e6f742061636365707420616e79206d6f72652063\n        /* \"#utility.yul\":15444:15445   */\n      0x00\n        /* \"#utility.yul\":15436:15442   */\n      dup3\n        /* \"#utility.yul\":15432:15446   */\n      add\n        /* \"#utility.yul\":15425:15483   */\n      mstore\n        /* \"#utility.yul\":15517:15525   */\n      0x68616e6765730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15512:15514   */\n      0x20\n        /* \"#utility.yul\":15504:15510   */\n      dup3\n        /* \"#utility.yul\":15500:15515   */\n      add\n        /* \"#utility.yul\":15493:15526   */\n      mstore\n        /* \"#utility.yul\":15308:15533   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15539:15905   */\n    tag_326:\n        /* \"#utility.yul\":15681:15684   */\n      0x00\n        /* \"#utility.yul\":15702:15769   */\n      tag_471\n        /* \"#utility.yul\":15766:15768   */\n      0x26\n        /* \"#utility.yul\":15761:15764   */\n      dup4\n        /* \"#utility.yul\":15702:15769   */\n      tag_305\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15695:15769   */\n      swap2\n      pop\n        /* \"#utility.yul\":15778:15871   */\n      tag_472\n        /* \"#utility.yul\":15867:15870   */\n      dup3\n        /* \"#utility.yul\":15778:15871   */\n      tag_325\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":15896:15898   */\n      0x40\n        /* \"#utility.yul\":15891:15894   */\n      dup3\n        /* \"#utility.yul\":15887:15899   */\n      add\n        /* \"#utility.yul\":15880:15899   */\n      swap1\n      pop\n        /* \"#utility.yul\":15539:15905   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15911:16330   */\n    tag_155:\n        /* \"#utility.yul\":16077:16081   */\n      0x00\n        /* \"#utility.yul\":16115:16117   */\n      0x20\n        /* \"#utility.yul\":16104:16113   */\n      dup3\n        /* \"#utility.yul\":16100:16118   */\n      add\n        /* \"#utility.yul\":16092:16118   */\n      swap1\n      pop\n        /* \"#utility.yul\":16164:16173   */\n      dup2\n        /* \"#utility.yul\":16158:16162   */\n      dup2\n        /* \"#utility.yul\":16154:16174   */\n      sub\n        /* \"#utility.yul\":16150:16151   */\n      0x00\n        /* \"#utility.yul\":16139:16148   */\n      dup4\n        /* \"#utility.yul\":16135:16152   */\n      add\n        /* \"#utility.yul\":16128:16175   */\n      mstore\n        /* \"#utility.yul\":16192:16323   */\n      tag_474\n        /* \"#utility.yul\":16318:16322   */\n      dup2\n        /* \"#utility.yul\":16192:16323   */\n      tag_326\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16184:16323   */\n      swap1\n      pop\n        /* \"#utility.yul\":15911:16330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16336:16516   */\n    tag_164:\n        /* \"#utility.yul\":16384:16461   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16381:16382   */\n      0x00\n        /* \"#utility.yul\":16374:16462   */\n      mstore\n        /* \"#utility.yul\":16481:16485   */\n      0x32\n        /* \"#utility.yul\":16478:16479   */\n      0x04\n        /* \"#utility.yul\":16471:16486   */\n      mstore\n        /* \"#utility.yul\":16505:16509   */\n      0x24\n        /* \"#utility.yul\":16502:16503   */\n      0x00\n        /* \"#utility.yul\":16495:16510   */\n      revert\n        /* \"#utility.yul\":16522:16702   */\n    tag_327:\n        /* \"#utility.yul\":16570:16647   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16567:16568   */\n      0x00\n        /* \"#utility.yul\":16560:16648   */\n      mstore\n        /* \"#utility.yul\":16667:16671   */\n      0x12\n        /* \"#utility.yul\":16664:16665   */\n      0x04\n        /* \"#utility.yul\":16657:16672   */\n      mstore\n        /* \"#utility.yul\":16691:16695   */\n      0x24\n        /* \"#utility.yul\":16688:16689   */\n      0x00\n        /* \"#utility.yul\":16681:16696   */\n      revert\n        /* \"#utility.yul\":16708:16884   */\n    tag_238:\n        /* \"#utility.yul\":16740:16741   */\n      0x00\n        /* \"#utility.yul\":16757:16777   */\n      tag_478\n        /* \"#utility.yul\":16775:16776   */\n      dup3\n        /* \"#utility.yul\":16757:16777   */\n      tag_288\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16752:16777   */\n      swap2\n      pop\n        /* \"#utility.yul\":16791:16811   */\n      tag_479\n        /* \"#utility.yul\":16809:16810   */\n      dup4\n        /* \"#utility.yul\":16791:16811   */\n      tag_288\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16786:16811   */\n      swap3\n      pop\n        /* \"#utility.yul\":16830:16831   */\n      dup3\n        /* \"#utility.yul\":16820:16855   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":16835:16853   */\n      tag_481\n      tag_327\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":16820:16855   */\n    tag_480:\n        /* \"#utility.yul\":16876:16877   */\n      dup3\n        /* \"#utility.yul\":16873:16874   */\n      dup3\n        /* \"#utility.yul\":16869:16878   */\n      mod\n        /* \"#utility.yul\":16864:16878   */\n      swap1\n      pop\n        /* \"#utility.yul\":16708:16884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16890:17123   */\n    tag_261:\n        /* \"#utility.yul\":16929:16932   */\n      0x00\n        /* \"#utility.yul\":16952:16976   */\n      tag_483\n        /* \"#utility.yul\":16970:16975   */\n      dup3\n        /* \"#utility.yul\":16952:16976   */\n      tag_288\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":16943:16976   */\n      swap2\n      pop\n        /* \"#utility.yul\":16998:17064   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16991:16996   */\n      dup3\n        /* \"#utility.yul\":16988:17065   */\n      sub\n        /* \"#utility.yul\":16985:17088   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":17068:17086   */\n      tag_485\n      tag_314\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16985:17088   */\n    tag_484:\n        /* \"#utility.yul\":17115:17116   */\n      0x01\n        /* \"#utility.yul\":17108:17113   */\n      dup3\n        /* \"#utility.yul\":17104:17117   */\n      add\n        /* \"#utility.yul\":17097:17117   */\n      swap1\n      pop\n        /* \"#utility.yul\":16890:17123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17129:17300   */\n    tag_268:\n        /* \"#utility.yul\":17168:17171   */\n      0x00\n        /* \"#utility.yul\":17191:17215   */\n      tag_487\n        /* \"#utility.yul\":17209:17214   */\n      dup3\n        /* \"#utility.yul\":17191:17215   */\n      tag_288\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17182:17215   */\n      swap2\n      pop\n        /* \"#utility.yul\":17237:17241   */\n      0x00\n        /* \"#utility.yul\":17230:17235   */\n      dup3\n        /* \"#utility.yul\":17227:17242   */\n      sub\n        /* \"#utility.yul\":17224:17265   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":17245:17263   */\n      tag_489\n      tag_314\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17224:17265   */\n    tag_488:\n        /* \"#utility.yul\":17292:17293   */\n      0x01\n        /* \"#utility.yul\":17285:17290   */\n      dup3\n        /* \"#utility.yul\":17281:17294   */\n      sub\n        /* \"#utility.yul\":17274:17294   */\n      swap1\n      pop\n        /* \"#utility.yul\":17129:17300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17306:17400   */\n    tag_328:\n        /* \"#utility.yul\":17339:17347   */\n      0x00\n        /* \"#utility.yul\":17387:17392   */\n      dup2\n        /* \"#utility.yul\":17383:17385   */\n      0x60\n        /* \"#utility.yul\":17379:17393   */\n      shl\n        /* \"#utility.yul\":17358:17393   */\n      swap1\n      pop\n        /* \"#utility.yul\":17306:17400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17406:17500   */\n    tag_329:\n        /* \"#utility.yul\":17445:17452   */\n      0x00\n        /* \"#utility.yul\":17474:17494   */\n      tag_492\n        /* \"#utility.yul\":17488:17493   */\n      dup3\n        /* \"#utility.yul\":17474:17494   */\n      tag_328\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":17463:17494   */\n      swap1\n      pop\n        /* \"#utility.yul\":17406:17500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17506:17606   */\n    tag_330:\n        /* \"#utility.yul\":17545:17552   */\n      0x00\n        /* \"#utility.yul\":17574:17600   */\n      tag_494\n        /* \"#utility.yul\":17594:17599   */\n      dup3\n        /* \"#utility.yul\":17574:17600   */\n      tag_329\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17563:17600   */\n      swap1\n      pop\n        /* \"#utility.yul\":17506:17606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17612:17769   */\n    tag_331:\n        /* \"#utility.yul\":17717:17762   */\n      tag_496\n        /* \"#utility.yul\":17737:17761   */\n      tag_497\n        /* \"#utility.yul\":17755:17760   */\n      dup3\n        /* \"#utility.yul\":17737:17761   */\n      tag_285\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":17717:17762   */\n      tag_330\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":17712:17715   */\n      dup3\n        /* \"#utility.yul\":17705:17763   */\n      mstore\n        /* \"#utility.yul\":17612:17769   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17775:17854   */\n    tag_332:\n        /* \"#utility.yul\":17814:17821   */\n      0x00\n        /* \"#utility.yul\":17843:17848   */\n      dup2\n        /* \"#utility.yul\":17832:17848   */\n      swap1\n      pop\n        /* \"#utility.yul\":17775:17854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17860:18017   */\n    tag_333:\n        /* \"#utility.yul\":17965:18010   */\n      tag_500\n        /* \"#utility.yul\":17985:18009   */\n      tag_501\n        /* \"#utility.yul\":18003:18008   */\n      dup3\n        /* \"#utility.yul\":17985:18009   */\n      tag_288\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17965:18010   */\n      tag_332\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17960:17963   */\n      dup3\n        /* \"#utility.yul\":17953:18011   */\n      mstore\n        /* \"#utility.yul\":17860:18017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18023:18420   */\n    tag_271:\n        /* \"#utility.yul\":18163:18166   */\n      0x00\n        /* \"#utility.yul\":18178:18253   */\n      tag_503\n        /* \"#utility.yul\":18249:18252   */\n      dup3\n        /* \"#utility.yul\":18240:18246   */\n      dup6\n        /* \"#utility.yul\":18178:18253   */\n      tag_331\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18278:18280   */\n      0x14\n        /* \"#utility.yul\":18273:18276   */\n      dup3\n        /* \"#utility.yul\":18269:18281   */\n      add\n        /* \"#utility.yul\":18262:18281   */\n      swap2\n      pop\n        /* \"#utility.yul\":18291:18366   */\n      tag_504\n        /* \"#utility.yul\":18362:18365   */\n      dup3\n        /* \"#utility.yul\":18353:18359   */\n      dup5\n        /* \"#utility.yul\":18291:18366   */\n      tag_333\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18391:18393   */\n      0x20\n        /* \"#utility.yul\":18386:18389   */\n      dup3\n        /* \"#utility.yul\":18382:18394   */\n      add\n        /* \"#utility.yul\":18375:18394   */\n      swap2\n      pop\n        /* \"#utility.yul\":18411:18414   */\n      dup2\n        /* \"#utility.yul\":18404:18414   */\n      swap1\n      pop\n        /* \"#utility.yul\":18023:18420   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122075935687ac2e56aa33418c1ae2aee89ca31fbd624f91fb97aee9a9f9f2d1aec864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3522": {
									"entryPoint": null,
									"id": 3522,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16t_uint16t_uint256_fromMemory": {
									"entryPoint": 334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1910:4",
										"nodeType": "YulBlock",
										"src": "0:1910:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "378:45:4",
													"nodeType": "YulBlock",
													"src": "378:45:4",
													"statements": [
														{
															"nativeSrc": "388:29:4",
															"nodeType": "YulAssignment",
															"src": "388:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:6:4",
																		"nodeType": "YulLiteral",
																		"src": "410:6:4",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:4"
																},
																"nativeSrc": "399:18:4",
																"nodeType": "YulFunctionCall",
																"src": "399:18:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "334:89:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:4",
														"nodeType": "YulTypedName",
														"src": "360:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:4",
														"nodeType": "YulTypedName",
														"src": "370:7:4",
														"type": ""
													}
												],
												"src": "334:89:4"
											},
											{
												"body": {
													"nativeSrc": "471:78:4",
													"nodeType": "YulBlock",
													"src": "471:78:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "527:16:4",
																"nodeType": "YulBlock",
																"src": "527:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:4",
																					"nodeType": "YulLiteral",
																					"src": "536:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "539:1:4",
																					"nodeType": "YulLiteral",
																					"src": "539:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "529:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "529:6:4"
																			},
																			"nativeSrc": "529:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "529:12:4"
																		},
																		"nativeSrc": "529:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "529:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "494:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "494:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "518:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "518:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "501:16:4",
																					"nodeType": "YulIdentifier",
																					"src": "501:16:4"
																				},
																				"nativeSrc": "501:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "501:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "491:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "491:2:4"
																		},
																		"nativeSrc": "491:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "491:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "484:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "484:6:4"
																},
																"nativeSrc": "484:42:4",
																"nodeType": "YulFunctionCall",
																"src": "484:42:4"
															},
															"nativeSrc": "481:62:4",
															"nodeType": "YulIf",
															"src": "481:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "429:120:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "464:5:4",
														"nodeType": "YulTypedName",
														"src": "464:5:4",
														"type": ""
													}
												],
												"src": "429:120:4"
											},
											{
												"body": {
													"nativeSrc": "617:79:4",
													"nodeType": "YulBlock",
													"src": "617:79:4",
													"statements": [
														{
															"nativeSrc": "627:22:4",
															"nodeType": "YulAssignment",
															"src": "627:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "642:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "642:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "636:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "636:5:4"
																},
																"nativeSrc": "636:13:4",
																"nodeType": "YulFunctionCall",
																"src": "636:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "627:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "684:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "658:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "658:25:4"
																},
																"nativeSrc": "658:32:4",
																"nodeType": "YulFunctionCall",
																"src": "658:32:4"
															},
															"nativeSrc": "658:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "658:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "555:141:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:4",
														"nodeType": "YulTypedName",
														"src": "595:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "603:3:4",
														"nodeType": "YulTypedName",
														"src": "603:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "611:5:4",
														"nodeType": "YulTypedName",
														"src": "611:5:4",
														"type": ""
													}
												],
												"src": "555:141:4"
											},
											{
												"body": {
													"nativeSrc": "747:32:4",
													"nodeType": "YulBlock",
													"src": "747:32:4",
													"statements": [
														{
															"nativeSrc": "757:16:4",
															"nodeType": "YulAssignment",
															"src": "757:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "768:5:4",
																"nodeType": "YulIdentifier",
																"src": "768:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "757:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "757:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "702:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:4",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "739:7:4",
														"nodeType": "YulTypedName",
														"src": "739:7:4",
														"type": ""
													}
												],
												"src": "702:77:4"
											},
											{
												"body": {
													"nativeSrc": "828:79:4",
													"nodeType": "YulBlock",
													"src": "828:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "885:16:4",
																"nodeType": "YulBlock",
																"src": "885:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "894:1:4",
																					"nodeType": "YulLiteral",
																					"src": "894:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "897:1:4",
																					"nodeType": "YulLiteral",
																					"src": "897:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "887:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:4"
																			},
																			"nativeSrc": "887:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "887:12:4"
																		},
																		"nativeSrc": "887:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "887:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "851:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "851:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "876:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "876:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "858:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "858:17:4"
																				},
																				"nativeSrc": "858:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "858:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "848:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "848:2:4"
																		},
																		"nativeSrc": "848:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "848:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "841:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "841:6:4"
																},
																"nativeSrc": "841:43:4",
																"nodeType": "YulFunctionCall",
																"src": "841:43:4"
															},
															"nativeSrc": "838:63:4",
															"nodeType": "YulIf",
															"src": "838:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "785:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "821:5:4",
														"nodeType": "YulTypedName",
														"src": "821:5:4",
														"type": ""
													}
												],
												"src": "785:122:4"
											},
											{
												"body": {
													"nativeSrc": "976:80:4",
													"nodeType": "YulBlock",
													"src": "976:80:4",
													"statements": [
														{
															"nativeSrc": "986:22:4",
															"nodeType": "YulAssignment",
															"src": "986:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1001:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1001:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "995:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "995:5:4"
																},
																"nativeSrc": "995:13:4",
																"nodeType": "YulFunctionCall",
																"src": "995:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "986:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "986:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1044:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1044:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1017:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1017:26:4"
																},
																"nativeSrc": "1017:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1017:33:4"
															},
															"nativeSrc": "1017:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1017:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "913:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "954:6:4",
														"nodeType": "YulTypedName",
														"src": "954:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "962:3:4",
														"nodeType": "YulTypedName",
														"src": "962:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "970:5:4",
														"nodeType": "YulTypedName",
														"src": "970:5:4",
														"type": ""
													}
												],
												"src": "913:143:4"
											},
											{
												"body": {
													"nativeSrc": "1171:550:4",
													"nodeType": "YulBlock",
													"src": "1171:550:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1217:83:4",
																"nodeType": "YulBlock",
																"src": "1217:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1219:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1219:77:4"
																			},
																			"nativeSrc": "1219:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1219:79:4"
																		},
																		"nativeSrc": "1219:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1192:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1192:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1201:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1201:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1188:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:4"
																		},
																		"nativeSrc": "1188:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1188:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1213:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1184:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1184:3:4"
																},
																"nativeSrc": "1184:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1184:32:4"
															},
															"nativeSrc": "1181:119:4",
															"nodeType": "YulIf",
															"src": "1181:119:4"
														},
														{
															"nativeSrc": "1310:127:4",
															"nodeType": "YulBlock",
															"src": "1310:127:4",
															"statements": [
																{
																	"nativeSrc": "1325:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1325:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1339:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1339:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1329:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1329:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1354:73:4",
																	"nodeType": "YulAssignment",
																	"src": "1354:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1399:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1399:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1410:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1410:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1395:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1395:3:4"
																				},
																				"nativeSrc": "1395:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1395:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "1364:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "1364:30:4"
																		},
																		"nativeSrc": "1364:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1364:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1354:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1354:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1447:128:4",
															"nodeType": "YulBlock",
															"src": "1447:128:4",
															"statements": [
																{
																	"nativeSrc": "1462:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1462:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1476:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1466:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1466:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1492:73:4",
																	"nodeType": "YulAssignment",
																	"src": "1492:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1537:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1537:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1548:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1548:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1533:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:4"
																				},
																				"nativeSrc": "1533:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1533:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1557:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1557:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "1502:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "1502:30:4"
																		},
																		"nativeSrc": "1502:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1492:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1492:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1585:129:4",
															"nodeType": "YulBlock",
															"src": "1585:129:4",
															"statements": [
																{
																	"nativeSrc": "1600:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1600:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1614:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1614:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1604:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1604:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1630:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1630:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1676:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1676:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1687:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1687:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1672:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1672:3:4"
																				},
																				"nativeSrc": "1672:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1672:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1696:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1696:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1640:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1640:31:4"
																		},
																		"nativeSrc": "1640:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1640:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1630:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1630:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_uint16t_uint256_fromMemory",
												"nativeSrc": "1062:659:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1125:9:4",
														"nodeType": "YulTypedName",
														"src": "1125:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1136:7:4",
														"nodeType": "YulTypedName",
														"src": "1136:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1148:6:4",
														"nodeType": "YulTypedName",
														"src": "1148:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1156:6:4",
														"nodeType": "YulTypedName",
														"src": "1156:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1164:6:4",
														"nodeType": "YulTypedName",
														"src": "1164:6:4",
														"type": ""
													}
												],
												"src": "1062:659:4"
											},
											{
												"body": {
													"nativeSrc": "1755:152:4",
													"nodeType": "YulBlock",
													"src": "1755:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1772:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1772:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1775:77:4",
																		"nodeType": "YulLiteral",
																		"src": "1775:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1765:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:4"
																},
																"nativeSrc": "1765:88:4",
																"nodeType": "YulFunctionCall",
																"src": "1765:88:4"
															},
															"nativeSrc": "1765:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "1765:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1869:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1869:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1872:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1872:4:4",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1862:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:4"
																},
																"nativeSrc": "1862:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1862:15:4"
															},
															"nativeSrc": "1862:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1862:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1893:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1893:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1896:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1896:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1886:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:4"
																},
																"nativeSrc": "1886:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1886:15:4"
															},
															"nativeSrc": "1886:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1886:15:4"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1727:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1727:180:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_uint16t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161216a38038061216a8339818101604052810190610031919061014e565b335f60046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550825f806101000a81548161ffff021916908361ffff160217905550815f60026101000a81548161ffff021916908361ffff1602179055505f60075f6101000a81548160ff021916908360018111156100cc576100cb61019e565b5b0217905550806002819055505050506101cb565b5f80fd5b5f61ffff82169050919050565b6100fa816100e4565b8114610104575f80fd5b50565b5f81519050610115816100f1565b92915050565b5f819050919050565b61012d8161011b565b8114610137575f80fd5b50565b5f8151905061014881610124565b92915050565b5f805f60608486031215610165576101646100e0565b5b5f61017286828701610107565b935050602061018386828701610107565b92505060406101948682870161013a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611f92806101d85f395ff3fe60806040526004361061009b575f3560e01c8063b1c9fe6e11610063578063b1c9fe6e1461015b578063c2897b1014610185578063e69828b11461019b578063efa2e37f146101c5578063f120daf314610201578063f90f45601461023d5761009b565b80631d73c64c1461009f5780632ae3594a146100c9578063553df021146100df57806389a78f1a146100f55780639de2ee2114610131575b5f80fd5b3480156100aa575f80fd5b506100b3610247565b6040516100c0919061160f565b60405180910390f35b3480156100d4575f80fd5b506100dd610258565b005b3480156100ea575f80fd5b506100f3610356565b005b348015610100575f80fd5b5061011b60048036038101906101169190611686565b6105c4565b60405161012891906116c9565b60405180910390f35b34801561013c575f80fd5b506101456105d9565b60405161015291906116f1565b60405180910390f35b348015610166575f80fd5b5061016f6105fe565b60405161017c919061177d565b60405180910390f35b348015610190575f80fd5b50610199610610565b005b3480156101a6575f80fd5b506101af61070f565b6040516101bc919061160f565b60405180910390f35b3480156101d0575f80fd5b506101eb60048036038101906101e691906117c0565b610722565b6040516101f89190611844565b60405180910390f35b34801561020c575f80fd5b5061022760048036038101906102229190611686565b610760565b60405161023491906118a3565b60405180910390f35b61024561077d565b005b5f8054906101000a900461ffff1681565b60028081111561026b5761026a61170a565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156102c7576102c661170a565b5b03610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe9061193c565b60405180910390fd5b610311600161094c565b3373ffffffffffffffffffffffffffffffffffffffff167f7eddbf27696273b85afcfa4ac444b5cbe6a9cb035d808d8e28b25c1fa694a65960405160405180910390a2565b5f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc906119a4565b60405180910390fd5b60015442101561042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190611a0c565b60405180910390fd5b5f600181111561043d5761043c61170a565b5b60075f9054906101000a900460ff16600181111561045e5761045d61170a565b5b148061049b57506001808111156104785761047761170a565b5b60075f9054906101000a900460ff1660018111156104995761049861170a565b5b145b6104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190611a74565b60405180910390fd5b5f60018111156104ed576104ec61170a565b5b60075f9054906101000a900460ff16600181111561050e5761050d61170a565b5b036105525761051b610aeb565b610523610c72565b600160075f6101000a81548160ff021916908360018111156105485761054761170a565b5b021790555061059d565b6001808111156105655761056461170a565b5b60075f9054906101000a900460ff1660018111156105865761058561170a565b5b0361059c57610593610d29565b61059b61114f565b5b5b5f60029054906101000a900461ffff1661ffff16426105bc9190611abf565b600181905550565b6005602052805f5260405f205f915090505481565b5f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075f9054906101000a900460ff1681565b600160028111156106245761062361170a565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156106805761067f61170a565b5b036106c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b790611b62565b60405180910390fd5b6106ca600261094c565b3373ffffffffffffffffffffffffffffffffffffffff167fcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc2037560405160405180910390a2565b5f60029054906101000a900461ffff1681565b6004602052815f5260405f20818154811061073b575f80fd5b905f5260205f209060209182820401919006915091509054906101000a900460ff1681565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60018111156107905761078f61170a565b5b60075f9054906101000a900460ff1660018111156107b1576107b061170a565b5b146107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611bca565b60405180910390fd5b5f8054906101000a900461ffff1661ffff163414610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b90611c32565b60405180910390fd5b3460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360028111156109455761094461170a565b5b0217905550565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c290611c9a565b60405180910390fd5b6001808111156109de576109dd61170a565b5b60075f9054906101000a900460ff1660018111156109ff576109fe61170a565b5b14610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611d28565b60405180910390fd5b600154421115610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b90611db6565b60405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690836002811115610ae357610ae261170a565b5b021790555050565b5f5b600380549050811015610c6f575f60038281548110610b0f57610b0e611dd4565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060045f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610b7e61144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610bc857610bc761170a565b5b021790555060045f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610c1261144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610c5c57610c5b61170a565b5b0217905550508080600101915050610aed565b50565b60045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610cd861144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610d2257610d2161170a565b5b0217905550565b5f5b60038054905081101561114c575f60038281548110610d4d57610d4c611dd4565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905060016002811115610dd857610dd761170a565b5b816002811115610deb57610dea61170a565b5b036110685760045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610e3561144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610e7f57610e7e61170a565b5b02179055506015610f4b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610f4157602002820191905f5260205f20905f905b82829054906101000a900460ff16600c811115610f1c57610f1b61170a565b5b815260200190600101906020825f01049283019260010382029150808411610efc5790505b505050505061147c565b1115610ffe578173ffffffffffffffffffffffffffffffffffffffff167ffd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e60405160405180910390a2600260065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690836002811115610ff457610ff361170a565b5b0217905550611063565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561105d5761105c61170a565b5b02179055505b61113d565b5f600281111561107b5761107a61170a565b5b81600281111561108e5761108d61170a565b5b0361113c578173ffffffffffffffffffffffffffffffffffffffff167fcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc2037560405160405180910390a2600260065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360028111156111365761113561170a565b5b02179055505b5b50508080600101915050610d2b565b50565b5b601161123860045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561122e57602002820191905f5260205f20905f905b82829054906101000a900460ff16600c8111156112095761120861170a565b5b815260200190600101906020825f010492830192600103820291508084116111e95790505b505050505061147c565b10156112f85760045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206112a461144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c8111156112ee576112ed61170a565b5b0217905550611150565b60156113e060045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806020026020016040519081016040528092919081815260200182805480156113d657602002820191905f5260205f20905f905b82829054906101000a900460ff16600c8111156113b1576113b061170a565b5b815260200190600101906020825f010492830192600103820291508084116113915790505b505050505061147c565b111561144b575f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ffd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e60405160405180910390a25b565b5f600d60ff1661145b611588565b6114659190611e2e565b600c8111156114775761147661170a565b5b905090565b5f805f90505f5b835181101561153d576114cf60018583815181106114a4576114a3611dd4565b5b6020026020010151600c8111156114be576114bd61170a565b5b6114c89190611abf565b600a6115b9565b836114da9190611abf565b92505f600c8111156114ef576114ee61170a565b5b84828151811061150257611501611dd4565b5b6020026020010151600c81111561151c5761151b61170a565b5b0361153057818061152c90611e5e565b9250505b8080600101915050611483565b505b5f8111801561155b57506015600a836115589190611abf565b11155b1561158257600a8261156d9190611abf565b9150808061157a90611ea5565b91505061153f565b50919050565b5f334260405160200161159c929190611f31565b604051602081830303815290604052805190602001205f1c905090565b5f6115c782841084846115cf565b905092915050565b5f6115d9846115e8565b82841802821890509392505050565b5f8115159050919050565b5f61ffff82169050919050565b611609816115f3565b82525050565b5f6020820190506116225f830184611600565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116558261162c565b9050919050565b6116658161164b565b811461166f575f80fd5b50565b5f813590506116808161165c565b92915050565b5f6020828403121561169b5761169a611628565b5b5f6116a884828501611672565b91505092915050565b5f819050919050565b6116c3816116b1565b82525050565b5f6020820190506116dc5f8301846116ba565b92915050565b6116eb8161164b565b82525050565b5f6020820190506117045f8301846116e2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600281106117485761174761170a565b5b50565b5f81905061175882611737565b919050565b5f6117678261174b565b9050919050565b6117778161175d565b82525050565b5f6020820190506117905f83018461176e565b92915050565b61179f816116b1565b81146117a9575f80fd5b50565b5f813590506117ba81611796565b92915050565b5f80604083850312156117d6576117d5611628565b5b5f6117e385828601611672565b92505060206117f4858286016117ac565b9150509250929050565b600d811061180f5761180e61170a565b5b50565b5f81905061181f826117fe565b919050565b5f61182e82611812565b9050919050565b61183e81611824565b82525050565b5f6020820190506118575f830184611835565b92915050565b6003811061186e5761186d61170a565b5b50565b5f81905061187e8261185d565b919050565b5f61188d82611871565b9050919050565b61189d81611883565b82525050565b5f6020820190506118b65f830184611894565b92915050565b5f82825260208201905092915050565b7f506c6179657220616c72656164792073656c6563746564207374616e64206f6e5f8201527f63652e0000000000000000000000000000000000000000000000000000000000602082015250565b5f6119266023836118bc565b9150611931826118cc565b604082019050919050565b5f6020820190508181035f8301526119538161191a565b9050919050565b7f4f6e6c7920746865206465616c65722063616e206465616c00000000000000005f82015250565b5f61198e6018836118bc565b91506119998261195a565b602082019050919050565b5f6020820190508181035f8301526119bb81611982565b9050919050565b7f43757272656e7420726f756e64206973207374696c6c2072756e6e696e672e005f82015250565b5f6119f6601f836118bc565b9150611a01826119c2565b602082019050919050565b5f6020820190508181035f830152611a23816119ea565b9050919050565b7f47616d65206e6f7420696e20636f72726563742073746174652e0000000000005f82015250565b5f611a5e601a836118bc565b9150611a6982611a2a565b602082019050919050565b5f6020820190508181035f830152611a8b81611a52565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ac9826116b1565b9150611ad4836116b1565b9250828201905080821115611aec57611aeb611a92565b5b92915050565b7f506c6179657220616c72656164792073656c656374656420686974206f6e63655f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b4c6021836118bc565b9150611b5782611af2565b604082019050919050565b5f6020820190508181035f830152611b7981611b40565b9050919050565b7f4e6f742074616b696e6720616e79206e657720706c61796572732e00000000005f82015250565b5f611bb4601b836118bc565b9150611bbf82611b80565b602082019050919050565b5f6020820190508181035f830152611be181611ba8565b9050919050565b7f496e636f727265637420696e697469616c206265742e000000000000000000005f82015250565b5f611c1c6016836118bc565b9150611c2782611be8565b602082019050919050565b5f6020820190508181035f830152611c4981611c10565b9050919050565b7f506c61796572206469646e277420706c61636520616e7920626574732e0000005f82015250565b5f611c84601d836118bc565b9150611c8f82611c50565b602082019050919050565b5f6020820190508181035f830152611cb181611c78565b9050919050565b7f43757272656e746c79206e6f7420616c6c6f77696e6720686974206f722073745f8201527f616e6420616374696f6e732e0000000000000000000000000000000000000000602082015250565b5f611d12602c836118bc565b9150611d1d82611cb8565b604082019050919050565b5f6020820190508181035f830152611d3f81611d06565b9050919050565b7f526f756e6420646f6573206e6f742061636365707420616e79206d6f726520635f8201527f68616e6765730000000000000000000000000000000000000000000000000000602082015250565b5f611da06026836118bc565b9150611dab82611d46565b604082019050919050565b5f6020820190508181035f830152611dcd81611d94565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e38826116b1565b9150611e43836116b1565b925082611e5357611e52611e01565b5b828206905092915050565b5f611e68826116b1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e9a57611e99611a92565b5b600182019050919050565b5f611eaf826116b1565b91505f8203611ec157611ec0611a92565b5b600182039050919050565b5f8160601b9050919050565b5f611ee282611ecc565b9050919050565b5f611ef382611ed8565b9050919050565b611f0b611f068261164b565b611ee9565b82525050565b5f819050919050565b611f2b611f26826116b1565b611f11565b82525050565b5f611f3c8285611efa565b601482019150611f4c8284611f1a565b602082019150819050939250505056fea264697066735822122075935687ac2e56aa33418c1ae2aee89ca31fbd624f91fb97aee9a9f9f2d1aec864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x216A CODESIZE SUB DUP1 PUSH2 0x216A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST CALLER PUSH0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH0 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCC JUMPI PUSH2 0xCB PUSH2 0x19E JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1CB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA DUP2 PUSH2 0xE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x115 DUP2 PUSH2 0xF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D DUP2 PUSH2 0x11B JUMP JUMPDEST DUP2 EQ PUSH2 0x137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x148 DUP2 PUSH2 0x124 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0xE0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x172 DUP7 DUP3 DUP8 ADD PUSH2 0x107 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x183 DUP7 DUP3 DUP8 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x194 DUP7 DUP3 DUP8 ADD PUSH2 0x13A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F92 DUP1 PUSH2 0x1D8 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1C9FE6E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB1C9FE6E EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xC2897B10 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xE69828B1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xEFA2E37F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF120DAF3 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xF90F4560 EQ PUSH2 0x23D JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x1D73C64C EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2AE3594A EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x553DF021 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x89A78F1A EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x9DE2EE21 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26A PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x307 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FE SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x311 PUSH1 0x1 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7EDDBF27696273B85AFCFA4AC444B5CBE6A9CB035D808D8E28B25C1FA694A659 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45D PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x49B JUMPI POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x477 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH2 0x498 PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x552 JUMPI PUSH2 0x51B PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x523 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH2 0x547 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x59C JUMPI PUSH2 0x593 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x59B PUSH2 0x114F JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND TIMESTAMP PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B7 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CA PUSH1 0x2 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x790 JUMPI PUSH2 0x78F PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B0 PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND CALLVALUE EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x945 JUMPI PUSH2 0x944 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x4 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xB7E PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xC12 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xC5C JUMPI PUSH2 0xC5B PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xCD8 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x114C JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDD7 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1068 JUMPI PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xE35 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x15 PUSH2 0xF4B PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1B PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xEFC JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST GT ISZERO PUSH2 0xFFE JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFF4 JUMPI PUSH2 0xFF3 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1063 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x113C JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD2B JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH2 0x1238 PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x122E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x11E9 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST LT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x12A4 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH2 0x12ED PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x15 PUSH2 0x13E0 PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13D6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1391 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST GT ISZERO PUSH2 0x144B JUMPI PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH1 0xFF AND PUSH2 0x145B PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x153D JUMPI PUSH2 0x14CF PUSH1 0x1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC DUP2 GT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x14C8 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0xA PUSH2 0x15B9 JUMP JUMPDEST DUP4 PUSH2 0x14DA SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP PUSH0 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1502 JUMPI PUSH2 0x1501 PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC DUP2 GT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1530 JUMPI DUP2 DUP1 PUSH2 0x152C SWAP1 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1483 JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x155B JUMPI POP PUSH1 0x15 PUSH1 0xA DUP4 PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x1582 JUMPI PUSH1 0xA DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x157A SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x153F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x159C SWAP3 SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x15C7 DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D9 DUP5 PUSH2 0x15E8 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1609 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1622 PUSH0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x162C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP2 EQ PUSH2 0x166F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1680 DUP2 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DC PUSH0 DUP4 ADD DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EB DUP2 PUSH2 0x164B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1758 DUP3 PUSH2 0x1737 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1767 DUP3 PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1777 DUP2 PUSH2 0x175D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1790 PUSH0 DUP4 ADD DUP5 PUSH2 0x176E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x17A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17BA DUP2 PUSH2 0x1796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F4 DUP6 DUP3 DUP7 ADD PUSH2 0x17AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x181F DUP3 PUSH2 0x17FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182E DUP3 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183E DUP2 PUSH2 0x1824 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1857 PUSH0 DUP4 ADD DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x187E DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x188D DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C6179657220616C72656164792073656C6563746564207374616E64206F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x63652E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1926 PUSH1 0x23 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1931 DUP3 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1953 DUP2 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206465616C65722063616E206465616C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198E PUSH1 0x18 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1999 DUP3 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19BB DUP2 PUSH2 0x1982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420726F756E64206973207374696C6C2072756E6E696E672E00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F6 PUSH1 0x1F DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A01 DUP3 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A23 DUP2 PUSH2 0x19EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206E6F7420696E20636F72726563742073746174652E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5E PUSH1 0x1A DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A69 DUP3 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8B DUP2 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AC9 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C6179657220616C72656164792073656C656374656420686974206F6E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4C PUSH1 0x21 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B57 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742074616B696E6720616E79206E657720706C61796572732E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB4 PUSH1 0x1B DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE1 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420696E697469616C206265742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1C PUSH1 0x16 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C27 DUP3 PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C49 DUP2 PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C61796572206469646E277420706C61636520616E7920626574732E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C84 PUSH1 0x1D DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8F DUP3 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB1 DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E746C79206E6F7420616C6C6F77696E6720686974206F72207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E6420616374696F6E732E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH1 0x2C DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1D DUP3 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3F DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420646F6573206E6F742061636365707420616E79206D6F72652063 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E6765730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 PUSH1 0x26 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DCD DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E38 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E68 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAF DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE2 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF3 DUP3 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0B PUSH2 0x1F06 DUP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1EE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F26 DUP3 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x1F11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C DUP3 DUP6 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1F4C DUP3 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x935687AC2E56AA33418C1AE2AEE89CA31FBD624F91FB SWAP8 0xAE 0xE9 0xA9 0xF9 CALLCODE 0xD1 0xAE 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "163:5833:3:-:0;;;958:298;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1088:10;1079:6;;:19;;;;;;;;;;;;;;;;;;1121:11;1108:10;;:24;;;;;;;;;;;;;;;;;;1163:19;1142:18;;:40;;;;;;;;;;;;;;;;;;1200:15;1192:5;;:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1238:11;1225:10;:24;;;;958:298;;;163:5833;;88:117:4;197:1;194;187:12;334:89;370:7;410:6;403:5;399:18;388:29;;334:89;;;:::o;429:120::-;501:23;518:5;501:23;:::i;:::-;494:5;491:34;481:62;;539:1;536;529:12;481:62;429:120;:::o;555:141::-;611:5;642:6;636:13;627:22;;658:32;684:5;658:32;:::i;:::-;555:141;;;;:::o;702:77::-;739:7;768:5;757:16;;702:77;;;:::o;785:122::-;858:24;876:5;858:24;:::i;:::-;851:5;848:35;838:63;;897:1;894;887:12;838:63;785:122;:::o;913:143::-;970:5;1001:6;995:13;986:22;;1017:33;1044:5;1017:33;:::i;:::-;913:143;;;;:::o;1062:659::-;1148:6;1156;1164;1213:2;1201:9;1192:7;1188:23;1184:32;1181:119;;;1219:79;;:::i;:::-;1181:119;1339:1;1364:63;1419:7;1410:6;1399:9;1395:22;1364:63;:::i;:::-;1354:73;;1310:127;1476:2;1502:63;1557:7;1548:6;1537:9;1533:22;1502:63;:::i;:::-;1492:73;;1447:128;1614:2;1640:64;1696:7;1687:6;1676:9;1672:22;1640:64;:::i;:::-;1630:74;;1585:129;1062:659;;;;;:::o;1727:180::-;1775:77;1772:1;1765:88;1872:4;1869:1;1862:15;1896:4;1893:1;1886:15;163:5833:3;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bets_3476": {
									"entryPoint": 1476,
									"id": 3476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dealCardToDealer_3807": {
									"entryPoint": 3186,
									"id": 3807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dealCardsToPlayers_3756": {
									"entryPoint": 3369,
									"id": 3756,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dealInitialHand_3795": {
									"entryPoint": 2795,
									"id": 3795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deal_3634": {
									"entryPoint": 854,
									"id": 3634,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dealer_3444": {
									"entryPoint": 1497,
									"id": 3444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decide_3931": {
									"entryPoint": 2380,
									"id": 3931,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@finalDealerReveal_3841": {
									"entryPoint": 4431,
									"id": 3841,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCard_3648": {
									"entryPoint": 5197,
									"id": 3648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRandomNumber_3667": {
									"entryPoint": 5512,
									"id": 3667,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hands_3472": {
									"entryPoint": 1826,
									"id": 3472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hit_3866": {
									"entryPoint": 600,
									"id": 3866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialBet_3440": {
									"entryPoint": 583,
									"id": 3440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_286": {
									"entryPoint": 5561,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@phase_3484": {
									"entryPoint": 1534,
									"id": 3484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@placeBet_3565": {
									"entryPoint": 1917,
									"id": 3565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@playerDecisions_3481": {
									"entryPoint": 1888,
									"id": 3481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@roundSessionExpiry_3442": {
									"entryPoint": 1807,
									"id": 3442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stand_3891": {
									"entryPoint": 1552,
									"id": 3891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sumOfHand_4003": {
									"entryPoint": 5244,
									"id": 4003,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_248": {
									"entryPoint": 5583,
									"id": 248,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@toUint_3421": {
									"entryPoint": 5608,
									"id": 3421,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Card_$4017_to_t_uint8_fromStack": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Phase_$4020_to_t_uint8_fromStack": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_PlayerDecision_$4024_to_t_uint8_fromStack": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 5632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Card_$4017__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Phase_$4020__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_PlayerDecision_$4024__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Card_$4017": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Phase_$4020": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_PlayerDecision_$4024": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Card_$4017_to_t_uint8": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Phase_$4020_to_t_uint8": {
									"entryPoint": 5981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_PlayerDecision_$4024_to_t_uint8": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 7884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32": {
									"entryPoint": 6348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2": {
									"entryPoint": 6898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586": {
									"entryPoint": 7248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc": {
									"entryPoint": 7144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3": {
									"entryPoint": 6594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Card_$4017": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Phase_$4020": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_PlayerDecision_$4024": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18423:4",
										"nodeType": "YulBlock",
										"src": "0:18423:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:45:4",
													"nodeType": "YulBlock",
													"src": "51:45:4",
													"statements": [
														{
															"nativeSrc": "61:29:4",
															"nodeType": "YulAssignment",
															"src": "61:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:6:4",
																		"nodeType": "YulLiteral",
																		"src": "83:6:4",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:4"
																},
																"nativeSrc": "72:18:4",
																"nodeType": "YulFunctionCall",
																"src": "72:18:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "7:89:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:4",
														"nodeType": "YulTypedName",
														"src": "33:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:4",
														"nodeType": "YulTypedName",
														"src": "43:7:4",
														"type": ""
													}
												],
												"src": "7:89:4"
											},
											{
												"body": {
													"nativeSrc": "165:52:4",
													"nodeType": "YulBlock",
													"src": "165:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "182:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "182:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "204:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "204:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "187:16:4",
																			"nodeType": "YulIdentifier",
																			"src": "187:16:4"
																		},
																		"nativeSrc": "187:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "187:23:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "175:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "175:6:4"
																},
																"nativeSrc": "175:36:4",
																"nodeType": "YulFunctionCall",
																"src": "175:36:4"
															},
															"nativeSrc": "175:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "175:36:4"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "102:115:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "153:5:4",
														"nodeType": "YulTypedName",
														"src": "153:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "160:3:4",
														"nodeType": "YulTypedName",
														"src": "160:3:4",
														"type": ""
													}
												],
												"src": "102:115:4"
											},
											{
												"body": {
													"nativeSrc": "319:122:4",
													"nodeType": "YulBlock",
													"src": "319:122:4",
													"statements": [
														{
															"nativeSrc": "329:26:4",
															"nodeType": "YulAssignment",
															"src": "329:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "341:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:4",
																		"nodeType": "YulLiteral",
																		"src": "352:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "337:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:4"
																},
																"nativeSrc": "337:18:4",
																"nodeType": "YulFunctionCall",
																"src": "337:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "329:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "407:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "407:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "420:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "420:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "431:1:4",
																				"nodeType": "YulLiteral",
																				"src": "431:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "416:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "416:3:4"
																		},
																		"nativeSrc": "416:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "416:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "365:41:4",
																	"nodeType": "YulIdentifier",
																	"src": "365:41:4"
																},
																"nativeSrc": "365:69:4",
																"nodeType": "YulFunctionCall",
																"src": "365:69:4"
															},
															"nativeSrc": "365:69:4",
															"nodeType": "YulExpressionStatement",
															"src": "365:69:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "223:218:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "291:9:4",
														"nodeType": "YulTypedName",
														"src": "291:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "303:6:4",
														"nodeType": "YulTypedName",
														"src": "303:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "314:4:4",
														"nodeType": "YulTypedName",
														"src": "314:4:4",
														"type": ""
													}
												],
												"src": "223:218:4"
											},
											{
												"body": {
													"nativeSrc": "487:35:4",
													"nodeType": "YulBlock",
													"src": "487:35:4",
													"statements": [
														{
															"nativeSrc": "497:19:4",
															"nodeType": "YulAssignment",
															"src": "497:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:4",
																		"nodeType": "YulLiteral",
																		"src": "513:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "507:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "507:5:4"
																},
																"nativeSrc": "507:9:4",
																"nodeType": "YulFunctionCall",
																"src": "507:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "497:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "447:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "480:6:4",
														"nodeType": "YulTypedName",
														"src": "480:6:4",
														"type": ""
													}
												],
												"src": "447:75:4"
											},
											{
												"body": {
													"nativeSrc": "617:28:4",
													"nodeType": "YulBlock",
													"src": "617:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "634:1:4",
																		"nodeType": "YulLiteral",
																		"src": "634:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "637:1:4",
																		"nodeType": "YulLiteral",
																		"src": "637:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "627:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:4"
																},
																"nativeSrc": "627:12:4",
																"nodeType": "YulFunctionCall",
																"src": "627:12:4"
															},
															"nativeSrc": "627:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "627:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "528:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "528:117:4"
											},
											{
												"body": {
													"nativeSrc": "740:28:4",
													"nodeType": "YulBlock",
													"src": "740:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "757:1:4",
																		"nodeType": "YulLiteral",
																		"src": "757:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "760:1:4",
																		"nodeType": "YulLiteral",
																		"src": "760:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "750:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:4"
																},
																"nativeSrc": "750:12:4",
																"nodeType": "YulFunctionCall",
																"src": "750:12:4"
															},
															"nativeSrc": "750:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "750:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "651:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "651:117:4"
											},
											{
												"body": {
													"nativeSrc": "819:81:4",
													"nodeType": "YulBlock",
													"src": "819:81:4",
													"statements": [
														{
															"nativeSrc": "829:65:4",
															"nodeType": "YulAssignment",
															"src": "829:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "844:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "844:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "851:42:4",
																		"nodeType": "YulLiteral",
																		"src": "851:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "840:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "840:3:4"
																},
																"nativeSrc": "840:54:4",
																"nodeType": "YulFunctionCall",
																"src": "840:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "829:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "829:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "774:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "801:5:4",
														"nodeType": "YulTypedName",
														"src": "801:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "811:7:4",
														"nodeType": "YulTypedName",
														"src": "811:7:4",
														"type": ""
													}
												],
												"src": "774:126:4"
											},
											{
												"body": {
													"nativeSrc": "951:51:4",
													"nodeType": "YulBlock",
													"src": "951:51:4",
													"statements": [
														{
															"nativeSrc": "961:35:4",
															"nodeType": "YulAssignment",
															"src": "961:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "990:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "972:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:4"
																},
																"nativeSrc": "972:24:4",
																"nodeType": "YulFunctionCall",
																"src": "972:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "961:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "906:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "933:5:4",
														"nodeType": "YulTypedName",
														"src": "933:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "943:7:4",
														"nodeType": "YulTypedName",
														"src": "943:7:4",
														"type": ""
													}
												],
												"src": "906:96:4"
											},
											{
												"body": {
													"nativeSrc": "1051:79:4",
													"nodeType": "YulBlock",
													"src": "1051:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1108:16:4",
																"nodeType": "YulBlock",
																"src": "1108:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1117:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1117:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1120:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1120:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1110:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1110:6:4"
																			},
																			"nativeSrc": "1110:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:12:4"
																		},
																		"nativeSrc": "1110:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1110:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1074:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1074:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1099:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1099:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1081:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1081:17:4"
																				},
																				"nativeSrc": "1081:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1081:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1071:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1071:2:4"
																		},
																		"nativeSrc": "1071:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1071:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1064:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:4"
																},
																"nativeSrc": "1064:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1064:43:4"
															},
															"nativeSrc": "1061:63:4",
															"nodeType": "YulIf",
															"src": "1061:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1008:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1044:5:4",
														"nodeType": "YulTypedName",
														"src": "1044:5:4",
														"type": ""
													}
												],
												"src": "1008:122:4"
											},
											{
												"body": {
													"nativeSrc": "1188:87:4",
													"nodeType": "YulBlock",
													"src": "1188:87:4",
													"statements": [
														{
															"nativeSrc": "1198:29:4",
															"nodeType": "YulAssignment",
															"src": "1198:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1220:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1220:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:4"
																},
																"nativeSrc": "1207:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1207:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1263:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1263:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1236:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1236:26:4"
																},
																"nativeSrc": "1236:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1236:33:4"
															},
															"nativeSrc": "1236:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1236:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1136:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1166:6:4",
														"nodeType": "YulTypedName",
														"src": "1166:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1174:3:4",
														"nodeType": "YulTypedName",
														"src": "1174:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1182:5:4",
														"nodeType": "YulTypedName",
														"src": "1182:5:4",
														"type": ""
													}
												],
												"src": "1136:139:4"
											},
											{
												"body": {
													"nativeSrc": "1347:263:4",
													"nodeType": "YulBlock",
													"src": "1347:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1393:83:4",
																"nodeType": "YulBlock",
																"src": "1393:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1395:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1395:77:4"
																			},
																			"nativeSrc": "1395:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1395:79:4"
																		},
																		"nativeSrc": "1395:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1395:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1368:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1368:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1377:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1364:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1364:3:4"
																		},
																		"nativeSrc": "1364:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1364:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1389:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1389:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1360:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:4"
																},
																"nativeSrc": "1360:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1360:32:4"
															},
															"nativeSrc": "1357:119:4",
															"nodeType": "YulIf",
															"src": "1357:119:4"
														},
														{
															"nativeSrc": "1486:117:4",
															"nodeType": "YulBlock",
															"src": "1486:117:4",
															"statements": [
																{
																	"nativeSrc": "1501:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1501:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1515:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1515:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1505:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1505:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1530:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1530:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1565:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1565:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1576:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1576:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1561:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1561:3:4"
																				},
																				"nativeSrc": "1561:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1561:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1585:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1585:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1540:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1540:20:4"
																		},
																		"nativeSrc": "1540:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1530:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1530:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1281:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1317:9:4",
														"nodeType": "YulTypedName",
														"src": "1317:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1328:7:4",
														"nodeType": "YulTypedName",
														"src": "1328:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1340:6:4",
														"nodeType": "YulTypedName",
														"src": "1340:6:4",
														"type": ""
													}
												],
												"src": "1281:329:4"
											},
											{
												"body": {
													"nativeSrc": "1661:32:4",
													"nodeType": "YulBlock",
													"src": "1661:32:4",
													"statements": [
														{
															"nativeSrc": "1671:16:4",
															"nodeType": "YulAssignment",
															"src": "1671:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1682:5:4",
																"nodeType": "YulIdentifier",
																"src": "1682:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1671:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1616:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1643:5:4",
														"nodeType": "YulTypedName",
														"src": "1643:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1653:7:4",
														"nodeType": "YulTypedName",
														"src": "1653:7:4",
														"type": ""
													}
												],
												"src": "1616:77:4"
											},
											{
												"body": {
													"nativeSrc": "1764:53:4",
													"nodeType": "YulBlock",
													"src": "1764:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1781:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1781:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1804:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1804:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1786:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1786:17:4"
																		},
																		"nativeSrc": "1786:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1774:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:4"
																},
																"nativeSrc": "1774:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1774:37:4"
															},
															"nativeSrc": "1774:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1774:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1699:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1752:5:4",
														"nodeType": "YulTypedName",
														"src": "1752:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1759:3:4",
														"nodeType": "YulTypedName",
														"src": "1759:3:4",
														"type": ""
													}
												],
												"src": "1699:118:4"
											},
											{
												"body": {
													"nativeSrc": "1921:124:4",
													"nodeType": "YulBlock",
													"src": "1921:124:4",
													"statements": [
														{
															"nativeSrc": "1931:26:4",
															"nodeType": "YulAssignment",
															"src": "1931:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1943:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1943:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1954:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1954:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1939:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1939:3:4"
																},
																"nativeSrc": "1939:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1939:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1931:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1931:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2011:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2024:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2024:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2035:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2035:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2020:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:4"
																		},
																		"nativeSrc": "2020:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2020:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1967:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1967:43:4"
																},
																"nativeSrc": "1967:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1967:71:4"
															},
															"nativeSrc": "1967:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1967:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1823:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1893:9:4",
														"nodeType": "YulTypedName",
														"src": "1893:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1905:6:4",
														"nodeType": "YulTypedName",
														"src": "1905:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1916:4:4",
														"nodeType": "YulTypedName",
														"src": "1916:4:4",
														"type": ""
													}
												],
												"src": "1823:222:4"
											},
											{
												"body": {
													"nativeSrc": "2116:53:4",
													"nodeType": "YulBlock",
													"src": "2116:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2133:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2133:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2156:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2156:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2138:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2138:17:4"
																		},
																		"nativeSrc": "2138:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2126:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:4"
																},
																"nativeSrc": "2126:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2126:37:4"
															},
															"nativeSrc": "2126:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2126:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2051:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2104:5:4",
														"nodeType": "YulTypedName",
														"src": "2104:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2111:3:4",
														"nodeType": "YulTypedName",
														"src": "2111:3:4",
														"type": ""
													}
												],
												"src": "2051:118:4"
											},
											{
												"body": {
													"nativeSrc": "2273:124:4",
													"nodeType": "YulBlock",
													"src": "2273:124:4",
													"statements": [
														{
															"nativeSrc": "2283:26:4",
															"nodeType": "YulAssignment",
															"src": "2283:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2295:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2295:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2306:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2306:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2291:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:4"
																},
																"nativeSrc": "2291:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2291:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2283:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2283:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2363:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2363:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2376:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2376:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2387:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2372:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:4"
																		},
																		"nativeSrc": "2372:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2372:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2319:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2319:43:4"
																},
																"nativeSrc": "2319:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2319:71:4"
															},
															"nativeSrc": "2319:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2319:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2175:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2245:9:4",
														"nodeType": "YulTypedName",
														"src": "2245:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2257:6:4",
														"nodeType": "YulTypedName",
														"src": "2257:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2268:4:4",
														"nodeType": "YulTypedName",
														"src": "2268:4:4",
														"type": ""
													}
												],
												"src": "2175:222:4"
											},
											{
												"body": {
													"nativeSrc": "2431:152:4",
													"nodeType": "YulBlock",
													"src": "2431:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2448:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2448:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2451:77:4",
																		"nodeType": "YulLiteral",
																		"src": "2451:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2441:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:4"
																},
																"nativeSrc": "2441:88:4",
																"nodeType": "YulFunctionCall",
																"src": "2441:88:4"
															},
															"nativeSrc": "2441:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "2441:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2545:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2548:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2548:4:4",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2538:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:4"
																},
																"nativeSrc": "2538:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2538:15:4"
															},
															"nativeSrc": "2538:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2538:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2569:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2569:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2572:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2562:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:4"
																},
																"nativeSrc": "2562:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2562:15:4"
															},
															"nativeSrc": "2562:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2562:15:4"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2403:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2403:180:4"
											},
											{
												"body": {
													"nativeSrc": "2642:62:4",
													"nodeType": "YulBlock",
													"src": "2642:62:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2676:22:4",
																"nodeType": "YulBlock",
																"src": "2676:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "2678:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2678:16:4"
																			},
																			"nativeSrc": "2678:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2678:18:4"
																		},
																		"nativeSrc": "2678:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2678:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2665:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2665:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2672:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2672:1:4",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2662:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2662:2:4"
																		},
																		"nativeSrc": "2662:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2662:12:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:4"
																},
																"nativeSrc": "2655:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2655:20:4"
															},
															"nativeSrc": "2652:46:4",
															"nodeType": "YulIf",
															"src": "2652:46:4"
														}
													]
												},
												"name": "validator_assert_t_enum$_Phase_$4020",
												"nativeSrc": "2589:115:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2635:5:4",
														"nodeType": "YulTypedName",
														"src": "2635:5:4",
														"type": ""
													}
												],
												"src": "2589:115:4"
											},
											{
												"body": {
													"nativeSrc": "2765:76:4",
													"nodeType": "YulBlock",
													"src": "2765:76:4",
													"statements": [
														{
															"nativeSrc": "2775:16:4",
															"nodeType": "YulAssignment",
															"src": "2775:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "2786:5:4",
																"nodeType": "YulIdentifier",
																"src": "2786:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2775:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2775:7:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2829:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2829:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Phase_$4020",
																	"nativeSrc": "2792:36:4",
																	"nodeType": "YulIdentifier",
																	"src": "2792:36:4"
																},
																"nativeSrc": "2792:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2792:43:4"
															},
															"nativeSrc": "2792:43:4",
															"nodeType": "YulExpressionStatement",
															"src": "2792:43:4"
														}
													]
												},
												"name": "cleanup_t_enum$_Phase_$4020",
												"nativeSrc": "2710:131:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2747:5:4",
														"nodeType": "YulTypedName",
														"src": "2747:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2757:7:4",
														"nodeType": "YulTypedName",
														"src": "2757:7:4",
														"type": ""
													}
												],
												"src": "2710:131:4"
											},
											{
												"body": {
													"nativeSrc": "2915:63:4",
													"nodeType": "YulBlock",
													"src": "2915:63:4",
													"statements": [
														{
															"nativeSrc": "2925:47:4",
															"nodeType": "YulAssignment",
															"src": "2925:47:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2966:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2966:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Phase_$4020",
																	"nativeSrc": "2938:27:4",
																	"nodeType": "YulIdentifier",
																	"src": "2938:27:4"
																},
																"nativeSrc": "2938:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2938:34:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2925:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2925:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Phase_$4020_to_t_uint8",
												"nativeSrc": "2847:131:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2895:5:4",
														"nodeType": "YulTypedName",
														"src": "2895:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2905:9:4",
														"nodeType": "YulTypedName",
														"src": "2905:9:4",
														"type": ""
													}
												],
												"src": "2847:131:4"
											},
											{
												"body": {
													"nativeSrc": "3057:74:4",
													"nodeType": "YulBlock",
													"src": "3057:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3074:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3074:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3118:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3118:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Phase_$4020_to_t_uint8",
																			"nativeSrc": "3079:38:4",
																			"nodeType": "YulIdentifier",
																			"src": "3079:38:4"
																		},
																		"nativeSrc": "3079:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3067:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:4"
																},
																"nativeSrc": "3067:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3067:58:4"
															},
															"nativeSrc": "3067:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3067:58:4"
														}
													]
												},
												"name": "abi_encode_t_enum$_Phase_$4020_to_t_uint8_fromStack",
												"nativeSrc": "2984:147:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:4",
														"nodeType": "YulTypedName",
														"src": "3045:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3052:3:4",
														"nodeType": "YulTypedName",
														"src": "3052:3:4",
														"type": ""
													}
												],
												"src": "2984:147:4"
											},
											{
												"body": {
													"nativeSrc": "3243:132:4",
													"nodeType": "YulBlock",
													"src": "3243:132:4",
													"statements": [
														{
															"nativeSrc": "3253:26:4",
															"nodeType": "YulAssignment",
															"src": "3253:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3265:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3265:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3276:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3261:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:4"
																},
																"nativeSrc": "3261:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3261:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3253:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3253:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3341:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3341:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3354:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3365:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3365:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3350:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:4"
																		},
																		"nativeSrc": "3350:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3350:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Phase_$4020_to_t_uint8_fromStack",
																	"nativeSrc": "3289:51:4",
																	"nodeType": "YulIdentifier",
																	"src": "3289:51:4"
																},
																"nativeSrc": "3289:79:4",
																"nodeType": "YulFunctionCall",
																"src": "3289:79:4"
															},
															"nativeSrc": "3289:79:4",
															"nodeType": "YulExpressionStatement",
															"src": "3289:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Phase_$4020__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3137:238:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:4",
														"nodeType": "YulTypedName",
														"src": "3215:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3227:6:4",
														"nodeType": "YulTypedName",
														"src": "3227:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3238:4:4",
														"nodeType": "YulTypedName",
														"src": "3238:4:4",
														"type": ""
													}
												],
												"src": "3137:238:4"
											},
											{
												"body": {
													"nativeSrc": "3424:79:4",
													"nodeType": "YulBlock",
													"src": "3424:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3481:16:4",
																"nodeType": "YulBlock",
																"src": "3481:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3490:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3490:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3493:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3493:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3483:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3483:6:4"
																			},
																			"nativeSrc": "3483:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3483:12:4"
																		},
																		"nativeSrc": "3483:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3483:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3447:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3447:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3472:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3454:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3454:17:4"
																				},
																				"nativeSrc": "3454:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3454:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3444:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3444:2:4"
																		},
																		"nativeSrc": "3444:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3444:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3437:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:4"
																},
																"nativeSrc": "3437:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3437:43:4"
															},
															"nativeSrc": "3434:63:4",
															"nodeType": "YulIf",
															"src": "3434:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3381:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3417:5:4",
														"nodeType": "YulTypedName",
														"src": "3417:5:4",
														"type": ""
													}
												],
												"src": "3381:122:4"
											},
											{
												"body": {
													"nativeSrc": "3561:87:4",
													"nodeType": "YulBlock",
													"src": "3561:87:4",
													"statements": [
														{
															"nativeSrc": "3571:29:4",
															"nodeType": "YulAssignment",
															"src": "3571:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3593:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3580:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3580:12:4"
																},
																"nativeSrc": "3580:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3580:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3571:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3571:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3636:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3636:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3609:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3609:26:4"
																},
																"nativeSrc": "3609:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3609:33:4"
															},
															"nativeSrc": "3609:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3609:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3509:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3539:6:4",
														"nodeType": "YulTypedName",
														"src": "3539:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3547:3:4",
														"nodeType": "YulTypedName",
														"src": "3547:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3555:5:4",
														"nodeType": "YulTypedName",
														"src": "3555:5:4",
														"type": ""
													}
												],
												"src": "3509:139:4"
											},
											{
												"body": {
													"nativeSrc": "3737:391:4",
													"nodeType": "YulBlock",
													"src": "3737:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3783:83:4",
																"nodeType": "YulBlock",
																"src": "3783:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3785:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3785:77:4"
																			},
																			"nativeSrc": "3785:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3785:79:4"
																		},
																		"nativeSrc": "3785:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3785:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3758:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3758:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3767:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3754:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3754:3:4"
																		},
																		"nativeSrc": "3754:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3754:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3779:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3750:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3750:3:4"
																},
																"nativeSrc": "3750:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3750:32:4"
															},
															"nativeSrc": "3747:119:4",
															"nodeType": "YulIf",
															"src": "3747:119:4"
														},
														{
															"nativeSrc": "3876:117:4",
															"nodeType": "YulBlock",
															"src": "3876:117:4",
															"statements": [
																{
																	"nativeSrc": "3891:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3891:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3905:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3905:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3895:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3895:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3920:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3920:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3955:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3955:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3966:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3966:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3951:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3951:3:4"
																				},
																				"nativeSrc": "3951:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3951:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3975:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3975:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3930:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3930:20:4"
																		},
																		"nativeSrc": "3930:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3930:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3920:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3920:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4003:118:4",
															"nodeType": "YulBlock",
															"src": "4003:118:4",
															"statements": [
																{
																	"nativeSrc": "4018:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4018:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4032:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4032:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4022:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4022:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4048:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4048:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4083:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4083:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4094:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4094:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4079:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4079:3:4"
																				},
																				"nativeSrc": "4079:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4079:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4103:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4103:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4058:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4058:20:4"
																		},
																		"nativeSrc": "4058:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4058:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4048:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4048:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3654:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3699:9:4",
														"nodeType": "YulTypedName",
														"src": "3699:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3710:7:4",
														"nodeType": "YulTypedName",
														"src": "3710:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3722:6:4",
														"nodeType": "YulTypedName",
														"src": "3722:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3730:6:4",
														"nodeType": "YulTypedName",
														"src": "3730:6:4",
														"type": ""
													}
												],
												"src": "3654:474:4"
											},
											{
												"body": {
													"nativeSrc": "4186:63:4",
													"nodeType": "YulBlock",
													"src": "4186:63:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4221:22:4",
																"nodeType": "YulBlock",
																"src": "4221:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "4223:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4223:16:4"
																			},
																			"nativeSrc": "4223:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4223:18:4"
																		},
																		"nativeSrc": "4223:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4223:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4209:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4209:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4216:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4216:2:4",
																				"type": "",
																				"value": "13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4206:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4206:2:4"
																		},
																		"nativeSrc": "4206:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4206:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4199:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:4"
																},
																"nativeSrc": "4199:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4199:21:4"
															},
															"nativeSrc": "4196:47:4",
															"nodeType": "YulIf",
															"src": "4196:47:4"
														}
													]
												},
												"name": "validator_assert_t_enum$_Card_$4017",
												"nativeSrc": "4134:115:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4179:5:4",
														"nodeType": "YulTypedName",
														"src": "4179:5:4",
														"type": ""
													}
												],
												"src": "4134:115:4"
											},
											{
												"body": {
													"nativeSrc": "4309:75:4",
													"nodeType": "YulBlock",
													"src": "4309:75:4",
													"statements": [
														{
															"nativeSrc": "4319:16:4",
															"nodeType": "YulAssignment",
															"src": "4319:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "4330:5:4",
																"nodeType": "YulIdentifier",
																"src": "4330:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4319:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4319:7:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4372:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4372:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Card_$4017",
																	"nativeSrc": "4336:35:4",
																	"nodeType": "YulIdentifier",
																	"src": "4336:35:4"
																},
																"nativeSrc": "4336:42:4",
																"nodeType": "YulFunctionCall",
																"src": "4336:42:4"
															},
															"nativeSrc": "4336:42:4",
															"nodeType": "YulExpressionStatement",
															"src": "4336:42:4"
														}
													]
												},
												"name": "cleanup_t_enum$_Card_$4017",
												"nativeSrc": "4255:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4291:5:4",
														"nodeType": "YulTypedName",
														"src": "4291:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4301:7:4",
														"nodeType": "YulTypedName",
														"src": "4301:7:4",
														"type": ""
													}
												],
												"src": "4255:129:4"
											},
											{
												"body": {
													"nativeSrc": "4457:62:4",
													"nodeType": "YulBlock",
													"src": "4457:62:4",
													"statements": [
														{
															"nativeSrc": "4467:46:4",
															"nodeType": "YulAssignment",
															"src": "4467:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4507:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4507:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Card_$4017",
																	"nativeSrc": "4480:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "4480:26:4"
																},
																"nativeSrc": "4480:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4480:33:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4467:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "4467:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Card_$4017_to_t_uint8",
												"nativeSrc": "4390:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4437:5:4",
														"nodeType": "YulTypedName",
														"src": "4437:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4447:9:4",
														"nodeType": "YulTypedName",
														"src": "4447:9:4",
														"type": ""
													}
												],
												"src": "4390:129:4"
											},
											{
												"body": {
													"nativeSrc": "4597:73:4",
													"nodeType": "YulBlock",
													"src": "4597:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4614:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4614:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4657:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4657:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Card_$4017_to_t_uint8",
																			"nativeSrc": "4619:37:4",
																			"nodeType": "YulIdentifier",
																			"src": "4619:37:4"
																		},
																		"nativeSrc": "4619:44:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4619:44:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4607:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:4"
																},
																"nativeSrc": "4607:57:4",
																"nodeType": "YulFunctionCall",
																"src": "4607:57:4"
															},
															"nativeSrc": "4607:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "4607:57:4"
														}
													]
												},
												"name": "abi_encode_t_enum$_Card_$4017_to_t_uint8_fromStack",
												"nativeSrc": "4525:145:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4585:5:4",
														"nodeType": "YulTypedName",
														"src": "4585:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4592:3:4",
														"nodeType": "YulTypedName",
														"src": "4592:3:4",
														"type": ""
													}
												],
												"src": "4525:145:4"
											},
											{
												"body": {
													"nativeSrc": "4781:131:4",
													"nodeType": "YulBlock",
													"src": "4781:131:4",
													"statements": [
														{
															"nativeSrc": "4791:26:4",
															"nodeType": "YulAssignment",
															"src": "4791:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4803:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4803:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4814:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4814:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4799:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4799:3:4"
																},
																"nativeSrc": "4799:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4799:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4791:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4878:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4878:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4891:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4891:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4902:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4902:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4887:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:4"
																		},
																		"nativeSrc": "4887:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4887:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Card_$4017_to_t_uint8_fromStack",
																	"nativeSrc": "4827:50:4",
																	"nodeType": "YulIdentifier",
																	"src": "4827:50:4"
																},
																"nativeSrc": "4827:78:4",
																"nodeType": "YulFunctionCall",
																"src": "4827:78:4"
															},
															"nativeSrc": "4827:78:4",
															"nodeType": "YulExpressionStatement",
															"src": "4827:78:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Card_$4017__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4676:236:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4753:9:4",
														"nodeType": "YulTypedName",
														"src": "4753:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4765:6:4",
														"nodeType": "YulTypedName",
														"src": "4765:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4776:4:4",
														"nodeType": "YulTypedName",
														"src": "4776:4:4",
														"type": ""
													}
												],
												"src": "4676:236:4"
											},
											{
												"body": {
													"nativeSrc": "4980:62:4",
													"nodeType": "YulBlock",
													"src": "4980:62:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5014:22:4",
																"nodeType": "YulBlock",
																"src": "5014:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "5016:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5016:16:4"
																			},
																			"nativeSrc": "5016:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5016:18:4"
																		},
																		"nativeSrc": "5016:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5016:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5003:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5003:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5010:1:4",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5000:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5000:2:4"
																		},
																		"nativeSrc": "5000:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:12:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4993:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:4"
																},
																"nativeSrc": "4993:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4993:20:4"
															},
															"nativeSrc": "4990:46:4",
															"nodeType": "YulIf",
															"src": "4990:46:4"
														}
													]
												},
												"name": "validator_assert_t_enum$_PlayerDecision_$4024",
												"nativeSrc": "4918:124:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4973:5:4",
														"nodeType": "YulTypedName",
														"src": "4973:5:4",
														"type": ""
													}
												],
												"src": "4918:124:4"
											},
											{
												"body": {
													"nativeSrc": "5112:85:4",
													"nodeType": "YulBlock",
													"src": "5112:85:4",
													"statements": [
														{
															"nativeSrc": "5122:16:4",
															"nodeType": "YulAssignment",
															"src": "5122:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "5133:5:4",
																"nodeType": "YulIdentifier",
																"src": "5133:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5122:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5122:7:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5185:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5185:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_PlayerDecision_$4024",
																	"nativeSrc": "5139:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "5139:45:4"
																},
																"nativeSrc": "5139:52:4",
																"nodeType": "YulFunctionCall",
																"src": "5139:52:4"
															},
															"nativeSrc": "5139:52:4",
															"nodeType": "YulExpressionStatement",
															"src": "5139:52:4"
														}
													]
												},
												"name": "cleanup_t_enum$_PlayerDecision_$4024",
												"nativeSrc": "5048:149:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5094:5:4",
														"nodeType": "YulTypedName",
														"src": "5094:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5104:7:4",
														"nodeType": "YulTypedName",
														"src": "5104:7:4",
														"type": ""
													}
												],
												"src": "5048:149:4"
											},
											{
												"body": {
													"nativeSrc": "5280:72:4",
													"nodeType": "YulBlock",
													"src": "5280:72:4",
													"statements": [
														{
															"nativeSrc": "5290:56:4",
															"nodeType": "YulAssignment",
															"src": "5290:56:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5340:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5340:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_PlayerDecision_$4024",
																	"nativeSrc": "5303:36:4",
																	"nodeType": "YulIdentifier",
																	"src": "5303:36:4"
																},
																"nativeSrc": "5303:43:4",
																"nodeType": "YulFunctionCall",
																"src": "5303:43:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5290:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "5290:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_PlayerDecision_$4024_to_t_uint8",
												"nativeSrc": "5203:149:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5260:5:4",
														"nodeType": "YulTypedName",
														"src": "5260:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5270:9:4",
														"nodeType": "YulTypedName",
														"src": "5270:9:4",
														"type": ""
													}
												],
												"src": "5203:149:4"
											},
											{
												"body": {
													"nativeSrc": "5440:83:4",
													"nodeType": "YulBlock",
													"src": "5440:83:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5457:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5457:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5510:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5510:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_PlayerDecision_$4024_to_t_uint8",
																			"nativeSrc": "5462:47:4",
																			"nodeType": "YulIdentifier",
																			"src": "5462:47:4"
																		},
																		"nativeSrc": "5462:54:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:54:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5450:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:4"
																},
																"nativeSrc": "5450:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5450:67:4"
															},
															"nativeSrc": "5450:67:4",
															"nodeType": "YulExpressionStatement",
															"src": "5450:67:4"
														}
													]
												},
												"name": "abi_encode_t_enum$_PlayerDecision_$4024_to_t_uint8_fromStack",
												"nativeSrc": "5358:165:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5428:5:4",
														"nodeType": "YulTypedName",
														"src": "5428:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5435:3:4",
														"nodeType": "YulTypedName",
														"src": "5435:3:4",
														"type": ""
													}
												],
												"src": "5358:165:4"
											},
											{
												"body": {
													"nativeSrc": "5644:141:4",
													"nodeType": "YulBlock",
													"src": "5644:141:4",
													"statements": [
														{
															"nativeSrc": "5654:26:4",
															"nodeType": "YulAssignment",
															"src": "5654:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5666:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5666:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5677:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5677:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5662:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:4"
																},
																"nativeSrc": "5662:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5662:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5654:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5654:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5751:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5751:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5764:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5764:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5775:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5775:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5760:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5760:3:4"
																		},
																		"nativeSrc": "5760:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5760:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_PlayerDecision_$4024_to_t_uint8_fromStack",
																	"nativeSrc": "5690:60:4",
																	"nodeType": "YulIdentifier",
																	"src": "5690:60:4"
																},
																"nativeSrc": "5690:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5690:88:4"
															},
															"nativeSrc": "5690:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5690:88:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_PlayerDecision_$4024__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5529:256:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5616:9:4",
														"nodeType": "YulTypedName",
														"src": "5616:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5628:6:4",
														"nodeType": "YulTypedName",
														"src": "5628:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5639:4:4",
														"nodeType": "YulTypedName",
														"src": "5639:4:4",
														"type": ""
													}
												],
												"src": "5529:256:4"
											},
											{
												"body": {
													"nativeSrc": "5887:73:4",
													"nodeType": "YulBlock",
													"src": "5887:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5904:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5904:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5909:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5909:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5897:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5897:6:4"
																},
																"nativeSrc": "5897:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5897:19:4"
															},
															"nativeSrc": "5897:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "5897:19:4"
														},
														{
															"nativeSrc": "5925:29:4",
															"nodeType": "YulAssignment",
															"src": "5925:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5944:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5944:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5949:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5949:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5940:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:4"
																},
																"nativeSrc": "5940:14:4",
																"nodeType": "YulFunctionCall",
																"src": "5940:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5925:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "5925:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5791:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5859:3:4",
														"nodeType": "YulTypedName",
														"src": "5859:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5864:6:4",
														"nodeType": "YulTypedName",
														"src": "5864:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5875:11:4",
														"nodeType": "YulTypedName",
														"src": "5875:11:4",
														"type": ""
													}
												],
												"src": "5791:169:4"
											},
											{
												"body": {
													"nativeSrc": "6072:116:4",
													"nodeType": "YulBlock",
													"src": "6072:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6094:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6094:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6102:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6102:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6090:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6090:3:4"
																		},
																		"nativeSrc": "6090:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6090:14:4"
																	},
																	{
																		"hexValue": "506c6179657220616c72656164792073656c6563746564207374616e64206f6e",
																		"kind": "string",
																		"nativeSrc": "6106:34:4",
																		"nodeType": "YulLiteral",
																		"src": "6106:34:4",
																		"type": "",
																		"value": "Player already selected stand on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6083:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:4"
																},
																"nativeSrc": "6083:58:4",
																"nodeType": "YulFunctionCall",
																"src": "6083:58:4"
															},
															"nativeSrc": "6083:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "6083:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6162:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6162:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6170:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6170:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6158:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:4"
																		},
																		"nativeSrc": "6158:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6158:15:4"
																	},
																	{
																		"hexValue": "63652e",
																		"kind": "string",
																		"nativeSrc": "6175:5:4",
																		"nodeType": "YulLiteral",
																		"src": "6175:5:4",
																		"type": "",
																		"value": "ce."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6151:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6151:6:4"
																},
																"nativeSrc": "6151:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6151:30:4"
															},
															"nativeSrc": "6151:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6151:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32",
												"nativeSrc": "5966:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6064:6:4",
														"nodeType": "YulTypedName",
														"src": "6064:6:4",
														"type": ""
													}
												],
												"src": "5966:222:4"
											},
											{
												"body": {
													"nativeSrc": "6340:220:4",
													"nodeType": "YulBlock",
													"src": "6340:220:4",
													"statements": [
														{
															"nativeSrc": "6350:74:4",
															"nodeType": "YulAssignment",
															"src": "6350:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6416:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6416:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6421:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6421:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6357:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6357:58:4"
																},
																"nativeSrc": "6357:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6357:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6350:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6350:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6522:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6522:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32",
																	"nativeSrc": "6433:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6433:88:4"
																},
																"nativeSrc": "6433:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6433:93:4"
															},
															"nativeSrc": "6433:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6433:93:4"
														},
														{
															"nativeSrc": "6535:19:4",
															"nodeType": "YulAssignment",
															"src": "6535:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6546:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6546:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6551:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6551:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6542:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6542:3:4"
																},
																"nativeSrc": "6542:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6542:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6535:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6535:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6194:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6328:3:4",
														"nodeType": "YulTypedName",
														"src": "6328:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6336:3:4",
														"nodeType": "YulTypedName",
														"src": "6336:3:4",
														"type": ""
													}
												],
												"src": "6194:366:4"
											},
											{
												"body": {
													"nativeSrc": "6737:248:4",
													"nodeType": "YulBlock",
													"src": "6737:248:4",
													"statements": [
														{
															"nativeSrc": "6747:26:4",
															"nodeType": "YulAssignment",
															"src": "6747:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6759:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6759:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6770:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6770:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6755:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6755:3:4"
																},
																"nativeSrc": "6755:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6755:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6747:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6747:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6794:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6794:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6805:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6805:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6790:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6790:3:4"
																		},
																		"nativeSrc": "6790:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6790:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6813:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6813:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6819:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6819:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6809:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6809:3:4"
																		},
																		"nativeSrc": "6809:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6809:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6783:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6783:6:4"
																},
																"nativeSrc": "6783:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6783:47:4"
															},
															"nativeSrc": "6783:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6783:47:4"
														},
														{
															"nativeSrc": "6839:139:4",
															"nodeType": "YulAssignment",
															"src": "6839:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6973:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6973:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6847:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6847:124:4"
																},
																"nativeSrc": "6847:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6847:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6839:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6839:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6566:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6717:9:4",
														"nodeType": "YulTypedName",
														"src": "6717:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6732:4:4",
														"nodeType": "YulTypedName",
														"src": "6732:4:4",
														"type": ""
													}
												],
												"src": "6566:419:4"
											},
											{
												"body": {
													"nativeSrc": "7097:68:4",
													"nodeType": "YulBlock",
													"src": "7097:68:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7119:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7119:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7127:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7127:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7115:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7115:3:4"
																		},
																		"nativeSrc": "7115:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7115:14:4"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206465616c65722063616e206465616c",
																		"kind": "string",
																		"nativeSrc": "7131:26:4",
																		"nodeType": "YulLiteral",
																		"src": "7131:26:4",
																		"type": "",
																		"value": "Only the dealer can deal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7108:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7108:6:4"
																},
																"nativeSrc": "7108:50:4",
																"nodeType": "YulFunctionCall",
																"src": "7108:50:4"
															},
															"nativeSrc": "7108:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "7108:50:4"
														}
													]
												},
												"name": "store_literal_in_memory_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2",
												"nativeSrc": "6991:174:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7089:6:4",
														"nodeType": "YulTypedName",
														"src": "7089:6:4",
														"type": ""
													}
												],
												"src": "6991:174:4"
											},
											{
												"body": {
													"nativeSrc": "7317:220:4",
													"nodeType": "YulBlock",
													"src": "7317:220:4",
													"statements": [
														{
															"nativeSrc": "7327:74:4",
															"nodeType": "YulAssignment",
															"src": "7327:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7393:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7393:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7398:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7398:2:4",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7334:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7334:58:4"
																},
																"nativeSrc": "7334:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7334:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7327:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7327:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7499:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7499:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2",
																	"nativeSrc": "7410:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7410:88:4"
																},
																"nativeSrc": "7410:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7410:93:4"
															},
															"nativeSrc": "7410:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7410:93:4"
														},
														{
															"nativeSrc": "7512:19:4",
															"nodeType": "YulAssignment",
															"src": "7512:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7523:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7523:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7528:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7528:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7519:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:4"
																},
																"nativeSrc": "7519:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7519:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7512:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7171:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7305:3:4",
														"nodeType": "YulTypedName",
														"src": "7305:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7313:3:4",
														"nodeType": "YulTypedName",
														"src": "7313:3:4",
														"type": ""
													}
												],
												"src": "7171:366:4"
											},
											{
												"body": {
													"nativeSrc": "7714:248:4",
													"nodeType": "YulBlock",
													"src": "7714:248:4",
													"statements": [
														{
															"nativeSrc": "7724:26:4",
															"nodeType": "YulAssignment",
															"src": "7724:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7736:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7736:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7747:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7747:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7732:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7732:3:4"
																},
																"nativeSrc": "7732:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7732:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7724:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7724:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7771:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7771:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7782:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7782:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7767:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7767:3:4"
																		},
																		"nativeSrc": "7767:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7767:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7790:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7790:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7796:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7786:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7786:3:4"
																		},
																		"nativeSrc": "7786:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7786:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7760:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7760:6:4"
																},
																"nativeSrc": "7760:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7760:47:4"
															},
															"nativeSrc": "7760:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7760:47:4"
														},
														{
															"nativeSrc": "7816:139:4",
															"nodeType": "YulAssignment",
															"src": "7816:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7950:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7950:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7824:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7824:124:4"
																},
																"nativeSrc": "7824:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7824:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7816:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7816:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7543:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7694:9:4",
														"nodeType": "YulTypedName",
														"src": "7694:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7709:4:4",
														"nodeType": "YulTypedName",
														"src": "7709:4:4",
														"type": ""
													}
												],
												"src": "7543:419:4"
											},
											{
												"body": {
													"nativeSrc": "8074:75:4",
													"nodeType": "YulBlock",
													"src": "8074:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8096:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8096:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8104:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8104:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8092:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8092:3:4"
																		},
																		"nativeSrc": "8092:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8092:14:4"
																	},
																	{
																		"hexValue": "43757272656e7420726f756e64206973207374696c6c2072756e6e696e672e",
																		"kind": "string",
																		"nativeSrc": "8108:33:4",
																		"nodeType": "YulLiteral",
																		"src": "8108:33:4",
																		"type": "",
																		"value": "Current round is still running."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8085:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:4"
																},
																"nativeSrc": "8085:57:4",
																"nodeType": "YulFunctionCall",
																"src": "8085:57:4"
															},
															"nativeSrc": "8085:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "8085:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3",
												"nativeSrc": "7968:181:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8066:6:4",
														"nodeType": "YulTypedName",
														"src": "8066:6:4",
														"type": ""
													}
												],
												"src": "7968:181:4"
											},
											{
												"body": {
													"nativeSrc": "8301:220:4",
													"nodeType": "YulBlock",
													"src": "8301:220:4",
													"statements": [
														{
															"nativeSrc": "8311:74:4",
															"nodeType": "YulAssignment",
															"src": "8311:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8377:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8377:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8382:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8382:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8318:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8318:58:4"
																},
																"nativeSrc": "8318:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8318:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8311:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8483:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8483:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3",
																	"nativeSrc": "8394:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8394:88:4"
																},
																"nativeSrc": "8394:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8394:93:4"
															},
															"nativeSrc": "8394:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8394:93:4"
														},
														{
															"nativeSrc": "8496:19:4",
															"nodeType": "YulAssignment",
															"src": "8496:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8507:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8507:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8512:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8512:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8503:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8503:3:4"
																},
																"nativeSrc": "8503:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8503:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8496:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8496:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8155:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8289:3:4",
														"nodeType": "YulTypedName",
														"src": "8289:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8297:3:4",
														"nodeType": "YulTypedName",
														"src": "8297:3:4",
														"type": ""
													}
												],
												"src": "8155:366:4"
											},
											{
												"body": {
													"nativeSrc": "8698:248:4",
													"nodeType": "YulBlock",
													"src": "8698:248:4",
													"statements": [
														{
															"nativeSrc": "8708:26:4",
															"nodeType": "YulAssignment",
															"src": "8708:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8720:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8731:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:4"
																},
																"nativeSrc": "8716:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8716:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8708:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8755:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8755:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8766:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8766:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8751:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8751:3:4"
																		},
																		"nativeSrc": "8751:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8751:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8774:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8774:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8780:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8780:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8770:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8770:3:4"
																		},
																		"nativeSrc": "8770:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8770:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8744:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8744:6:4"
																},
																"nativeSrc": "8744:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8744:47:4"
															},
															"nativeSrc": "8744:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8744:47:4"
														},
														{
															"nativeSrc": "8800:139:4",
															"nodeType": "YulAssignment",
															"src": "8800:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8934:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8934:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8808:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8808:124:4"
																},
																"nativeSrc": "8808:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8808:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8800:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8800:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8527:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8678:9:4",
														"nodeType": "YulTypedName",
														"src": "8678:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8693:4:4",
														"nodeType": "YulTypedName",
														"src": "8693:4:4",
														"type": ""
													}
												],
												"src": "8527:419:4"
											},
											{
												"body": {
													"nativeSrc": "9058:70:4",
													"nodeType": "YulBlock",
													"src": "9058:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9080:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9080:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9088:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9088:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9076:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9076:3:4"
																		},
																		"nativeSrc": "9076:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9076:14:4"
																	},
																	{
																		"hexValue": "47616d65206e6f7420696e20636f72726563742073746174652e",
																		"kind": "string",
																		"nativeSrc": "9092:28:4",
																		"nodeType": "YulLiteral",
																		"src": "9092:28:4",
																		"type": "",
																		"value": "Game not in correct state."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9069:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:4"
																},
																"nativeSrc": "9069:52:4",
																"nodeType": "YulFunctionCall",
																"src": "9069:52:4"
															},
															"nativeSrc": "9069:52:4",
															"nodeType": "YulExpressionStatement",
															"src": "9069:52:4"
														}
													]
												},
												"name": "store_literal_in_memory_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4",
												"nativeSrc": "8952:176:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9050:6:4",
														"nodeType": "YulTypedName",
														"src": "9050:6:4",
														"type": ""
													}
												],
												"src": "8952:176:4"
											},
											{
												"body": {
													"nativeSrc": "9280:220:4",
													"nodeType": "YulBlock",
													"src": "9280:220:4",
													"statements": [
														{
															"nativeSrc": "9290:74:4",
															"nodeType": "YulAssignment",
															"src": "9290:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9356:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9356:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9361:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9361:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9297:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "9297:58:4"
																},
																"nativeSrc": "9297:67:4",
																"nodeType": "YulFunctionCall",
																"src": "9297:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9290:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9462:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9462:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4",
																	"nativeSrc": "9373:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "9373:88:4"
																},
																"nativeSrc": "9373:93:4",
																"nodeType": "YulFunctionCall",
																"src": "9373:93:4"
															},
															"nativeSrc": "9373:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "9373:93:4"
														},
														{
															"nativeSrc": "9475:19:4",
															"nodeType": "YulAssignment",
															"src": "9475:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9486:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9486:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9491:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9491:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9482:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9482:3:4"
																},
																"nativeSrc": "9482:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9482:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9475:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9475:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9134:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9268:3:4",
														"nodeType": "YulTypedName",
														"src": "9268:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9276:3:4",
														"nodeType": "YulTypedName",
														"src": "9276:3:4",
														"type": ""
													}
												],
												"src": "9134:366:4"
											},
											{
												"body": {
													"nativeSrc": "9677:248:4",
													"nodeType": "YulBlock",
													"src": "9677:248:4",
													"statements": [
														{
															"nativeSrc": "9687:26:4",
															"nodeType": "YulAssignment",
															"src": "9687:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9699:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9699:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9710:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9710:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9695:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:4"
																},
																"nativeSrc": "9695:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9695:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9687:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9687:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9734:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9734:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9745:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9745:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9730:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:4"
																		},
																		"nativeSrc": "9730:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9730:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9753:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9753:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9759:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9759:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9749:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9749:3:4"
																		},
																		"nativeSrc": "9749:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9749:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9723:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9723:6:4"
																},
																"nativeSrc": "9723:47:4",
																"nodeType": "YulFunctionCall",
																"src": "9723:47:4"
															},
															"nativeSrc": "9723:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "9723:47:4"
														},
														{
															"nativeSrc": "9779:139:4",
															"nodeType": "YulAssignment",
															"src": "9779:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9913:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "9913:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9787:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "9787:124:4"
																},
																"nativeSrc": "9787:131:4",
																"nodeType": "YulFunctionCall",
																"src": "9787:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9779:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9779:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9506:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9657:9:4",
														"nodeType": "YulTypedName",
														"src": "9657:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9672:4:4",
														"nodeType": "YulTypedName",
														"src": "9672:4:4",
														"type": ""
													}
												],
												"src": "9506:419:4"
											},
											{
												"body": {
													"nativeSrc": "9959:152:4",
													"nodeType": "YulBlock",
													"src": "9959:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9976:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9976:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9979:77:4",
																		"nodeType": "YulLiteral",
																		"src": "9979:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9969:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9969:6:4"
																},
																"nativeSrc": "9969:88:4",
																"nodeType": "YulFunctionCall",
																"src": "9969:88:4"
															},
															"nativeSrc": "9969:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "9969:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10073:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10076:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10076:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:4"
																},
																"nativeSrc": "10066:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10066:15:4"
															},
															"nativeSrc": "10066:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10066:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10097:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10097:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10100:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10100:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10090:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:4"
																},
																"nativeSrc": "10090:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10090:15:4"
															},
															"nativeSrc": "10090:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10090:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9931:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "9931:180:4"
											},
											{
												"body": {
													"nativeSrc": "10161:147:4",
													"nodeType": "YulBlock",
													"src": "10161:147:4",
													"statements": [
														{
															"nativeSrc": "10171:25:4",
															"nodeType": "YulAssignment",
															"src": "10171:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10194:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10194:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10176:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10176:17:4"
																},
																"nativeSrc": "10176:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10176:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10171:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10171:1:4"
																}
															]
														},
														{
															"nativeSrc": "10205:25:4",
															"nodeType": "YulAssignment",
															"src": "10205:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10228:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10228:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10210:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10210:17:4"
																},
																"nativeSrc": "10210:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10210:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10205:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10205:1:4"
																}
															]
														},
														{
															"nativeSrc": "10239:16:4",
															"nodeType": "YulAssignment",
															"src": "10239:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10250:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10250:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10253:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10246:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10246:3:4"
																},
																"nativeSrc": "10246:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10246:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10239:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10239:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10279:22:4",
																"nodeType": "YulBlock",
																"src": "10279:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10281:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10281:16:4"
																			},
																			"nativeSrc": "10281:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10281:18:4"
																		},
																		"nativeSrc": "10281:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10281:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10271:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10271:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10274:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10274:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10268:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "10268:2:4"
																},
																"nativeSrc": "10268:10:4",
																"nodeType": "YulFunctionCall",
																"src": "10268:10:4"
															},
															"nativeSrc": "10265:36:4",
															"nodeType": "YulIf",
															"src": "10265:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10117:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10148:1:4",
														"nodeType": "YulTypedName",
														"src": "10148:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10151:1:4",
														"nodeType": "YulTypedName",
														"src": "10151:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10157:3:4",
														"nodeType": "YulTypedName",
														"src": "10157:3:4",
														"type": ""
													}
												],
												"src": "10117:191:4"
											},
											{
												"body": {
													"nativeSrc": "10420:114:4",
													"nodeType": "YulBlock",
													"src": "10420:114:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10442:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10442:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10450:1:4",
																				"nodeType": "YulLiteral",
																				"src": "10450:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10438:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10438:3:4"
																		},
																		"nativeSrc": "10438:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10438:14:4"
																	},
																	{
																		"hexValue": "506c6179657220616c72656164792073656c656374656420686974206f6e6365",
																		"kind": "string",
																		"nativeSrc": "10454:34:4",
																		"nodeType": "YulLiteral",
																		"src": "10454:34:4",
																		"type": "",
																		"value": "Player already selected hit once"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10431:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10431:6:4"
																},
																"nativeSrc": "10431:58:4",
																"nodeType": "YulFunctionCall",
																"src": "10431:58:4"
															},
															"nativeSrc": "10431:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "10431:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10510:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10510:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10518:2:4",
																				"nodeType": "YulLiteral",
																				"src": "10518:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10506:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "10506:3:4"
																		},
																		"nativeSrc": "10506:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10506:15:4"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "10523:3:4",
																		"nodeType": "YulLiteral",
																		"src": "10523:3:4",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10499:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10499:6:4"
																},
																"nativeSrc": "10499:28:4",
																"nodeType": "YulFunctionCall",
																"src": "10499:28:4"
															},
															"nativeSrc": "10499:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "10499:28:4"
														}
													]
												},
												"name": "store_literal_in_memory_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2",
												"nativeSrc": "10314:220:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10412:6:4",
														"nodeType": "YulTypedName",
														"src": "10412:6:4",
														"type": ""
													}
												],
												"src": "10314:220:4"
											},
											{
												"body": {
													"nativeSrc": "10686:220:4",
													"nodeType": "YulBlock",
													"src": "10686:220:4",
													"statements": [
														{
															"nativeSrc": "10696:74:4",
															"nodeType": "YulAssignment",
															"src": "10696:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10762:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10762:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10767:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10767:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10703:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "10703:58:4"
																},
																"nativeSrc": "10703:67:4",
																"nodeType": "YulFunctionCall",
																"src": "10703:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10696:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10696:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10868:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10868:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2",
																	"nativeSrc": "10779:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "10779:88:4"
																},
																"nativeSrc": "10779:93:4",
																"nodeType": "YulFunctionCall",
																"src": "10779:93:4"
															},
															"nativeSrc": "10779:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "10779:93:4"
														},
														{
															"nativeSrc": "10881:19:4",
															"nodeType": "YulAssignment",
															"src": "10881:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10892:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "10892:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10897:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10897:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10888:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:4"
																},
																"nativeSrc": "10888:12:4",
																"nodeType": "YulFunctionCall",
																"src": "10888:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10881:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10881:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10540:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10674:3:4",
														"nodeType": "YulTypedName",
														"src": "10674:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10682:3:4",
														"nodeType": "YulTypedName",
														"src": "10682:3:4",
														"type": ""
													}
												],
												"src": "10540:366:4"
											},
											{
												"body": {
													"nativeSrc": "11083:248:4",
													"nodeType": "YulBlock",
													"src": "11083:248:4",
													"statements": [
														{
															"nativeSrc": "11093:26:4",
															"nodeType": "YulAssignment",
															"src": "11093:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11105:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "11105:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11116:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11116:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11101:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11101:3:4"
																},
																"nativeSrc": "11101:18:4",
																"nodeType": "YulFunctionCall",
																"src": "11101:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11093:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11093:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11140:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11140:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11151:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11151:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11136:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:4"
																		},
																		"nativeSrc": "11136:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11136:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11159:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "11159:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11165:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "11165:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11155:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11155:3:4"
																		},
																		"nativeSrc": "11155:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11155:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11129:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:4"
																},
																"nativeSrc": "11129:47:4",
																"nodeType": "YulFunctionCall",
																"src": "11129:47:4"
															},
															"nativeSrc": "11129:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "11129:47:4"
														},
														{
															"nativeSrc": "11185:139:4",
															"nodeType": "YulAssignment",
															"src": "11185:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11319:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "11319:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11193:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "11193:124:4"
																},
																"nativeSrc": "11193:131:4",
																"nodeType": "YulFunctionCall",
																"src": "11193:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11185:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "11185:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10912:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11063:9:4",
														"nodeType": "YulTypedName",
														"src": "11063:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11078:4:4",
														"nodeType": "YulTypedName",
														"src": "11078:4:4",
														"type": ""
													}
												],
												"src": "10912:419:4"
											},
											{
												"body": {
													"nativeSrc": "11443:71:4",
													"nodeType": "YulBlock",
													"src": "11443:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11465:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "11465:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11473:1:4",
																				"nodeType": "YulLiteral",
																				"src": "11473:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11461:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11461:3:4"
																		},
																		"nativeSrc": "11461:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11461:14:4"
																	},
																	{
																		"hexValue": "4e6f742074616b696e6720616e79206e657720706c61796572732e",
																		"kind": "string",
																		"nativeSrc": "11477:29:4",
																		"nodeType": "YulLiteral",
																		"src": "11477:29:4",
																		"type": "",
																		"value": "Not taking any new players."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11454:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11454:6:4"
																},
																"nativeSrc": "11454:53:4",
																"nodeType": "YulFunctionCall",
																"src": "11454:53:4"
															},
															"nativeSrc": "11454:53:4",
															"nodeType": "YulExpressionStatement",
															"src": "11454:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a",
												"nativeSrc": "11337:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11435:6:4",
														"nodeType": "YulTypedName",
														"src": "11435:6:4",
														"type": ""
													}
												],
												"src": "11337:177:4"
											},
											{
												"body": {
													"nativeSrc": "11666:220:4",
													"nodeType": "YulBlock",
													"src": "11666:220:4",
													"statements": [
														{
															"nativeSrc": "11676:74:4",
															"nodeType": "YulAssignment",
															"src": "11676:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11742:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11742:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11747:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11747:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11683:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "11683:58:4"
																},
																"nativeSrc": "11683:67:4",
																"nodeType": "YulFunctionCall",
																"src": "11683:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11676:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11848:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11848:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a",
																	"nativeSrc": "11759:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "11759:88:4"
																},
																"nativeSrc": "11759:93:4",
																"nodeType": "YulFunctionCall",
																"src": "11759:93:4"
															},
															"nativeSrc": "11759:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "11759:93:4"
														},
														{
															"nativeSrc": "11861:19:4",
															"nodeType": "YulAssignment",
															"src": "11861:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11872:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11872:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11877:2:4",
																		"nodeType": "YulLiteral",
																		"src": "11877:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11868:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11868:3:4"
																},
																"nativeSrc": "11868:12:4",
																"nodeType": "YulFunctionCall",
																"src": "11868:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11861:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11861:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11520:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11654:3:4",
														"nodeType": "YulTypedName",
														"src": "11654:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11662:3:4",
														"nodeType": "YulTypedName",
														"src": "11662:3:4",
														"type": ""
													}
												],
												"src": "11520:366:4"
											},
											{
												"body": {
													"nativeSrc": "12063:248:4",
													"nodeType": "YulBlock",
													"src": "12063:248:4",
													"statements": [
														{
															"nativeSrc": "12073:26:4",
															"nodeType": "YulAssignment",
															"src": "12073:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12085:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "12085:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12096:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12096:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12081:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12081:3:4"
																},
																"nativeSrc": "12081:18:4",
																"nodeType": "YulFunctionCall",
																"src": "12081:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12073:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12073:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12120:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12120:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12131:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12131:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12116:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12116:3:4"
																		},
																		"nativeSrc": "12116:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12116:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12139:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "12139:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12145:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "12145:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12135:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12135:3:4"
																		},
																		"nativeSrc": "12135:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12135:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12109:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12109:6:4"
																},
																"nativeSrc": "12109:47:4",
																"nodeType": "YulFunctionCall",
																"src": "12109:47:4"
															},
															"nativeSrc": "12109:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "12109:47:4"
														},
														{
															"nativeSrc": "12165:139:4",
															"nodeType": "YulAssignment",
															"src": "12165:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12299:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "12299:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12173:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "12173:124:4"
																},
																"nativeSrc": "12173:131:4",
																"nodeType": "YulFunctionCall",
																"src": "12173:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12165:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "12165:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11892:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12043:9:4",
														"nodeType": "YulTypedName",
														"src": "12043:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12058:4:4",
														"nodeType": "YulTypedName",
														"src": "12058:4:4",
														"type": ""
													}
												],
												"src": "11892:419:4"
											},
											{
												"body": {
													"nativeSrc": "12423:66:4",
													"nodeType": "YulBlock",
													"src": "12423:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12445:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "12445:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12453:1:4",
																				"nodeType": "YulLiteral",
																				"src": "12453:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12441:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12441:3:4"
																		},
																		"nativeSrc": "12441:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12441:14:4"
																	},
																	{
																		"hexValue": "496e636f727265637420696e697469616c206265742e",
																		"kind": "string",
																		"nativeSrc": "12457:24:4",
																		"nodeType": "YulLiteral",
																		"src": "12457:24:4",
																		"type": "",
																		"value": "Incorrect initial bet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12434:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12434:6:4"
																},
																"nativeSrc": "12434:48:4",
																"nodeType": "YulFunctionCall",
																"src": "12434:48:4"
															},
															"nativeSrc": "12434:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "12434:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc",
												"nativeSrc": "12317:172:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12415:6:4",
														"nodeType": "YulTypedName",
														"src": "12415:6:4",
														"type": ""
													}
												],
												"src": "12317:172:4"
											},
											{
												"body": {
													"nativeSrc": "12641:220:4",
													"nodeType": "YulBlock",
													"src": "12641:220:4",
													"statements": [
														{
															"nativeSrc": "12651:74:4",
															"nodeType": "YulAssignment",
															"src": "12651:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12717:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12717:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12722:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12722:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12658:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "12658:58:4"
																},
																"nativeSrc": "12658:67:4",
																"nodeType": "YulFunctionCall",
																"src": "12658:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12651:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12823:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12823:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc",
																	"nativeSrc": "12734:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "12734:88:4"
																},
																"nativeSrc": "12734:93:4",
																"nodeType": "YulFunctionCall",
																"src": "12734:93:4"
															},
															"nativeSrc": "12734:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "12734:93:4"
														},
														{
															"nativeSrc": "12836:19:4",
															"nodeType": "YulAssignment",
															"src": "12836:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12847:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12847:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12852:2:4",
																		"nodeType": "YulLiteral",
																		"src": "12852:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12843:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12843:3:4"
																},
																"nativeSrc": "12843:12:4",
																"nodeType": "YulFunctionCall",
																"src": "12843:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12836:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12836:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12495:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12629:3:4",
														"nodeType": "YulTypedName",
														"src": "12629:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12637:3:4",
														"nodeType": "YulTypedName",
														"src": "12637:3:4",
														"type": ""
													}
												],
												"src": "12495:366:4"
											},
											{
												"body": {
													"nativeSrc": "13038:248:4",
													"nodeType": "YulBlock",
													"src": "13038:248:4",
													"statements": [
														{
															"nativeSrc": "13048:26:4",
															"nodeType": "YulAssignment",
															"src": "13048:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13060:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "13060:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13071:2:4",
																		"nodeType": "YulLiteral",
																		"src": "13071:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13056:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13056:3:4"
																},
																"nativeSrc": "13056:18:4",
																"nodeType": "YulFunctionCall",
																"src": "13056:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13048:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "13048:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13095:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13095:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13106:1:4",
																				"nodeType": "YulLiteral",
																				"src": "13106:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13091:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13091:3:4"
																		},
																		"nativeSrc": "13091:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13091:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13114:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "13114:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13120:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13120:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13110:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13110:3:4"
																		},
																		"nativeSrc": "13110:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13110:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13084:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:4"
																},
																"nativeSrc": "13084:47:4",
																"nodeType": "YulFunctionCall",
																"src": "13084:47:4"
															},
															"nativeSrc": "13084:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "13084:47:4"
														},
														{
															"nativeSrc": "13140:139:4",
															"nodeType": "YulAssignment",
															"src": "13140:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13274:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "13274:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13148:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "13148:124:4"
																},
																"nativeSrc": "13148:131:4",
																"nodeType": "YulFunctionCall",
																"src": "13148:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13140:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "13140:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12867:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13018:9:4",
														"nodeType": "YulTypedName",
														"src": "13018:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13033:4:4",
														"nodeType": "YulTypedName",
														"src": "13033:4:4",
														"type": ""
													}
												],
												"src": "12867:419:4"
											},
											{
												"body": {
													"nativeSrc": "13398:73:4",
													"nodeType": "YulBlock",
													"src": "13398:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13420:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "13420:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13428:1:4",
																				"nodeType": "YulLiteral",
																				"src": "13428:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13416:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13416:3:4"
																		},
																		"nativeSrc": "13416:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13416:14:4"
																	},
																	{
																		"hexValue": "506c61796572206469646e277420706c61636520616e7920626574732e",
																		"kind": "string",
																		"nativeSrc": "13432:31:4",
																		"nodeType": "YulLiteral",
																		"src": "13432:31:4",
																		"type": "",
																		"value": "Player didn't place any bets."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13409:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13409:6:4"
																},
																"nativeSrc": "13409:55:4",
																"nodeType": "YulFunctionCall",
																"src": "13409:55:4"
															},
															"nativeSrc": "13409:55:4",
															"nodeType": "YulExpressionStatement",
															"src": "13409:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586",
												"nativeSrc": "13292:179:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13390:6:4",
														"nodeType": "YulTypedName",
														"src": "13390:6:4",
														"type": ""
													}
												],
												"src": "13292:179:4"
											},
											{
												"body": {
													"nativeSrc": "13623:220:4",
													"nodeType": "YulBlock",
													"src": "13623:220:4",
													"statements": [
														{
															"nativeSrc": "13633:74:4",
															"nodeType": "YulAssignment",
															"src": "13633:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13699:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "13699:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13704:2:4",
																		"nodeType": "YulLiteral",
																		"src": "13704:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13640:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "13640:58:4"
																},
																"nativeSrc": "13640:67:4",
																"nodeType": "YulFunctionCall",
																"src": "13640:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13633:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13633:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13805:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "13805:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586",
																	"nativeSrc": "13716:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "13716:88:4"
																},
																"nativeSrc": "13716:93:4",
																"nodeType": "YulFunctionCall",
																"src": "13716:93:4"
															},
															"nativeSrc": "13716:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "13716:93:4"
														},
														{
															"nativeSrc": "13818:19:4",
															"nodeType": "YulAssignment",
															"src": "13818:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13829:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "13829:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13834:2:4",
																		"nodeType": "YulLiteral",
																		"src": "13834:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13825:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13825:3:4"
																},
																"nativeSrc": "13825:12:4",
																"nodeType": "YulFunctionCall",
																"src": "13825:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13818:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13818:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13477:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13611:3:4",
														"nodeType": "YulTypedName",
														"src": "13611:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13619:3:4",
														"nodeType": "YulTypedName",
														"src": "13619:3:4",
														"type": ""
													}
												],
												"src": "13477:366:4"
											},
											{
												"body": {
													"nativeSrc": "14020:248:4",
													"nodeType": "YulBlock",
													"src": "14020:248:4",
													"statements": [
														{
															"nativeSrc": "14030:26:4",
															"nodeType": "YulAssignment",
															"src": "14030:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14042:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "14042:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14053:2:4",
																		"nodeType": "YulLiteral",
																		"src": "14053:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14038:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14038:3:4"
																},
																"nativeSrc": "14038:18:4",
																"nodeType": "YulFunctionCall",
																"src": "14038:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14030:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "14030:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14077:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "14077:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14088:1:4",
																				"nodeType": "YulLiteral",
																				"src": "14088:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14073:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "14073:3:4"
																		},
																		"nativeSrc": "14073:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "14073:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14096:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "14096:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14102:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "14102:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14092:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "14092:3:4"
																		},
																		"nativeSrc": "14092:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "14092:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14066:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "14066:6:4"
																},
																"nativeSrc": "14066:47:4",
																"nodeType": "YulFunctionCall",
																"src": "14066:47:4"
															},
															"nativeSrc": "14066:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "14066:47:4"
														},
														{
															"nativeSrc": "14122:139:4",
															"nodeType": "YulAssignment",
															"src": "14122:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14256:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "14256:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14130:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "14130:124:4"
																},
																"nativeSrc": "14130:131:4",
																"nodeType": "YulFunctionCall",
																"src": "14130:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14122:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "14122:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13849:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14000:9:4",
														"nodeType": "YulTypedName",
														"src": "14000:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14015:4:4",
														"nodeType": "YulTypedName",
														"src": "14015:4:4",
														"type": ""
													}
												],
												"src": "13849:419:4"
											},
											{
												"body": {
													"nativeSrc": "14380:125:4",
													"nodeType": "YulBlock",
													"src": "14380:125:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14402:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "14402:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14410:1:4",
																				"nodeType": "YulLiteral",
																				"src": "14410:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14398:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "14398:3:4"
																		},
																		"nativeSrc": "14398:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "14398:14:4"
																	},
																	{
																		"hexValue": "43757272656e746c79206e6f7420616c6c6f77696e6720686974206f72207374",
																		"kind": "string",
																		"nativeSrc": "14414:34:4",
																		"nodeType": "YulLiteral",
																		"src": "14414:34:4",
																		"type": "",
																		"value": "Currently not allowing hit or st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14391:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "14391:6:4"
																},
																"nativeSrc": "14391:58:4",
																"nodeType": "YulFunctionCall",
																"src": "14391:58:4"
															},
															"nativeSrc": "14391:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "14391:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14470:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "14470:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14478:2:4",
																				"nodeType": "YulLiteral",
																				"src": "14478:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14466:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "14466:3:4"
																		},
																		"nativeSrc": "14466:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "14466:15:4"
																	},
																	{
																		"hexValue": "616e6420616374696f6e732e",
																		"kind": "string",
																		"nativeSrc": "14483:14:4",
																		"nodeType": "YulLiteral",
																		"src": "14483:14:4",
																		"type": "",
																		"value": "and actions."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14459:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "14459:6:4"
																},
																"nativeSrc": "14459:39:4",
																"nodeType": "YulFunctionCall",
																"src": "14459:39:4"
															},
															"nativeSrc": "14459:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "14459:39:4"
														}
													]
												},
												"name": "store_literal_in_memory_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241",
												"nativeSrc": "14274:231:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14372:6:4",
														"nodeType": "YulTypedName",
														"src": "14372:6:4",
														"type": ""
													}
												],
												"src": "14274:231:4"
											},
											{
												"body": {
													"nativeSrc": "14657:220:4",
													"nodeType": "YulBlock",
													"src": "14657:220:4",
													"statements": [
														{
															"nativeSrc": "14667:74:4",
															"nodeType": "YulAssignment",
															"src": "14667:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14733:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "14733:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14738:2:4",
																		"nodeType": "YulLiteral",
																		"src": "14738:2:4",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14674:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "14674:58:4"
																},
																"nativeSrc": "14674:67:4",
																"nodeType": "YulFunctionCall",
																"src": "14674:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14667:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14667:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14839:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "14839:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241",
																	"nativeSrc": "14750:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "14750:88:4"
																},
																"nativeSrc": "14750:93:4",
																"nodeType": "YulFunctionCall",
																"src": "14750:93:4"
															},
															"nativeSrc": "14750:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "14750:93:4"
														},
														{
															"nativeSrc": "14852:19:4",
															"nodeType": "YulAssignment",
															"src": "14852:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14863:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "14863:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14868:2:4",
																		"nodeType": "YulLiteral",
																		"src": "14868:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14859:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14859:3:4"
																},
																"nativeSrc": "14859:12:4",
																"nodeType": "YulFunctionCall",
																"src": "14859:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14852:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "14852:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14511:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14645:3:4",
														"nodeType": "YulTypedName",
														"src": "14645:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14653:3:4",
														"nodeType": "YulTypedName",
														"src": "14653:3:4",
														"type": ""
													}
												],
												"src": "14511:366:4"
											},
											{
												"body": {
													"nativeSrc": "15054:248:4",
													"nodeType": "YulBlock",
													"src": "15054:248:4",
													"statements": [
														{
															"nativeSrc": "15064:26:4",
															"nodeType": "YulAssignment",
															"src": "15064:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15076:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "15076:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15087:2:4",
																		"nodeType": "YulLiteral",
																		"src": "15087:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15072:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "15072:3:4"
																},
																"nativeSrc": "15072:18:4",
																"nodeType": "YulFunctionCall",
																"src": "15072:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15064:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "15064:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15111:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "15111:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15122:1:4",
																				"nodeType": "YulLiteral",
																				"src": "15122:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15107:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15107:3:4"
																		},
																		"nativeSrc": "15107:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15107:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15130:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "15130:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15136:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "15136:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15126:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15126:3:4"
																		},
																		"nativeSrc": "15126:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15126:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15100:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15100:6:4"
																},
																"nativeSrc": "15100:47:4",
																"nodeType": "YulFunctionCall",
																"src": "15100:47:4"
															},
															"nativeSrc": "15100:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "15100:47:4"
														},
														{
															"nativeSrc": "15156:139:4",
															"nodeType": "YulAssignment",
															"src": "15156:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15290:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "15290:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15164:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "15164:124:4"
																},
																"nativeSrc": "15164:131:4",
																"nodeType": "YulFunctionCall",
																"src": "15164:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15156:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "15156:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14883:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15034:9:4",
														"nodeType": "YulTypedName",
														"src": "15034:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15049:4:4",
														"nodeType": "YulTypedName",
														"src": "15049:4:4",
														"type": ""
													}
												],
												"src": "14883:419:4"
											},
											{
												"body": {
													"nativeSrc": "15414:119:4",
													"nodeType": "YulBlock",
													"src": "15414:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15436:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "15436:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15444:1:4",
																				"nodeType": "YulLiteral",
																				"src": "15444:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15432:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15432:3:4"
																		},
																		"nativeSrc": "15432:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15432:14:4"
																	},
																	{
																		"hexValue": "526f756e6420646f6573206e6f742061636365707420616e79206d6f72652063",
																		"kind": "string",
																		"nativeSrc": "15448:34:4",
																		"nodeType": "YulLiteral",
																		"src": "15448:34:4",
																		"type": "",
																		"value": "Round does not accept any more c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15425:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15425:6:4"
																},
																"nativeSrc": "15425:58:4",
																"nodeType": "YulFunctionCall",
																"src": "15425:58:4"
															},
															"nativeSrc": "15425:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "15425:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15504:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "15504:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15512:2:4",
																				"nodeType": "YulLiteral",
																				"src": "15512:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15500:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "15500:3:4"
																		},
																		"nativeSrc": "15500:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "15500:15:4"
																	},
																	{
																		"hexValue": "68616e676573",
																		"kind": "string",
																		"nativeSrc": "15517:8:4",
																		"nodeType": "YulLiteral",
																		"src": "15517:8:4",
																		"type": "",
																		"value": "hanges"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15493:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "15493:6:4"
																},
																"nativeSrc": "15493:33:4",
																"nodeType": "YulFunctionCall",
																"src": "15493:33:4"
															},
															"nativeSrc": "15493:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "15493:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f",
												"nativeSrc": "15308:225:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15406:6:4",
														"nodeType": "YulTypedName",
														"src": "15406:6:4",
														"type": ""
													}
												],
												"src": "15308:225:4"
											},
											{
												"body": {
													"nativeSrc": "15685:220:4",
													"nodeType": "YulBlock",
													"src": "15685:220:4",
													"statements": [
														{
															"nativeSrc": "15695:74:4",
															"nodeType": "YulAssignment",
															"src": "15695:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15761:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "15761:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15766:2:4",
																		"nodeType": "YulLiteral",
																		"src": "15766:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15702:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "15702:58:4"
																},
																"nativeSrc": "15702:67:4",
																"nodeType": "YulFunctionCall",
																"src": "15702:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15695:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "15695:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15867:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "15867:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f",
																	"nativeSrc": "15778:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "15778:88:4"
																},
																"nativeSrc": "15778:93:4",
																"nodeType": "YulFunctionCall",
																"src": "15778:93:4"
															},
															"nativeSrc": "15778:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "15778:93:4"
														},
														{
															"nativeSrc": "15880:19:4",
															"nodeType": "YulAssignment",
															"src": "15880:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15891:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "15891:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15896:2:4",
																		"nodeType": "YulLiteral",
																		"src": "15896:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15887:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "15887:3:4"
																},
																"nativeSrc": "15887:12:4",
																"nodeType": "YulFunctionCall",
																"src": "15887:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15880:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "15880:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15539:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15673:3:4",
														"nodeType": "YulTypedName",
														"src": "15673:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15681:3:4",
														"nodeType": "YulTypedName",
														"src": "15681:3:4",
														"type": ""
													}
												],
												"src": "15539:366:4"
											},
											{
												"body": {
													"nativeSrc": "16082:248:4",
													"nodeType": "YulBlock",
													"src": "16082:248:4",
													"statements": [
														{
															"nativeSrc": "16092:26:4",
															"nodeType": "YulAssignment",
															"src": "16092:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16104:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "16104:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16115:2:4",
																		"nodeType": "YulLiteral",
																		"src": "16115:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16100:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "16100:3:4"
																},
																"nativeSrc": "16100:18:4",
																"nodeType": "YulFunctionCall",
																"src": "16100:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16092:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "16092:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16139:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "16139:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16150:1:4",
																				"nodeType": "YulLiteral",
																				"src": "16150:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16135:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "16135:3:4"
																		},
																		"nativeSrc": "16135:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "16135:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16158:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "16158:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16164:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "16164:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16154:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "16154:3:4"
																		},
																		"nativeSrc": "16154:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "16154:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16128:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16128:6:4"
																},
																"nativeSrc": "16128:47:4",
																"nodeType": "YulFunctionCall",
																"src": "16128:47:4"
															},
															"nativeSrc": "16128:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "16128:47:4"
														},
														{
															"nativeSrc": "16184:139:4",
															"nodeType": "YulAssignment",
															"src": "16184:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16318:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "16318:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16192:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "16192:124:4"
																},
																"nativeSrc": "16192:131:4",
																"nodeType": "YulFunctionCall",
																"src": "16192:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16184:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "16184:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15911:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16062:9:4",
														"nodeType": "YulTypedName",
														"src": "16062:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16077:4:4",
														"nodeType": "YulTypedName",
														"src": "16077:4:4",
														"type": ""
													}
												],
												"src": "15911:419:4"
											},
											{
												"body": {
													"nativeSrc": "16364:152:4",
													"nodeType": "YulBlock",
													"src": "16364:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16381:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16381:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16384:77:4",
																		"nodeType": "YulLiteral",
																		"src": "16384:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16374:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16374:6:4"
																},
																"nativeSrc": "16374:88:4",
																"nodeType": "YulFunctionCall",
																"src": "16374:88:4"
															},
															"nativeSrc": "16374:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "16374:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16478:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16478:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16481:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16481:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16471:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16471:6:4"
																},
																"nativeSrc": "16471:15:4",
																"nodeType": "YulFunctionCall",
																"src": "16471:15:4"
															},
															"nativeSrc": "16471:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "16471:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16502:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16502:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16505:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16505:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16495:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16495:6:4"
																},
																"nativeSrc": "16495:15:4",
																"nodeType": "YulFunctionCall",
																"src": "16495:15:4"
															},
															"nativeSrc": "16495:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "16495:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16336:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "16336:180:4"
											},
											{
												"body": {
													"nativeSrc": "16550:152:4",
													"nodeType": "YulBlock",
													"src": "16550:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16567:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16567:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16570:77:4",
																		"nodeType": "YulLiteral",
																		"src": "16570:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16560:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16560:6:4"
																},
																"nativeSrc": "16560:88:4",
																"nodeType": "YulFunctionCall",
																"src": "16560:88:4"
															},
															"nativeSrc": "16560:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "16560:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16664:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16664:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16667:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16667:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16657:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16657:6:4"
																},
																"nativeSrc": "16657:15:4",
																"nodeType": "YulFunctionCall",
																"src": "16657:15:4"
															},
															"nativeSrc": "16657:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "16657:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16688:1:4",
																		"nodeType": "YulLiteral",
																		"src": "16688:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16691:4:4",
																		"nodeType": "YulLiteral",
																		"src": "16691:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16681:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16681:6:4"
																},
																"nativeSrc": "16681:15:4",
																"nodeType": "YulFunctionCall",
																"src": "16681:15:4"
															},
															"nativeSrc": "16681:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "16681:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16522:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "16522:180:4"
											},
											{
												"body": {
													"nativeSrc": "16742:142:4",
													"nodeType": "YulBlock",
													"src": "16742:142:4",
													"statements": [
														{
															"nativeSrc": "16752:25:4",
															"nodeType": "YulAssignment",
															"src": "16752:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16775:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "16775:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16757:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "16757:17:4"
																},
																"nativeSrc": "16757:20:4",
																"nodeType": "YulFunctionCall",
																"src": "16757:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16752:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "16752:1:4"
																}
															]
														},
														{
															"nativeSrc": "16786:25:4",
															"nodeType": "YulAssignment",
															"src": "16786:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16809:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "16809:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16791:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "16791:17:4"
																},
																"nativeSrc": "16791:20:4",
																"nodeType": "YulFunctionCall",
																"src": "16791:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16786:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "16786:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16833:22:4",
																"nodeType": "YulBlock",
																"src": "16833:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16835:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "16835:16:4"
																			},
																			"nativeSrc": "16835:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "16835:18:4"
																		},
																		"nativeSrc": "16835:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "16835:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16830:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "16830:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16823:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "16823:6:4"
																},
																"nativeSrc": "16823:9:4",
																"nodeType": "YulFunctionCall",
																"src": "16823:9:4"
															},
															"nativeSrc": "16820:35:4",
															"nodeType": "YulIf",
															"src": "16820:35:4"
														},
														{
															"nativeSrc": "16864:14:4",
															"nodeType": "YulAssignment",
															"src": "16864:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16873:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "16873:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16876:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "16876:1:4"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "16869:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "16869:3:4"
																},
																"nativeSrc": "16869:9:4",
																"nodeType": "YulFunctionCall",
																"src": "16869:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16864:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "16864:1:4"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "16708:176:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16731:1:4",
														"nodeType": "YulTypedName",
														"src": "16731:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16734:1:4",
														"nodeType": "YulTypedName",
														"src": "16734:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16740:1:4",
														"nodeType": "YulTypedName",
														"src": "16740:1:4",
														"type": ""
													}
												],
												"src": "16708:176:4"
											},
											{
												"body": {
													"nativeSrc": "16933:190:4",
													"nodeType": "YulBlock",
													"src": "16933:190:4",
													"statements": [
														{
															"nativeSrc": "16943:33:4",
															"nodeType": "YulAssignment",
															"src": "16943:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16970:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "16970:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16952:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "16952:17:4"
																},
																"nativeSrc": "16952:24:4",
																"nodeType": "YulFunctionCall",
																"src": "16952:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16943:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "16943:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17066:22:4",
																"nodeType": "YulBlock",
																"src": "17066:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17068:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "17068:16:4"
																			},
																			"nativeSrc": "17068:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "17068:18:4"
																		},
																		"nativeSrc": "17068:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "17068:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16991:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "16991:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16998:66:4",
																		"nodeType": "YulLiteral",
																		"src": "16998:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16988:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "16988:2:4"
																},
																"nativeSrc": "16988:77:4",
																"nodeType": "YulFunctionCall",
																"src": "16988:77:4"
															},
															"nativeSrc": "16985:103:4",
															"nodeType": "YulIf",
															"src": "16985:103:4"
														},
														{
															"nativeSrc": "17097:20:4",
															"nodeType": "YulAssignment",
															"src": "17097:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17108:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17108:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17115:1:4",
																		"nodeType": "YulLiteral",
																		"src": "17115:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17104:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "17104:3:4"
																},
																"nativeSrc": "17104:13:4",
																"nodeType": "YulFunctionCall",
																"src": "17104:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17097:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "17097:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16890:233:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16919:5:4",
														"nodeType": "YulTypedName",
														"src": "16919:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16929:3:4",
														"nodeType": "YulTypedName",
														"src": "16929:3:4",
														"type": ""
													}
												],
												"src": "16890:233:4"
											},
											{
												"body": {
													"nativeSrc": "17172:128:4",
													"nodeType": "YulBlock",
													"src": "17172:128:4",
													"statements": [
														{
															"nativeSrc": "17182:33:4",
															"nodeType": "YulAssignment",
															"src": "17182:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17209:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17209:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17191:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "17191:17:4"
																},
																"nativeSrc": "17191:24:4",
																"nodeType": "YulFunctionCall",
																"src": "17191:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17182:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "17182:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17243:22:4",
																"nodeType": "YulBlock",
																"src": "17243:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17245:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "17245:16:4"
																			},
																			"nativeSrc": "17245:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "17245:18:4"
																		},
																		"nativeSrc": "17245:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "17245:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17230:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17230:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17237:4:4",
																		"nodeType": "YulLiteral",
																		"src": "17237:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17227:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "17227:2:4"
																},
																"nativeSrc": "17227:15:4",
																"nodeType": "YulFunctionCall",
																"src": "17227:15:4"
															},
															"nativeSrc": "17224:41:4",
															"nodeType": "YulIf",
															"src": "17224:41:4"
														},
														{
															"nativeSrc": "17274:20:4",
															"nodeType": "YulAssignment",
															"src": "17274:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17285:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17285:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17292:1:4",
																		"nodeType": "YulLiteral",
																		"src": "17292:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17281:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "17281:3:4"
																},
																"nativeSrc": "17281:13:4",
																"nodeType": "YulFunctionCall",
																"src": "17281:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17274:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "17274:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "17129:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17158:5:4",
														"nodeType": "YulTypedName",
														"src": "17158:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17168:3:4",
														"nodeType": "YulTypedName",
														"src": "17168:3:4",
														"type": ""
													}
												],
												"src": "17129:171:4"
											},
											{
												"body": {
													"nativeSrc": "17348:52:4",
													"nodeType": "YulBlock",
													"src": "17348:52:4",
													"statements": [
														{
															"nativeSrc": "17358:35:4",
															"nodeType": "YulAssignment",
															"src": "17358:35:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17383:2:4",
																		"nodeType": "YulLiteral",
																		"src": "17383:2:4",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17387:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17387:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17379:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "17379:3:4"
																},
																"nativeSrc": "17379:14:4",
																"nodeType": "YulFunctionCall",
																"src": "17379:14:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17358:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "17358:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "17306:94:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17329:5:4",
														"nodeType": "YulTypedName",
														"src": "17329:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17339:8:4",
														"nodeType": "YulTypedName",
														"src": "17339:8:4",
														"type": ""
													}
												],
												"src": "17306:94:4"
											},
											{
												"body": {
													"nativeSrc": "17453:47:4",
													"nodeType": "YulBlock",
													"src": "17453:47:4",
													"statements": [
														{
															"nativeSrc": "17463:31:4",
															"nodeType": "YulAssignment",
															"src": "17463:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17488:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17488:5:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "17474:13:4",
																	"nodeType": "YulIdentifier",
																	"src": "17474:13:4"
																},
																"nativeSrc": "17474:20:4",
																"nodeType": "YulFunctionCall",
																"src": "17474:20:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "17463:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "17463:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "17406:94:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17435:5:4",
														"nodeType": "YulTypedName",
														"src": "17435:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "17445:7:4",
														"nodeType": "YulTypedName",
														"src": "17445:7:4",
														"type": ""
													}
												],
												"src": "17406:94:4"
											},
											{
												"body": {
													"nativeSrc": "17553:53:4",
													"nodeType": "YulBlock",
													"src": "17553:53:4",
													"statements": [
														{
															"nativeSrc": "17563:37:4",
															"nodeType": "YulAssignment",
															"src": "17563:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17594:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "17594:5:4"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "17574:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "17574:19:4"
																},
																"nativeSrc": "17574:26:4",
																"nodeType": "YulFunctionCall",
																"src": "17574:26:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "17563:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "17563:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "17506:100:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17535:5:4",
														"nodeType": "YulTypedName",
														"src": "17535:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "17545:7:4",
														"nodeType": "YulTypedName",
														"src": "17545:7:4",
														"type": ""
													}
												],
												"src": "17506:100:4"
											},
											{
												"body": {
													"nativeSrc": "17695:74:4",
													"nodeType": "YulBlock",
													"src": "17695:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17712:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "17712:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17755:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "17755:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "17737:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "17737:17:4"
																				},
																				"nativeSrc": "17737:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "17737:24:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "17717:19:4",
																			"nodeType": "YulIdentifier",
																			"src": "17717:19:4"
																		},
																		"nativeSrc": "17717:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "17717:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17705:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "17705:6:4"
																},
																"nativeSrc": "17705:58:4",
																"nodeType": "YulFunctionCall",
																"src": "17705:58:4"
															},
															"nativeSrc": "17705:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "17705:58:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "17612:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17683:5:4",
														"nodeType": "YulTypedName",
														"src": "17683:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17690:3:4",
														"nodeType": "YulTypedName",
														"src": "17690:3:4",
														"type": ""
													}
												],
												"src": "17612:157:4"
											},
											{
												"body": {
													"nativeSrc": "17822:32:4",
													"nodeType": "YulBlock",
													"src": "17822:32:4",
													"statements": [
														{
															"nativeSrc": "17832:16:4",
															"nodeType": "YulAssignment",
															"src": "17832:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "17843:5:4",
																"nodeType": "YulIdentifier",
																"src": "17843:5:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "17832:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "17832:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "17775:79:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17804:5:4",
														"nodeType": "YulTypedName",
														"src": "17804:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "17814:7:4",
														"nodeType": "YulTypedName",
														"src": "17814:7:4",
														"type": ""
													}
												],
												"src": "17775:79:4"
											},
											{
												"body": {
													"nativeSrc": "17943:74:4",
													"nodeType": "YulBlock",
													"src": "17943:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17960:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "17960:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18003:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "18003:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17985:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "17985:17:4"
																				},
																				"nativeSrc": "17985:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "17985:24:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "17965:19:4",
																			"nodeType": "YulIdentifier",
																			"src": "17965:19:4"
																		},
																		"nativeSrc": "17965:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "17965:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17953:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:4"
																},
																"nativeSrc": "17953:58:4",
																"nodeType": "YulFunctionCall",
																"src": "17953:58:4"
															},
															"nativeSrc": "17953:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "17953:58:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "17860:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17931:5:4",
														"nodeType": "YulTypedName",
														"src": "17931:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17938:3:4",
														"nodeType": "YulTypedName",
														"src": "17938:3:4",
														"type": ""
													}
												],
												"src": "17860:157:4"
											},
											{
												"body": {
													"nativeSrc": "18167:253:4",
													"nodeType": "YulBlock",
													"src": "18167:253:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18240:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "18240:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18249:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "18249:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "18178:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "18178:61:4"
																},
																"nativeSrc": "18178:75:4",
																"nodeType": "YulFunctionCall",
																"src": "18178:75:4"
															},
															"nativeSrc": "18178:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "18178:75:4"
														},
														{
															"nativeSrc": "18262:19:4",
															"nodeType": "YulAssignment",
															"src": "18262:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18273:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "18273:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18278:2:4",
																		"nodeType": "YulLiteral",
																		"src": "18278:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18269:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "18269:3:4"
																},
																"nativeSrc": "18269:12:4",
																"nodeType": "YulFunctionCall",
																"src": "18269:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18262:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "18262:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18353:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "18353:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18362:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "18362:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "18291:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "18291:61:4"
																},
																"nativeSrc": "18291:75:4",
																"nodeType": "YulFunctionCall",
																"src": "18291:75:4"
															},
															"nativeSrc": "18291:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "18291:75:4"
														},
														{
															"nativeSrc": "18375:19:4",
															"nodeType": "YulAssignment",
															"src": "18375:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18386:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "18386:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18391:2:4",
																		"nodeType": "YulLiteral",
																		"src": "18391:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18382:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "18382:3:4"
																},
																"nativeSrc": "18382:12:4",
																"nodeType": "YulFunctionCall",
																"src": "18382:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18375:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "18375:3:4"
																}
															]
														},
														{
															"nativeSrc": "18404:10:4",
															"nodeType": "YulAssignment",
															"src": "18404:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "18411:3:4",
																"nodeType": "YulIdentifier",
																"src": "18411:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18404:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "18404:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18023:397:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18138:3:4",
														"nodeType": "YulTypedName",
														"src": "18138:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18144:6:4",
														"nodeType": "YulTypedName",
														"src": "18144:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18152:6:4",
														"nodeType": "YulTypedName",
														"src": "18152:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18163:3:4",
														"nodeType": "YulTypedName",
														"src": "18163:3:4",
														"type": ""
													}
												],
												"src": "18023:397:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Phase_$4020(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Phase_$4020(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Phase_$4020(value)\n    }\n\n    function convert_t_enum$_Phase_$4020_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Phase_$4020(value)\n    }\n\n    function abi_encode_t_enum$_Phase_$4020_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Phase_$4020_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Phase_$4020__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Phase_$4020_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_assert_t_enum$_Card_$4017(value) {\n        if iszero(lt(value, 13)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Card_$4017(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Card_$4017(value)\n    }\n\n    function convert_t_enum$_Card_$4017_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Card_$4017(value)\n    }\n\n    function abi_encode_t_enum$_Card_$4017_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Card_$4017_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Card_$4017__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Card_$4017_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_assert_t_enum$_PlayerDecision_$4024(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_PlayerDecision_$4024(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PlayerDecision_$4024(value)\n    }\n\n    function convert_t_enum$_PlayerDecision_$4024_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PlayerDecision_$4024(value)\n    }\n\n    function abi_encode_t_enum$_PlayerDecision_$4024_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PlayerDecision_$4024_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_PlayerDecision_$4024__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_PlayerDecision_$4024_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player already selected stand on\")\n\n        mstore(add(memPtr, 32), \"ce.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the dealer can deal\")\n\n    }\n\n    function abi_encode_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Current round is still running.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game not in correct state.\")\n\n    }\n\n    function abi_encode_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player already selected hit once\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not taking any new players.\")\n\n    }\n\n    function abi_encode_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect initial bet.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586(memPtr) {\n\n        mstore(add(memPtr, 0), \"Player didn't place any bets.\")\n\n    }\n\n    function abi_encode_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241(memPtr) {\n\n        mstore(add(memPtr, 0), \"Currently not allowing hit or st\")\n\n        mstore(add(memPtr, 32), \"and actions.\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Round does not accept any more c\")\n\n        mstore(add(memPtr, 32), \"hanges\")\n\n    }\n\n    function abi_encode_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009b575f3560e01c8063b1c9fe6e11610063578063b1c9fe6e1461015b578063c2897b1014610185578063e69828b11461019b578063efa2e37f146101c5578063f120daf314610201578063f90f45601461023d5761009b565b80631d73c64c1461009f5780632ae3594a146100c9578063553df021146100df57806389a78f1a146100f55780639de2ee2114610131575b5f80fd5b3480156100aa575f80fd5b506100b3610247565b6040516100c0919061160f565b60405180910390f35b3480156100d4575f80fd5b506100dd610258565b005b3480156100ea575f80fd5b506100f3610356565b005b348015610100575f80fd5b5061011b60048036038101906101169190611686565b6105c4565b60405161012891906116c9565b60405180910390f35b34801561013c575f80fd5b506101456105d9565b60405161015291906116f1565b60405180910390f35b348015610166575f80fd5b5061016f6105fe565b60405161017c919061177d565b60405180910390f35b348015610190575f80fd5b50610199610610565b005b3480156101a6575f80fd5b506101af61070f565b6040516101bc919061160f565b60405180910390f35b3480156101d0575f80fd5b506101eb60048036038101906101e691906117c0565b610722565b6040516101f89190611844565b60405180910390f35b34801561020c575f80fd5b5061022760048036038101906102229190611686565b610760565b60405161023491906118a3565b60405180910390f35b61024561077d565b005b5f8054906101000a900461ffff1681565b60028081111561026b5761026a61170a565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156102c7576102c661170a565b5b03610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe9061193c565b60405180910390fd5b610311600161094c565b3373ffffffffffffffffffffffffffffffffffffffff167f7eddbf27696273b85afcfa4ac444b5cbe6a9cb035d808d8e28b25c1fa694a65960405160405180910390a2565b5f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc906119a4565b60405180910390fd5b60015442101561042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190611a0c565b60405180910390fd5b5f600181111561043d5761043c61170a565b5b60075f9054906101000a900460ff16600181111561045e5761045d61170a565b5b148061049b57506001808111156104785761047761170a565b5b60075f9054906101000a900460ff1660018111156104995761049861170a565b5b145b6104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190611a74565b60405180910390fd5b5f60018111156104ed576104ec61170a565b5b60075f9054906101000a900460ff16600181111561050e5761050d61170a565b5b036105525761051b610aeb565b610523610c72565b600160075f6101000a81548160ff021916908360018111156105485761054761170a565b5b021790555061059d565b6001808111156105655761056461170a565b5b60075f9054906101000a900460ff1660018111156105865761058561170a565b5b0361059c57610593610d29565b61059b61114f565b5b5b5f60029054906101000a900461ffff1661ffff16426105bc9190611abf565b600181905550565b6005602052805f5260405f205f915090505481565b5f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075f9054906101000a900460ff1681565b600160028111156106245761062361170a565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1660028111156106805761067f61170a565b5b036106c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b790611b62565b60405180910390fd5b6106ca600261094c565b3373ffffffffffffffffffffffffffffffffffffffff167fcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc2037560405160405180910390a2565b5f60029054906101000a900461ffff1681565b6004602052815f5260405f20818154811061073b575f80fd5b905f5260205f209060209182820401919006915091509054906101000a900460ff1681565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f60018111156107905761078f61170a565b5b60075f9054906101000a900460ff1660018111156107b1576107b061170a565b5b146107f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e890611bca565b60405180910390fd5b5f8054906101000a900461ffff1661ffff163414610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b90611c32565b60405180910390fd5b3460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600333908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360028111156109455761094461170a565b5b0217905550565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c290611c9a565b60405180910390fd5b6001808111156109de576109dd61170a565b5b60075f9054906101000a900460ff1660018111156109ff576109fe61170a565b5b14610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611d28565b60405180910390fd5b600154421115610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b90611db6565b60405180910390fd5b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690836002811115610ae357610ae261170a565b5b021790555050565b5f5b600380549050811015610c6f575f60038281548110610b0f57610b0e611dd4565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060045f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610b7e61144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610bc857610bc761170a565b5b021790555060045f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610c1261144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610c5c57610c5b61170a565b5b0217905550508080600101915050610aed565b50565b60045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610cd861144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610d2257610d2161170a565b5b0217905550565b5f5b60038054905081101561114c575f60038281548110610d4d57610d4c611dd4565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905060016002811115610dd857610dd761170a565b5b816002811115610deb57610dea61170a565b5b036110685760045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20610e3561144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c811115610e7f57610e7e61170a565b5b02179055506015610f4b60045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020018280548015610f4157602002820191905f5260205f20905f905b82829054906101000a900460ff16600c811115610f1c57610f1b61170a565b5b815260200190600101906020825f01049283019260010382029150808411610efc5790505b505050505061147c565b1115610ffe578173ffffffffffffffffffffffffffffffffffffffff167ffd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e60405160405180910390a2600260065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690836002811115610ff457610ff361170a565b5b0217905550611063565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600281111561105d5761105c61170a565b5b02179055505b61113d565b5f600281111561107b5761107a61170a565b5b81600281111561108e5761108d61170a565b5b0361113c578173ffffffffffffffffffffffffffffffffffffffff167fcbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc2037560405160405180910390a2600260065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360028111156111365761113561170a565b5b02179055505b5b50508080600101915050610d2b565b50565b5b601161123860045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561122e57602002820191905f5260205f20905f905b82829054906101000a900460ff16600c8111156112095761120861170a565b5b815260200190600101906020825f010492830192600103820291508084116111e95790505b505050505061147c565b10156112f85760045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206112a461144d565b908060018154018082558091505060019003905f5260205f2090602091828204019190069091909190916101000a81548160ff0219169083600c8111156112ee576112ed61170a565b5b0217905550611150565b60156113e060045f8060049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054806020026020016040519081016040528092919081815260200182805480156113d657602002820191905f5260205f20905f905b82829054906101000a900460ff16600c8111156113b1576113b061170a565b5b815260200190600101906020825f010492830192600103820291508084116113915790505b505050505061147c565b111561144b575f60049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ffd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e60405160405180910390a25b565b5f600d60ff1661145b611588565b6114659190611e2e565b600c8111156114775761147661170a565b5b905090565b5f805f90505f5b835181101561153d576114cf60018583815181106114a4576114a3611dd4565b5b6020026020010151600c8111156114be576114bd61170a565b5b6114c89190611abf565b600a6115b9565b836114da9190611abf565b92505f600c8111156114ef576114ee61170a565b5b84828151811061150257611501611dd4565b5b6020026020010151600c81111561151c5761151b61170a565b5b0361153057818061152c90611e5e565b9250505b8080600101915050611483565b505b5f8111801561155b57506015600a836115589190611abf565b11155b1561158257600a8261156d9190611abf565b9150808061157a90611ea5565b91505061153f565b50919050565b5f334260405160200161159c929190611f31565b604051602081830303815290604052805190602001205f1c905090565b5f6115c782841084846115cf565b905092915050565b5f6115d9846115e8565b82841802821890509392505050565b5f8115159050919050565b5f61ffff82169050919050565b611609816115f3565b82525050565b5f6020820190506116225f830184611600565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116558261162c565b9050919050565b6116658161164b565b811461166f575f80fd5b50565b5f813590506116808161165c565b92915050565b5f6020828403121561169b5761169a611628565b5b5f6116a884828501611672565b91505092915050565b5f819050919050565b6116c3816116b1565b82525050565b5f6020820190506116dc5f8301846116ba565b92915050565b6116eb8161164b565b82525050565b5f6020820190506117045f8301846116e2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600281106117485761174761170a565b5b50565b5f81905061175882611737565b919050565b5f6117678261174b565b9050919050565b6117778161175d565b82525050565b5f6020820190506117905f83018461176e565b92915050565b61179f816116b1565b81146117a9575f80fd5b50565b5f813590506117ba81611796565b92915050565b5f80604083850312156117d6576117d5611628565b5b5f6117e385828601611672565b92505060206117f4858286016117ac565b9150509250929050565b600d811061180f5761180e61170a565b5b50565b5f81905061181f826117fe565b919050565b5f61182e82611812565b9050919050565b61183e81611824565b82525050565b5f6020820190506118575f830184611835565b92915050565b6003811061186e5761186d61170a565b5b50565b5f81905061187e8261185d565b919050565b5f61188d82611871565b9050919050565b61189d81611883565b82525050565b5f6020820190506118b65f830184611894565b92915050565b5f82825260208201905092915050565b7f506c6179657220616c72656164792073656c6563746564207374616e64206f6e5f8201527f63652e0000000000000000000000000000000000000000000000000000000000602082015250565b5f6119266023836118bc565b9150611931826118cc565b604082019050919050565b5f6020820190508181035f8301526119538161191a565b9050919050565b7f4f6e6c7920746865206465616c65722063616e206465616c00000000000000005f82015250565b5f61198e6018836118bc565b91506119998261195a565b602082019050919050565b5f6020820190508181035f8301526119bb81611982565b9050919050565b7f43757272656e7420726f756e64206973207374696c6c2072756e6e696e672e005f82015250565b5f6119f6601f836118bc565b9150611a01826119c2565b602082019050919050565b5f6020820190508181035f830152611a23816119ea565b9050919050565b7f47616d65206e6f7420696e20636f72726563742073746174652e0000000000005f82015250565b5f611a5e601a836118bc565b9150611a6982611a2a565b602082019050919050565b5f6020820190508181035f830152611a8b81611a52565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ac9826116b1565b9150611ad4836116b1565b9250828201905080821115611aec57611aeb611a92565b5b92915050565b7f506c6179657220616c72656164792073656c656374656420686974206f6e63655f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611b4c6021836118bc565b9150611b5782611af2565b604082019050919050565b5f6020820190508181035f830152611b7981611b40565b9050919050565b7f4e6f742074616b696e6720616e79206e657720706c61796572732e00000000005f82015250565b5f611bb4601b836118bc565b9150611bbf82611b80565b602082019050919050565b5f6020820190508181035f830152611be181611ba8565b9050919050565b7f496e636f727265637420696e697469616c206265742e000000000000000000005f82015250565b5f611c1c6016836118bc565b9150611c2782611be8565b602082019050919050565b5f6020820190508181035f830152611c4981611c10565b9050919050565b7f506c61796572206469646e277420706c61636520616e7920626574732e0000005f82015250565b5f611c84601d836118bc565b9150611c8f82611c50565b602082019050919050565b5f6020820190508181035f830152611cb181611c78565b9050919050565b7f43757272656e746c79206e6f7420616c6c6f77696e6720686974206f722073745f8201527f616e6420616374696f6e732e0000000000000000000000000000000000000000602082015250565b5f611d12602c836118bc565b9150611d1d82611cb8565b604082019050919050565b5f6020820190508181035f830152611d3f81611d06565b9050919050565b7f526f756e6420646f6573206e6f742061636365707420616e79206d6f726520635f8201527f68616e6765730000000000000000000000000000000000000000000000000000602082015250565b5f611da06026836118bc565b9150611dab82611d46565b604082019050919050565b5f6020820190508181035f830152611dcd81611d94565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611e38826116b1565b9150611e43836116b1565b925082611e5357611e52611e01565b5b828206905092915050565b5f611e68826116b1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e9a57611e99611a92565b5b600182019050919050565b5f611eaf826116b1565b91505f8203611ec157611ec0611a92565b5b600182039050919050565b5f8160601b9050919050565b5f611ee282611ecc565b9050919050565b5f611ef382611ed8565b9050919050565b611f0b611f068261164b565b611ee9565b82525050565b5f819050919050565b611f2b611f26826116b1565b611f11565b82525050565b5f611f3c8285611efa565b601482019150611f4c8284611f1a565b602082019150819050939250505056fea264697066735822122075935687ac2e56aa33418c1ae2aee89ca31fbd624f91fb97aee9a9f9f2d1aec864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1C9FE6E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB1C9FE6E EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xC2897B10 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xE69828B1 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xEFA2E37F EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xF120DAF3 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xF90F4560 EQ PUSH2 0x23D JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH4 0x1D73C64C EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x2AE3594A EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x553DF021 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x89A78F1A EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x9DE2EE21 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH2 0x247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x258 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x356 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x199 PUSH2 0x610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x77D JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26A PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x2C6 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x307 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FE SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x311 PUSH1 0x1 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7EDDBF27696273B85AFCFA4AC444B5CBE6A9CB035D808D8E28B25C1FA694A659 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DC SWAP1 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP LT ISZERO PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x421 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x45E JUMPI PUSH2 0x45D PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x49B JUMPI POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x478 JUMPI PUSH2 0x477 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH2 0x498 PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4EC PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x552 JUMPI PUSH2 0x51B PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x523 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x548 JUMPI PUSH2 0x547 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x59C JUMPI PUSH2 0x593 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x59B PUSH2 0x114F JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND TIMESTAMP PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x624 JUMPI PUSH2 0x623 PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B7 SWAP1 PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CA PUSH1 0x2 PUSH2 0x94C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x73B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x790 JUMPI PUSH2 0x78F PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B0 PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND CALLVALUE EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x945 JUMPI PUSH2 0x944 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FE PUSH2 0x170A JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD TIMESTAMP GT ISZERO PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xAE3 JUMPI PUSH2 0xAE2 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x4 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xB7E PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x4 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xC12 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xC5C JUMPI PUSH2 0xC5B PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xAED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xCD8 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD21 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x114C JUMPI PUSH0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD4D JUMPI PUSH2 0xD4C PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDD7 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1068 JUMPI PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0xE35 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0xE7F JUMPI PUSH2 0xE7E PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x15 PUSH2 0xF4B PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1B PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0xEFC JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST GT ISZERO PUSH2 0xFFE JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFF4 JUMPI PUSH2 0xFF3 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1063 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107B JUMPI PUSH2 0x107A PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x108E JUMPI PUSH2 0x108D PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x113C JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x2 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1136 JUMPI PUSH2 0x1135 PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD2B JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH2 0x1238 PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x122E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1209 JUMPI PUSH2 0x1208 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x11E9 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST LT ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH2 0x12A4 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x12EE JUMPI PUSH2 0x12ED PUSH2 0x170A JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x1150 JUMP JUMPDEST PUSH1 0x15 PUSH2 0x13E0 PUSH1 0x4 PUSH0 DUP1 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13D6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xC DUP2 GT ISZERO PUSH2 0x13B1 JUMPI PUSH2 0x13B0 PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 DUP3 PUSH0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x1391 JUMPI SWAP1 POP JUMPDEST POP POP POP POP POP PUSH2 0x147C JUMP JUMPDEST GT ISZERO PUSH2 0x144B JUMPI PUSH0 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH1 0xFF AND PUSH2 0x145B PUSH2 0x1588 JUMP JUMPDEST PUSH2 0x1465 SWAP2 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0xC DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x170A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x153D JUMPI PUSH2 0x14CF PUSH1 0x1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A4 JUMPI PUSH2 0x14A3 PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC DUP2 GT ISZERO PUSH2 0x14BE JUMPI PUSH2 0x14BD PUSH2 0x170A JUMP JUMPDEST JUMPDEST PUSH2 0x14C8 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0xA PUSH2 0x15B9 JUMP JUMPDEST DUP4 PUSH2 0x14DA SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP3 POP PUSH0 PUSH1 0xC DUP2 GT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x170A JUMP JUMPDEST JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1502 JUMPI PUSH2 0x1501 PUSH2 0x1DD4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC DUP2 GT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x170A JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1530 JUMPI DUP2 DUP1 PUSH2 0x152C SWAP1 PUSH2 0x1E5E JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1483 JUMP JUMPDEST POP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x155B JUMPI POP PUSH1 0x15 PUSH1 0xA DUP4 PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x1582 JUMPI PUSH1 0xA DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x157A SWAP1 PUSH2 0x1EA5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x153F JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x159C SWAP3 SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x15C7 DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15D9 DUP5 PUSH2 0x15E8 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1609 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1622 PUSH0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x162C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP2 EQ PUSH2 0x166F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1680 DUP2 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DC PUSH0 DUP4 ADD DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EB DUP2 PUSH2 0x164B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1704 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1758 DUP3 PUSH2 0x1737 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1767 DUP3 PUSH2 0x174B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1777 DUP2 PUSH2 0x175D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1790 PUSH0 DUP4 ADD DUP5 PUSH2 0x176E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x179F DUP2 PUSH2 0x16B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x17A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17BA DUP2 PUSH2 0x1796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17D6 JUMPI PUSH2 0x17D5 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1672 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17F4 DUP6 DUP3 DUP7 ADD PUSH2 0x17AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xD DUP2 LT PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x181F DUP3 PUSH2 0x17FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182E DUP3 PUSH2 0x1812 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183E DUP2 PUSH2 0x1824 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1857 PUSH0 DUP4 ADD DUP5 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x186E JUMPI PUSH2 0x186D PUSH2 0x170A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x187E DUP3 PUSH2 0x185D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x188D DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x189D DUP2 PUSH2 0x1883 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1894 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C6179657220616C72656164792073656C6563746564207374616E64206F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x63652E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1926 PUSH1 0x23 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1931 DUP3 PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1953 DUP2 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206465616C65722063616E206465616C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198E PUSH1 0x18 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1999 DUP3 PUSH2 0x195A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19BB DUP2 PUSH2 0x1982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E7420726F756E64206973207374696C6C2072756E6E696E672E00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F6 PUSH1 0x1F DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A01 DUP3 PUSH2 0x19C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A23 DUP2 PUSH2 0x19EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206E6F7420696E20636F72726563742073746174652E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5E PUSH1 0x1A DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A69 DUP3 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8B DUP2 PUSH2 0x1A52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AC9 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AEC JUMPI PUSH2 0x1AEB PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C6179657220616C72656164792073656C656374656420686974206F6E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B4C PUSH1 0x21 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B57 DUP3 PUSH2 0x1AF2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 PUSH2 0x1B40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742074616B696E6720616E79206E657720706C61796572732E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB4 PUSH1 0x1B DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBF DUP3 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE1 DUP2 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420696E697469616C206265742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1C PUSH1 0x16 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C27 DUP3 PUSH2 0x1BE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C49 DUP2 PUSH2 0x1C10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C61796572206469646E277420706C61636520616E7920626574732E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C84 PUSH1 0x1D DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8F DUP3 PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB1 DUP2 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E746C79206E6F7420616C6C6F77696E6720686974206F72207374 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E6420616374696F6E732E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D12 PUSH1 0x2C DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1D DUP3 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D3F DUP2 PUSH2 0x1D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F756E6420646F6573206E6F742061636365707420616E79206D6F72652063 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E6765730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 PUSH1 0x26 DUP4 PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAB DUP3 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DCD DUP2 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E38 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E68 DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1E9A JUMPI PUSH2 0x1E99 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAF DUP3 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1EC1 JUMPI PUSH2 0x1EC0 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE2 DUP3 PUSH2 0x1ECC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EF3 DUP3 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F0B PUSH2 0x1F06 DUP3 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1EE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2B PUSH2 0x1F26 DUP3 PUSH2 0x16B1 JUMP JUMPDEST PUSH2 0x1F11 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F3C DUP3 DUP6 PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1F4C DUP3 DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x935687AC2E56AA33418C1AE2AEE89CA31FBD624F91FB SWAP8 0xAE 0xE9 0xA9 0xF9 CALLCODE 0xD1 0xAE 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "163:5833:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4177:238;;;;;;;;;;;;;:::i;:::-;;1589:696;;;;;;;;;;;;;:::i;:::-;;775:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;454:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4421:240;;;;;;;;;;;;;:::i;:::-;;416:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;730:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:57;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1262:321;;;:::i;:::-;;386:24;;;;;;;;;;;;:::o;4177:238::-;4261:20;4230:51;;;;;;;;:::i;:::-;;:15;:27;4246:10;4230:27;;;;;;;;;;;;;;;;;;;;;;;;;:51;;;;;;;;:::i;:::-;;;4209:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;4352:26;4359:18;4352:6;:26::i;:::-;4397:10;4393:15;;;;;;;;;;;;4177:238::o;1589:696::-;1644:6;;;;;;;;;;;1630:20;;:10;:20;;;1622:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1729:19;;1710:15;:38;;1689:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1846:15;1837:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;:53;;;;1874:16;1865:25;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;1837:53;1816:126;;;;;;;;;;;;:::i;:::-;;;;;;;;;1966:15;1957:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;1953:257;;1997:17;:15;:17::i;:::-;2028:18;:16;:18::i;:::-;2068:16;2060:5;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1953:257;;;2114:16;2105:25;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;2101:109;;2146:20;:18;:20::i;:::-;2180:19;:17;:19::i;:::-;2101:109;1953:257;2260:18;;;;;;;;;;;2242:36;;:15;:36;;;;:::i;:::-;2220:19;:58;;;;1589:696::o;775:39::-;;;;;;;;;;;;;;;;;:::o;454:21::-;;;;;;;;;;;;;:::o;883:18::-;;;;;;;;;;;;;:::o;4421:240::-;4507:18;4476:49;;;;;;;;:::i;:::-;;:15;:27;4492:10;4476:27;;;;;;;;;;;;;;;;;;;;;;;;;:49;;;;;;;;:::i;:::-;;;4455:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;4594:28;4601:20;4594:6;:28::i;:::-;4643:10;4637:17;;;;;;;;;;;;4421:240::o;416:32::-;;;;;;;;;;;;;:::o;730:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;820:57::-;;;;;;;;;;;;;;;;;;;;;;:::o;1262:321::-;1324:15;1315:24;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:24;;;;;;;;:::i;:::-;;;1307:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1402:10;;;;;;;;;;1389:23;;:9;:23;1381:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1468:9;1449:4;:16;1454:10;1449:16;;;;;;;;;;;;;;;:28;;;;1487:7;1500:10;1487:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552;1522:15;:27;1538:10;1522:27;;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1262:321::o;4667:437::-;4754:1;4734:4;:16;4739:10;4734:16;;;;;;;;;;;;;;;;:21;4726:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;4829:16;4820:25;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;4799:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;4965:19;;4946:15;:38;;4925:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;5089:8;5059:15;:27;5075:10;5059:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;4667:437;:::o;3570:255::-;3620:9;3615:204;3639:7;:14;;;;3635:1;:18;3615:204;;;3674:21;3698:7;3706:1;3698:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3674:34;;3722:5;:20;3728:13;3722:20;;;;;;;;;;;;;;;3748:9;:7;:9::i;:::-;3722:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3772:5;:20;3778:13;3772:20;;;;;;;;;;;;;;;3798:9;:7;:9::i;:::-;3772:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3660:159;3655:3;;;;;;;3615:204;;;;3570:255::o;3831:82::-;3877:5;:13;3883:6;;;;;;;;;;;3877:13;;;;;;;;;;;;;;;3896:9;:7;:9::i;:::-;3877:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3831:82::o;2566:998::-;2619:9;2614:944;2638:7;:14;;;;2634:1;:18;2614:944;;;2673:21;2697:7;2705:1;2697:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2673:34;;2721:23;2747:15;:30;2763:13;2747:30;;;;;;;;;;;;;;;;;;;;;;;;;2721:56;;2807:18;2795:30;;;;;;;;:::i;:::-;;:8;:30;;;;;;;;:::i;:::-;;;2791:757;;2845:5;:20;2851:13;2845:20;;;;;;;;;;;;;;;2871:9;:7;:9::i;:::-;2845:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;327:2;2903:31;2913:5;:20;2919:13;2913:20;;;;;;;;;;;;;;;2903:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:31::i;:::-;:44;2899:363;;;3050:13;3045:19;;;;;;;;;;;;3119:20;3086:15;:30;3102:13;3086:30;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2899:363;;;3219:24;3186:15;:30;3202:13;3186:30;;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2899:363;2791:757;;;3298:24;3286:36;;;;;;;;:::i;:::-;;:8;:36;;;;;;;;:::i;:::-;;;3282:266;;3448:13;3442:20;;;;;;;;;;;;3513;3480:15;:30;3496:13;3480:30;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3282:266;2791:757;2659:899;;2654:3;;;;;;;2614:944;;;;2566:998::o;3919:252::-;3966:105;378:2;3973:24;3983:5;:13;3989:6;;;;;;;;;;;3983:13;;;;;;;;;;;;;;;3973:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:24::i;:::-;:42;3966:105;;;4031:5;:13;4037:6;;;;;;;;;;;4031:13;;;;;;;;;;;;;;;4050:9;:7;:9::i;:::-;4031:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3966:105;;;327:2;4084:24;4094:5;:13;4100:6;;;;;;;;;;;4094:13;;;;;;;;;;;;;;;4084:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:24::i;:::-;:37;4080:85;;;4147:6;;;;;;;;;;;4142:12;;;;;;;;;;;;4080:85;3919:252::o;2291:115::-;2332:9;569:2;2365:33;;:17;:15;:17::i;:::-;:33;;;;:::i;:::-;2360:39;;;;;;;;:::i;:::-;;2353:46;;2291:115;:::o;5110:540::-;5195:16;5227;5246:1;5227:20;;5262:9;5257:235;5281:4;:11;5277:1;:15;5257:235;;;5325:107;232:1;5359:4;5364:1;5359:7;;;;;;;;:::i;:::-;;;;;;;;5351:16;;;;;;;;:::i;:::-;;:35;;;;:::i;:::-;281:2;5325:8;:107::i;:::-;5313:119;;;;;:::i;:::-;;;5461:8;5450:19;;;;;;;;:::i;:::-;;:4;5455:1;5450:7;;;;;;;;:::i;:::-;;;;;;;;:19;;;;;;;;:::i;:::-;;;5446:35;;5471:10;;;;;:::i;:::-;;;;5446:35;5294:3;;;;;;;5257:235;;;;5502:116;5520:1;5509:8;:12;:43;;;;;327:2;5536;5525:8;:13;;;;:::i;:::-;:27;;5509:43;5502:116;;;5580:2;5568:14;;;;;:::i;:::-;;;5597:10;;;;;:::i;:::-;;;;5502:116;;;5628:15;5110:540;;;:::o;2412:148::-;2462:7;2523:10;2535:15;2506:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2496:56;;;;;;2488:65;;2481:72;;2412:148;:::o;3371:111:1:-;3429:7;3455:20;3467:1;3463;:5;3470:1;3473;3455:7;:20::i;:::-;3448:27;;3371:111;;;;:::o;2825:294::-;2903:7;3075:26;3091:9;3075:15;:26::i;:::-;3070:1;3066;:5;3065:36;3060:1;:42;3053:49;;2825:294;;;;;:::o;34795:145:2:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;7:89:4:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:218::-;314:4;352:2;341:9;337:18;329:26;;365:69;431:1;420:9;416:17;407:6;365:69;:::i;:::-;223:218;;;;:::o;528:117::-;637:1;634;627:12;774:126;811:7;851:42;844:5;840:54;829:65;;774:126;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:122::-;1081:24;1099:5;1081:24;:::i;:::-;1074:5;1071:35;1061:63;;1120:1;1117;1110:12;1061:63;1008:122;:::o;1136:139::-;1182:5;1220:6;1207:20;1198:29;;1236:33;1263:5;1236:33;:::i;:::-;1136:139;;;;:::o;1281:329::-;1340:6;1389:2;1377:9;1368:7;1364:23;1360:32;1357:119;;;1395:79;;:::i;:::-;1357:119;1515:1;1540:53;1585:7;1576:6;1565:9;1561:22;1540:53;:::i;:::-;1530:63;;1486:117;1281:329;;;;:::o;1616:77::-;1653:7;1682:5;1671:16;;1616:77;;;:::o;1699:118::-;1786:24;1804:5;1786:24;:::i;:::-;1781:3;1774:37;1699:118;;:::o;1823:222::-;1916:4;1954:2;1943:9;1939:18;1931:26;;1967:71;2035:1;2024:9;2020:17;2011:6;1967:71;:::i;:::-;1823:222;;;;:::o;2051:118::-;2138:24;2156:5;2138:24;:::i;:::-;2133:3;2126:37;2051:118;;:::o;2175:222::-;2268:4;2306:2;2295:9;2291:18;2283:26;;2319:71;2387:1;2376:9;2372:17;2363:6;2319:71;:::i;:::-;2175:222;;;;:::o;2403:180::-;2451:77;2448:1;2441:88;2548:4;2545:1;2538:15;2572:4;2569:1;2562:15;2589:115;2672:1;2665:5;2662:12;2652:46;;2678:18;;:::i;:::-;2652:46;2589:115;:::o;2710:131::-;2757:7;2786:5;2775:16;;2792:43;2829:5;2792:43;:::i;:::-;2710:131;;;:::o;2847:::-;2905:9;2938:34;2966:5;2938:34;:::i;:::-;2925:47;;2847:131;;;:::o;2984:147::-;3079:45;3118:5;3079:45;:::i;:::-;3074:3;3067:58;2984:147;;:::o;3137:238::-;3238:4;3276:2;3265:9;3261:18;3253:26;;3289:79;3365:1;3354:9;3350:17;3341:6;3289:79;:::i;:::-;3137:238;;;;:::o;3381:122::-;3454:24;3472:5;3454:24;:::i;:::-;3447:5;3444:35;3434:63;;3493:1;3490;3483:12;3434:63;3381:122;:::o;3509:139::-;3555:5;3593:6;3580:20;3571:29;;3609:33;3636:5;3609:33;:::i;:::-;3509:139;;;;:::o;3654:474::-;3722:6;3730;3779:2;3767:9;3758:7;3754:23;3750:32;3747:119;;;3785:79;;:::i;:::-;3747:119;3905:1;3930:53;3975:7;3966:6;3955:9;3951:22;3930:53;:::i;:::-;3920:63;;3876:117;4032:2;4058:53;4103:7;4094:6;4083:9;4079:22;4058:53;:::i;:::-;4048:63;;4003:118;3654:474;;;;;:::o;4134:115::-;4216:2;4209:5;4206:13;4196:47;;4223:18;;:::i;:::-;4196:47;4134:115;:::o;4255:129::-;4301:7;4330:5;4319:16;;4336:42;4372:5;4336:42;:::i;:::-;4255:129;;;:::o;4390:::-;4447:9;4480:33;4507:5;4480:33;:::i;:::-;4467:46;;4390:129;;;:::o;4525:145::-;4619:44;4657:5;4619:44;:::i;:::-;4614:3;4607:57;4525:145;;:::o;4676:236::-;4776:4;4814:2;4803:9;4799:18;4791:26;;4827:78;4902:1;4891:9;4887:17;4878:6;4827:78;:::i;:::-;4676:236;;;;:::o;4918:124::-;5010:1;5003:5;5000:12;4990:46;;5016:18;;:::i;:::-;4990:46;4918:124;:::o;5048:149::-;5104:7;5133:5;5122:16;;5139:52;5185:5;5139:52;:::i;:::-;5048:149;;;:::o;5203:::-;5270:9;5303:43;5340:5;5303:43;:::i;:::-;5290:56;;5203:149;;;:::o;5358:165::-;5462:54;5510:5;5462:54;:::i;:::-;5457:3;5450:67;5358:165;;:::o;5529:256::-;5639:4;5677:2;5666:9;5662:18;5654:26;;5690:88;5775:1;5764:9;5760:17;5751:6;5690:88;:::i;:::-;5529:256;;;;:::o;5791:169::-;5875:11;5909:6;5904:3;5897:19;5949:4;5944:3;5940:14;5925:29;;5791:169;;;;:::o;5966:222::-;6106:34;6102:1;6094:6;6090:14;6083:58;6175:5;6170:2;6162:6;6158:15;6151:30;5966:222;:::o;6194:366::-;6336:3;6357:67;6421:2;6416:3;6357:67;:::i;:::-;6350:74;;6433:93;6522:3;6433:93;:::i;:::-;6551:2;6546:3;6542:12;6535:19;;6194:366;;;:::o;6566:419::-;6732:4;6770:2;6759:9;6755:18;6747:26;;6819:9;6813:4;6809:20;6805:1;6794:9;6790:17;6783:47;6847:131;6973:4;6847:131;:::i;:::-;6839:139;;6566:419;;;:::o;6991:174::-;7131:26;7127:1;7119:6;7115:14;7108:50;6991:174;:::o;7171:366::-;7313:3;7334:67;7398:2;7393:3;7334:67;:::i;:::-;7327:74;;7410:93;7499:3;7410:93;:::i;:::-;7528:2;7523:3;7519:12;7512:19;;7171:366;;;:::o;7543:419::-;7709:4;7747:2;7736:9;7732:18;7724:26;;7796:9;7790:4;7786:20;7782:1;7771:9;7767:17;7760:47;7824:131;7950:4;7824:131;:::i;:::-;7816:139;;7543:419;;;:::o;7968:181::-;8108:33;8104:1;8096:6;8092:14;8085:57;7968:181;:::o;8155:366::-;8297:3;8318:67;8382:2;8377:3;8318:67;:::i;:::-;8311:74;;8394:93;8483:3;8394:93;:::i;:::-;8512:2;8507:3;8503:12;8496:19;;8155:366;;;:::o;8527:419::-;8693:4;8731:2;8720:9;8716:18;8708:26;;8780:9;8774:4;8770:20;8766:1;8755:9;8751:17;8744:47;8808:131;8934:4;8808:131;:::i;:::-;8800:139;;8527:419;;;:::o;8952:176::-;9092:28;9088:1;9080:6;9076:14;9069:52;8952:176;:::o;9134:366::-;9276:3;9297:67;9361:2;9356:3;9297:67;:::i;:::-;9290:74;;9373:93;9462:3;9373:93;:::i;:::-;9491:2;9486:3;9482:12;9475:19;;9134:366;;;:::o;9506:419::-;9672:4;9710:2;9699:9;9695:18;9687:26;;9759:9;9753:4;9749:20;9745:1;9734:9;9730:17;9723:47;9787:131;9913:4;9787:131;:::i;:::-;9779:139;;9506:419;;;:::o;9931:180::-;9979:77;9976:1;9969:88;10076:4;10073:1;10066:15;10100:4;10097:1;10090:15;10117:191;10157:3;10176:20;10194:1;10176:20;:::i;:::-;10171:25;;10210:20;10228:1;10210:20;:::i;:::-;10205:25;;10253:1;10250;10246:9;10239:16;;10274:3;10271:1;10268:10;10265:36;;;10281:18;;:::i;:::-;10265:36;10117:191;;;;:::o;10314:220::-;10454:34;10450:1;10442:6;10438:14;10431:58;10523:3;10518:2;10510:6;10506:15;10499:28;10314:220;:::o;10540:366::-;10682:3;10703:67;10767:2;10762:3;10703:67;:::i;:::-;10696:74;;10779:93;10868:3;10779:93;:::i;:::-;10897:2;10892:3;10888:12;10881:19;;10540:366;;;:::o;10912:419::-;11078:4;11116:2;11105:9;11101:18;11093:26;;11165:9;11159:4;11155:20;11151:1;11140:9;11136:17;11129:47;11193:131;11319:4;11193:131;:::i;:::-;11185:139;;10912:419;;;:::o;11337:177::-;11477:29;11473:1;11465:6;11461:14;11454:53;11337:177;:::o;11520:366::-;11662:3;11683:67;11747:2;11742:3;11683:67;:::i;:::-;11676:74;;11759:93;11848:3;11759:93;:::i;:::-;11877:2;11872:3;11868:12;11861:19;;11520:366;;;:::o;11892:419::-;12058:4;12096:2;12085:9;12081:18;12073:26;;12145:9;12139:4;12135:20;12131:1;12120:9;12116:17;12109:47;12173:131;12299:4;12173:131;:::i;:::-;12165:139;;11892:419;;;:::o;12317:172::-;12457:24;12453:1;12445:6;12441:14;12434:48;12317:172;:::o;12495:366::-;12637:3;12658:67;12722:2;12717:3;12658:67;:::i;:::-;12651:74;;12734:93;12823:3;12734:93;:::i;:::-;12852:2;12847:3;12843:12;12836:19;;12495:366;;;:::o;12867:419::-;13033:4;13071:2;13060:9;13056:18;13048:26;;13120:9;13114:4;13110:20;13106:1;13095:9;13091:17;13084:47;13148:131;13274:4;13148:131;:::i;:::-;13140:139;;12867:419;;;:::o;13292:179::-;13432:31;13428:1;13420:6;13416:14;13409:55;13292:179;:::o;13477:366::-;13619:3;13640:67;13704:2;13699:3;13640:67;:::i;:::-;13633:74;;13716:93;13805:3;13716:93;:::i;:::-;13834:2;13829:3;13825:12;13818:19;;13477:366;;;:::o;13849:419::-;14015:4;14053:2;14042:9;14038:18;14030:26;;14102:9;14096:4;14092:20;14088:1;14077:9;14073:17;14066:47;14130:131;14256:4;14130:131;:::i;:::-;14122:139;;13849:419;;;:::o;14274:231::-;14414:34;14410:1;14402:6;14398:14;14391:58;14483:14;14478:2;14470:6;14466:15;14459:39;14274:231;:::o;14511:366::-;14653:3;14674:67;14738:2;14733:3;14674:67;:::i;:::-;14667:74;;14750:93;14839:3;14750:93;:::i;:::-;14868:2;14863:3;14859:12;14852:19;;14511:366;;;:::o;14883:419::-;15049:4;15087:2;15076:9;15072:18;15064:26;;15136:9;15130:4;15126:20;15122:1;15111:9;15107:17;15100:47;15164:131;15290:4;15164:131;:::i;:::-;15156:139;;14883:419;;;:::o;15308:225::-;15448:34;15444:1;15436:6;15432:14;15425:58;15517:8;15512:2;15504:6;15500:15;15493:33;15308:225;:::o;15539:366::-;15681:3;15702:67;15766:2;15761:3;15702:67;:::i;:::-;15695:74;;15778:93;15867:3;15778:93;:::i;:::-;15896:2;15891:3;15887:12;15880:19;;15539:366;;;:::o;15911:419::-;16077:4;16115:2;16104:9;16100:18;16092:26;;16164:9;16158:4;16154:20;16150:1;16139:9;16135:17;16128:47;16192:131;16318:4;16192:131;:::i;:::-;16184:139;;15911:419;;;:::o;16336:180::-;16384:77;16381:1;16374:88;16481:4;16478:1;16471:15;16505:4;16502:1;16495:15;16522:180;16570:77;16567:1;16560:88;16667:4;16664:1;16657:15;16691:4;16688:1;16681:15;16708:176;16740:1;16757:20;16775:1;16757:20;:::i;:::-;16752:25;;16791:20;16809:1;16791:20;:::i;:::-;16786:25;;16830:1;16820:35;;16835:18;;:::i;:::-;16820:35;16876:1;16873;16869:9;16864:14;;16708:176;;;;:::o;16890:233::-;16929:3;16952:24;16970:5;16952:24;:::i;:::-;16943:33;;16998:66;16991:5;16988:77;16985:103;;17068:18;;:::i;:::-;16985:103;17115:1;17108:5;17104:13;17097:20;;16890:233;;;:::o;17129:171::-;17168:3;17191:24;17209:5;17191:24;:::i;:::-;17182:33;;17237:4;17230:5;17227:15;17224:41;;17245:18;;:::i;:::-;17224:41;17292:1;17285:5;17281:13;17274:20;;17129:171;;;:::o;17306:94::-;17339:8;17387:5;17383:2;17379:14;17358:35;;17306:94;;;:::o;17406:::-;17445:7;17474:20;17488:5;17474:20;:::i;:::-;17463:31;;17406:94;;;:::o;17506:100::-;17545:7;17574:26;17594:5;17574:26;:::i;:::-;17563:37;;17506:100;;;:::o;17612:157::-;17717:45;17737:24;17755:5;17737:24;:::i;:::-;17717:45;:::i;:::-;17712:3;17705:58;17612:157;;:::o;17775:79::-;17814:7;17843:5;17832:16;;17775:79;;;:::o;17860:157::-;17965:45;17985:24;18003:5;17985:24;:::i;:::-;17965:45;:::i;:::-;17960:3;17953:58;17860:157;;:::o;18023:397::-;18163:3;18178:75;18249:3;18240:6;18178:75;:::i;:::-;18278:2;18273:3;18269:12;18262:19;;18291:75;18362:3;18353:6;18291:75;:::i;:::-;18391:2;18386:3;18382:12;18375:19;;18411:3;18404:10;;18023:397;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1616400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bets(address)": "2869",
								"deal()": "infinite",
								"dealer()": "2647",
								"hands(address,uint256)": "6971",
								"hit()": "34569",
								"initialBet()": "2464",
								"phase()": "2554",
								"placeBet()": "99745",
								"playerDecisions(address)": "3009",
								"roundSessionExpiry()": "2560",
								"stand()": "34568"
							},
							"internal": {
								"dealCardToDealer()": "infinite",
								"dealCardsToPlayers()": "infinite",
								"dealInitialHand()": "infinite",
								"decide(enum BlockJack.PlayerDecision)": "infinite",
								"finalDealerReveal()": "infinite",
								"getCard()": "infinite",
								"getRandomNumber()": "infinite",
								"sumOfHand(enum BlockJack.Card[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 1256,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1088,
									"end": 1098,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1079,
									"end": 1085,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1079,
									"end": 1098,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1132,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1108,
									"end": 1118,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "PUSH",
									"source": 3,
									"value": "FFFF"
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "PUSH",
									"source": 3,
									"value": "FFFF"
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1108,
									"end": 1132,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1163,
									"end": 1182,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "PUSH",
									"source": 3,
									"value": "FFFF"
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "PUSH",
									"source": 3,
									"value": "FFFF"
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1182,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1192,
									"end": 1197,
									"name": "PUSH",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1192,
									"end": 1197,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1192,
									"end": 1215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1192,
									"end": 1215,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1238,
									"end": 1249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1235,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1225,
									"end": 1249,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1249,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1249,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1249,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1256,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 423,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 370,
									"end": 377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 416,
									"name": "PUSH",
									"source": 4,
									"value": "FFFF"
								},
								{
									"begin": 403,
									"end": 408,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 399,
									"end": 417,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 388,
									"end": 417,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 388,
									"end": 417,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 423,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 429,
									"end": 549,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 429,
									"end": 549,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 501,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 518,
									"end": 523,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 501,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 501,
									"end": 524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 501,
									"end": 524,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 501,
									"end": 524,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 494,
									"end": 499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 491,
									"end": 525,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 481,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 481,
									"end": 543,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 539,
									"end": 540,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 537,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 529,
									"end": 541,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 481,
									"end": 543,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 481,
									"end": 543,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 429,
									"end": 549,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 429,
									"end": 549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 696,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 611,
									"end": 616,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 648,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 636,
									"end": 649,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 627,
									"end": 649,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 627,
									"end": 649,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 658,
									"end": 690,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 684,
									"end": 689,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 658,
									"end": 690,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 658,
									"end": 690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 658,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 658,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 555,
									"end": 696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 702,
									"end": 779,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 702,
									"end": 779,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 739,
									"end": 746,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 768,
									"end": 773,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 757,
									"end": 773,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 757,
									"end": 773,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 702,
									"end": 779,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 702,
									"end": 779,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 702,
									"end": 779,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 702,
									"end": 779,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 785,
									"end": 907,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 785,
									"end": 907,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 858,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 876,
									"end": 881,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 858,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 858,
									"end": 882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 858,
									"end": 882,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 858,
									"end": 882,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 851,
									"end": 856,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 848,
									"end": 883,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 838,
									"end": 901,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 838,
									"end": 901,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 897,
									"end": 898,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 894,
									"end": 895,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 887,
									"end": 899,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 838,
									"end": 901,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 838,
									"end": 901,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 785,
									"end": 907,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 785,
									"end": 907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 970,
									"end": 975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1001,
									"end": 1007,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 986,
									"end": 1008,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 986,
									"end": 1008,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1017,
									"end": 1050,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1017,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1017,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 913,
									"end": 1056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1154,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1162,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1170,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1215,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1201,
									"end": 1210,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1192,
									"end": 1199,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1188,
									"end": 1211,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1216,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1181,
									"end": 1300,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1181,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1181,
									"end": 1300,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1219,
									"end": 1298,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1219,
									"end": 1298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1219,
									"end": 1298,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1219,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1181,
									"end": 1300,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1181,
									"end": 1300,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1419,
									"end": 1426,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1408,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1395,
									"end": 1417,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1364,
									"end": 1427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1427,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1364,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1427,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1354,
									"end": 1427,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1310,
									"end": 1437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1476,
									"end": 1478,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1502,
									"end": 1565,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1557,
									"end": 1564,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1548,
									"end": 1554,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1537,
									"end": 1546,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1533,
									"end": 1555,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1565,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1502,
									"end": 1565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1565,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1502,
									"end": 1565,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1565,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1565,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1575,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1640,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1696,
									"end": 1703,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1687,
									"end": 1693,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1676,
									"end": 1685,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1672,
									"end": 1694,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1640,
									"end": 1704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1704,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1640,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1585,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1727,
									"end": 1907,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1727,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1775,
									"end": 1852,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1772,
									"end": 1773,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1765,
									"end": 1853,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1872,
									"end": 1876,
									"name": "PUSH",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1869,
									"end": 1870,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1862,
									"end": 1877,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 1900,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1893,
									"end": 1894,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1886,
									"end": 1901,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 5996,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075935687ac2e56aa33418c1ae2aee89ca31fbd624f91fb97aee9a9f9f2d1aec864736f6c634300081a0033",
									".code": [
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "B1C9FE6E"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "B1C9FE6E"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "C2897B10"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "E69828B1"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "EFA2E37F"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "F120DAF3"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "F90F4560"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "1D73C64C"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "2AE3594A"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "553DF021"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "89A78F1A"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "9DE2EE21"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 163,
											"end": 5996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 386,
											"end": 410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4177,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1589,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 775,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 775,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 775,
											"end": 814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 454,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 454,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 883,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 883,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4421,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 416,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 416,
											"end": 448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 730,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 730,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 730,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 820,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 820,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 820,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1262,
											"end": 1583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 386,
											"end": 410,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 386,
											"end": 410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4177,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4230,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4245,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4230,
											"end": 4257,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4230,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4281,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4209,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4209,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4359,
											"end": 4377,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4352,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4378,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4352,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4407,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "PUSH",
											"source": 3,
											"value": "7EDDBF27696273B85AFCFA4AC444B5CBE6A9CB035D808D8E28B25C1FA694A659"
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4177,
											"end": 4415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1589,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1640,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1630,
											"end": 1650,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1622,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1622,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1748,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1748,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1689,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1689,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1837,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1837,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1890,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1865,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1865,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1890,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1837,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1816,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1816,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1957,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1957,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1997,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1997,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2014,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1997,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2028,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2060,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2105,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2105,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2101,
											"end": 2210,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2146,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2146,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2146,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2180,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2180,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2210,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2101,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1953,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 2260,
											"end": 2278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2257,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2242,
											"end": 2278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2242,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2239,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2278,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2220,
											"end": 2278,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 2285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 775,
											"end": 814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 883,
											"end": 901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 883,
											"end": 901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4421,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4507,
											"end": 4525,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4476,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4491,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4502,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4476,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4476,
											"end": 4525,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4455,
											"end": 4584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4455,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4594,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4601,
											"end": 4621,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4594,
											"end": 4600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4594,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4594,
											"end": 4622,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4594,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4643,
											"end": 4653,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "CBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4654,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 416,
											"end": 448,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 416,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 730,
											"end": 769,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 820,
											"end": 877,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 820,
											"end": 877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1262,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1324,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1315,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1315,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1307,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1307,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 1402,
											"end": 1412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1412,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1381,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1381,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1453,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1464,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1465,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1477,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1500,
											"end": 1510,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1537,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1548,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1522,
											"end": 1576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1576,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1262,
											"end": 1583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 5104,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4667,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4750,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4755,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4726,
											"end": 4789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4726,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4820,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4820,
											"end": 4825,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4820,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4820,
											"end": 4845,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 4799,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4799,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4961,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4984,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4984,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4925,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4925,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5089,
											"end": 5097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5074,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5059,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 5104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4667,
											"end": 5104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3825,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3570,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3620,
											"end": 3629,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3639,
											"end": 3653,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3653,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3639,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 3653,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3705,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3698,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3748,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3748,
											"end": 3757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3722,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3798,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3798,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3798,
											"end": 3807,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3798,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3772,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3660,
											"end": 3819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3655,
											"end": 3658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3913,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3831,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3882,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3890,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3896,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3877,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2566,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2652,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2704,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2697,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2776,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2747,
											"end": 2777,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2777,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2795,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2795,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2795,
											"end": 2825,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2865,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2871,
											"end": 2880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 2871,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2845,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2845,
											"end": 2881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2932,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2933,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2903,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2903,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 2903,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2947,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3063,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "FD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E"
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3064,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3086,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3086,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3139,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3186,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3186,
											"end": 3243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2899,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3286,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3286,
											"end": 3322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3322,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3282,
											"end": 3548,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3448,
											"end": 3461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "CBE57BA0262DC3A1CBAF4B18552F05B3AE49736AF8011369B89319B35DC20375"
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3462,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3480,
											"end": 3495,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3509,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3480,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3480,
											"end": 3533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3282,
											"end": 3548,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 3282,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2791,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 3558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 3558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 3558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 4171,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3919,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3983,
											"end": 3988,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 3995,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3996,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3973,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 3973,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3973,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 4015,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4036,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4050,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 4050,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "MOD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4031,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4060,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3966,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4094,
											"end": 4099,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4107,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4084,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4084,
											"end": 4108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4084,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4121,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4080,
											"end": 4165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "PUSH",
											"source": 3,
											"value": "FD11B87F2AF9B86645A7A933E90E504D91320EAF8BD112573A23A3CA82D56C5E"
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4154,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 4080,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4080,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2406,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2291,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 571,
											"name": "PUSH",
											"source": 3,
											"value": "D"
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2365,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2365,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2382,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2365,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2365,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 2365,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2360,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2360,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2399,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2399,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5650,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 5110,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5243,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5285,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5277,
											"end": 5292,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5359,
											"end": 5363,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5359,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5359,
											"end": 5366,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5351,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5351,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5351,
											"end": 5386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 281,
											"end": 283,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 5325,
											"end": 5333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5325,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5313,
											"end": 5432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5461,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5450,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5454,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5450,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5450,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5471,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5471,
											"end": 5481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5446,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5294,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5257,
											"end": 5492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5521,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 5525,
											"end": 5533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5525,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5525,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5552,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5552,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 5509,
											"end": 5552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5568,
											"end": 5582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 5597,
											"end": 5607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5502,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5628,
											"end": 5643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2560,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2412,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2533,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2506,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2551,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2552,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2553,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2481,
											"end": 2553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3464,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3468,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3455,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3455,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3075,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3101,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3060,
											"end": 3102,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 3119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34842,
											"end": 34851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 34921,
											"end": 34922,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 34914,
											"end": 34923,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 34907,
											"end": 34924,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34795,
											"end": 34940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 4,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 102,
											"end": 217,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 102,
											"end": 217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 187,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 187,
											"end": 210,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 187,
											"end": 210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 175,
											"end": 211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 102,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 350,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 416,
											"end": 433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 365,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 365,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 223,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 528,
											"end": 645,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 528,
											"end": 645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 639,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 774,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 774,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 893,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 840,
											"end": 894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 829,
											"end": 894,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 829,
											"end": 894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 906,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 972,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 972,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 972,
											"end": 996,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 972,
											"end": 996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 961,
											"end": 996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 961,
											"end": 996,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 906,
											"end": 1002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1130,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1008,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 1099,
											"end": 1104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1081,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1106,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 1061,
											"end": 1124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1122,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1124,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 1061,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1236,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 1236,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1391,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1375,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1360,
											"end": 1392,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1476,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 1357,
											"end": 1476,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 1395,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 1395,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1474,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 1395,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1476,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 1357,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 1585,
											"end": 1592,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1576,
											"end": 1582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 1540,
											"end": 1593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1593,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 1540,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1693,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1616,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1786,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1774,
											"end": 1811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1699,
											"end": 1817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1957,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2020,
											"end": 2037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 1967,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 2038,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 1967,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2169,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2051,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 2156,
											"end": 2161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 2138,
											"end": 2162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2162,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 2138,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2136,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2163,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2308,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 2387,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2372,
											"end": 2389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2369,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 2319,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2390,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 2319,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2175,
											"end": 2397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2583,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2403,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2552,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2576,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2577,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2589,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2665,
											"end": 2670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2674,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 2652,
											"end": 2698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2678,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "367"
										},
										{
											"begin": 2678,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2698,
											"name": "tag",
											"source": 4,
											"value": "366"
										},
										{
											"begin": 2652,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2841,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2710,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 2829,
											"end": 2834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 2792,
											"end": 2835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2792,
											"end": 2835,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 2792,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2841,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2978,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 2847,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2914,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2966,
											"end": 2971,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2938,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 2972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2925,
											"end": 2972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2978,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3131,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 2984,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3079,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3079,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 3079,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3079,
											"end": 3124,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3079,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3242,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3274,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3365,
											"end": 3366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 3289,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3289,
											"end": 3368,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3289,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3472,
											"end": 3477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 3454,
											"end": 3478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3478,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3454,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3447,
											"end": 3452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3479,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 3434,
											"end": 3497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3497,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 3434,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3503,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3381,
											"end": 3503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3555,
											"end": 3560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3600,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 3636,
											"end": 3641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 3609,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3642,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 3609,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3777,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3782,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3785,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 3930,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 4058,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 4058,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4048,
											"end": 4111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 4128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4249,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 4134,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4209,
											"end": 4214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4206,
											"end": 4219,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 4196,
											"end": 4243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4223,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4243,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 4196,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4255,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 4372,
											"end": 4377,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 4336,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4336,
											"end": 4378,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 4336,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4255,
											"end": 4384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4519,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4390,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4480,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4480,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4480,
											"end": 4513,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 4480,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4670,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4525,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 4657,
											"end": 4662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4619,
											"end": 4663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4663,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 4619,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4607,
											"end": 4664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 4817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4791,
											"end": 4817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4827,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4904,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4827,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4827,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4827,
											"end": 4905,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 4827,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 5042,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4918,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5010,
											"end": 5011,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5012,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 4990,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 5016,
											"end": 5034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "tag",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 4990,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 5042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5185,
											"end": 5190,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 5139,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5191,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5139,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5352,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5203,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5340,
											"end": 5345,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 5303,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5303,
											"end": 5346,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5303,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5203,
											"end": 5352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5523,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5358,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 5510,
											"end": 5515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5462,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5516,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 5462,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 5775,
											"end": 5776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5777,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5757,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5690,
											"end": 5778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5778,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 5690,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5875,
											"end": 5886,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5904,
											"end": 5907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5897,
											"end": 5916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5949,
											"end": 5953,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5940,
											"end": 5954,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6188,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5966,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "506C6179657220616C72656164792073656C6563746564207374616E64206F6E"
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6141,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6180,
											"name": "PUSH",
											"source": 4,
											"value": "63652E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6170,
											"end": 6172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6151,
											"end": 6181,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6188,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 6188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6560,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 6194,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 6421,
											"end": 6423,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 6416,
											"end": 6419,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6357,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 6357,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6357,
											"end": 6424,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 6357,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6350,
											"end": 6424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 6522,
											"end": 6525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 6433,
											"end": 6526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6433,
											"end": 6526,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 6433,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6542,
											"end": 6554,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6560,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6985,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6566,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6819,
											"end": 6828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6813,
											"end": 6817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6829,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6803,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6790,
											"end": 6807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6830,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 6847,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6978,
											"name": "tag",
											"source": 4,
											"value": "414"
										},
										{
											"begin": 6847,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6985,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6991,
											"end": 7165,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 6991,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7131,
											"end": 7157,
											"name": "PUSH",
											"source": 4,
											"value": "4F6E6C7920746865206465616C65722063616E206465616C0000000000000000"
										},
										{
											"begin": 7127,
											"end": 7128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7119,
											"end": 7125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7115,
											"end": 7129,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6991,
											"end": 7165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6991,
											"end": 7165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7537,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7171,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 7393,
											"end": 7396,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 7334,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7334,
											"end": 7401,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 7334,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7327,
											"end": 7401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7499,
											"end": 7502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 7410,
											"end": 7503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7410,
											"end": 7503,
											"name": "tag",
											"source": 4,
											"value": "418"
										},
										{
											"begin": 7410,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7523,
											"end": 7526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7543,
											"end": 7962,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7543,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7736,
											"end": 7745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7724,
											"end": 7750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7790,
											"end": 7794,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7786,
											"end": 7806,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7771,
											"end": 7780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7767,
											"end": 7784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 7950,
											"end": 7954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7824,
											"end": 7955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7955,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 7824,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7816,
											"end": 7955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7816,
											"end": 7955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7543,
											"end": 7962,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7543,
											"end": 7962,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7543,
											"end": 7962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7543,
											"end": 7962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7968,
											"end": 8149,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7968,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8108,
											"end": 8141,
											"name": "PUSH",
											"source": 4,
											"value": "43757272656E7420726F756E64206973207374696C6C2072756E6E696E672E00"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8092,
											"end": 8106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8142,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7968,
											"end": 8149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7968,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8521,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 8155,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8297,
											"end": 8300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8377,
											"end": 8380,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 8318,
											"end": 8385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8385,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8318,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8311,
											"end": 8385,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8311,
											"end": 8385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8483,
											"end": 8486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 8394,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8487,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8394,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8512,
											"end": 8514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8503,
											"end": 8515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8496,
											"end": 8515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8496,
											"end": 8515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 8789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8778,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8770,
											"end": 8790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 8768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 8808,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9128,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 8952,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9120,
											"name": "PUSH",
											"source": 4,
											"value": "47616D65206E6F7420696E20636F72726563742073746174652E000000000000"
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 9361,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 9356,
											"end": 9359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9297,
											"end": 9364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 9297,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 9462,
											"end": 9465,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 9373,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 9373,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9491,
											"end": 9493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9475,
											"end": 9494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9475,
											"end": 9494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9134,
											"end": 9500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9710,
											"end": 9712,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9759,
											"end": 9768,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9753,
											"end": 9757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9749,
											"end": 9769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9730,
											"end": 9747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 9787,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 9787,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9779,
											"end": 9918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9506,
											"end": 9925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9931,
											"end": 10111,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 9931,
											"end": 10111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10056,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9976,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9969,
											"end": 10057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10066,
											"end": 10081,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10100,
											"end": 10104,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10097,
											"end": 10098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10105,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10176,
											"end": 10196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10210,
											"end": 10230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10250,
											"end": 10251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10274,
											"end": 10277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10278,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10301,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 10265,
											"end": 10301,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 10281,
											"end": 10299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 10281,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10301,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 10265,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10314,
											"end": 10534,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 10314,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "506C6179657220616C72656164792073656C656374656420686974206F6E6365"
										},
										{
											"begin": 10450,
											"end": 10451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10442,
											"end": 10448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10438,
											"end": 10452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10431,
											"end": 10489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10523,
											"end": 10526,
											"name": "PUSH",
											"source": 4,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10518,
											"end": 10520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10499,
											"end": 10527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10314,
											"end": 10534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10314,
											"end": 10534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10906,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 10540,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10682,
											"end": 10685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10703,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 10767,
											"end": 10769,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 10762,
											"end": 10765,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 10703,
											"end": 10770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10770,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 10703,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 10868,
											"end": 10871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 10779,
											"end": 10872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10872,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 10779,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10892,
											"end": 10895,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10888,
											"end": 10900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 10900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 11331,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 10912,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11116,
											"end": 11118,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11105,
											"end": 11114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11093,
											"end": 11119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11093,
											"end": 11119,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11165,
											"end": 11174,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11159,
											"end": 11163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11151,
											"end": 11152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11136,
											"end": 11153,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11193,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11319,
											"end": 11323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11193,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11193,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11193,
											"end": 11324,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11193,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11185,
											"end": 11324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11185,
											"end": 11324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 11331,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 11331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 11331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10912,
											"end": 11331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11337,
											"end": 11514,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11337,
											"end": 11514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11477,
											"end": 11506,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F742074616B696E6720616E79206E657720706C61796572732E0000000000"
										},
										{
											"begin": 11473,
											"end": 11474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11465,
											"end": 11471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11454,
											"end": 11507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11337,
											"end": 11514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11337,
											"end": 11514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11886,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 11520,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11662,
											"end": 11665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 11747,
											"end": 11749,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 11742,
											"end": 11745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 11683,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11750,
											"name": "tag",
											"source": 4,
											"value": "447"
										},
										{
											"begin": 11683,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11759,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11848,
											"end": 11851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11759,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 11759,
											"end": 11852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11759,
											"end": 11852,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11759,
											"end": 11852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11877,
											"end": 11879,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11872,
											"end": 11875,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11868,
											"end": 11880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11861,
											"end": 11880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 12311,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 11892,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12058,
											"end": 12062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12096,
											"end": 12098,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12081,
											"end": 12099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12073,
											"end": 12099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12073,
											"end": 12099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12145,
											"end": 12154,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12135,
											"end": 12155,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12131,
											"end": 12132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12116,
											"end": 12133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12109,
											"end": 12156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 12299,
											"end": 12303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12173,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "tag",
											"source": 4,
											"value": "450"
										},
										{
											"begin": 12173,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12165,
											"end": 12304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12165,
											"end": 12304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 12311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 12311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 12311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11892,
											"end": 12311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12317,
											"end": 12489,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12317,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12457,
											"end": 12481,
											"name": "PUSH",
											"source": 4,
											"value": "496E636F727265637420696E697469616C206265742E00000000000000000000"
										},
										{
											"begin": 12453,
											"end": 12454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12441,
											"end": 12455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12434,
											"end": 12482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12317,
											"end": 12489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12317,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12637,
											"end": 12640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 12722,
											"end": 12724,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 12717,
											"end": 12720,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 12658,
											"end": 12725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "tag",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 12658,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12651,
											"end": 12725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12651,
											"end": 12725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 12823,
											"end": 12826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 12734,
											"end": 12827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "tag",
											"source": 4,
											"value": "454"
										},
										{
											"begin": 12734,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12852,
											"end": 12854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12847,
											"end": 12850,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12843,
											"end": 12855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12836,
											"end": 12855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12495,
											"end": 12861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12867,
											"end": 13286,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 12867,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13033,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13073,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13060,
											"end": 13069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13056,
											"end": 13074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13048,
											"end": 13074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13120,
											"end": 13129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13110,
											"end": 13130,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13104,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13091,
											"end": 13108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13084,
											"end": 13131,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 13274,
											"end": 13278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 13148,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13279,
											"name": "tag",
											"source": 4,
											"value": "456"
										},
										{
											"begin": 13148,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13140,
											"end": 13279,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12867,
											"end": 13286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12867,
											"end": 13286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12867,
											"end": 13286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12867,
											"end": 13286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13471,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 13292,
											"end": 13471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13432,
											"end": 13463,
											"name": "PUSH",
											"source": 4,
											"value": "506C61796572206469646E277420706C61636520616E7920626574732E000000"
										},
										{
											"begin": 13428,
											"end": 13429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13416,
											"end": 13430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13409,
											"end": 13464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13292,
											"end": 13471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13843,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 13477,
											"end": 13843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13619,
											"end": 13622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 13704,
											"end": 13706,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 13699,
											"end": 13702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13640,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 13640,
											"end": 13707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13640,
											"end": 13707,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 13640,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13633,
											"end": 13707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13633,
											"end": 13707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13716,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 13805,
											"end": 13808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13716,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 13716,
											"end": 13809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13716,
											"end": 13809,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 13716,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13834,
											"end": 13836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13829,
											"end": 13832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13825,
											"end": 13837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13818,
											"end": 13837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13818,
											"end": 13837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13849,
											"end": 14268,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 13849,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14015,
											"end": 14019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14053,
											"end": 14055,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14042,
											"end": 14051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14038,
											"end": 14056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14030,
											"end": 14056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14030,
											"end": 14056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14102,
											"end": 14111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14096,
											"end": 14100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14092,
											"end": 14112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 14088,
											"end": 14089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14077,
											"end": 14086,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14073,
											"end": 14090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14066,
											"end": 14113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14130,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 14256,
											"end": 14260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14130,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 14130,
											"end": 14261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14130,
											"end": 14261,
											"name": "tag",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 14130,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14122,
											"end": 14261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14122,
											"end": 14261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13849,
											"end": 14268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13849,
											"end": 14268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13849,
											"end": 14268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13849,
											"end": 14268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14505,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 14274,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "PUSH",
											"source": 4,
											"value": "43757272656E746C79206E6F7420616C6C6F77696E6720686974206F72207374"
										},
										{
											"begin": 14410,
											"end": 14411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14402,
											"end": 14408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14398,
											"end": 14412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14391,
											"end": 14449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14483,
											"end": 14497,
											"name": "PUSH",
											"source": 4,
											"value": "616E6420616374696F6E732E0000000000000000000000000000000000000000"
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14470,
											"end": 14476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14466,
											"end": 14481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14459,
											"end": 14498,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14877,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 14511,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14653,
											"end": 14656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14674,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 14738,
											"end": 14740,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 14733,
											"end": 14736,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14674,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 14674,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14674,
											"end": 14741,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 14674,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14667,
											"end": 14741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14667,
											"end": 14741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14750,
											"end": 14843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 14839,
											"end": 14842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14750,
											"end": 14843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 14750,
											"end": 14843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14750,
											"end": 14843,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 14750,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14868,
											"end": 14870,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 14863,
											"end": 14866,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14852,
											"end": 14871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14852,
											"end": 14871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15302,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 14883,
											"end": 15302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15049,
											"end": 15053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15087,
											"end": 15089,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15076,
											"end": 15085,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15072,
											"end": 15090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15064,
											"end": 15090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15064,
											"end": 15090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15136,
											"end": 15145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15130,
											"end": 15134,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15126,
											"end": 15146,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15111,
											"end": 15120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15107,
											"end": 15124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15100,
											"end": 15147,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15164,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 15290,
											"end": 15294,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15164,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 15164,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15164,
											"end": 15295,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 15164,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15156,
											"end": 15295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15156,
											"end": 15295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15302,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15302,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14883,
											"end": 15302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15308,
											"end": 15533,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 15308,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15448,
											"end": 15482,
											"name": "PUSH",
											"source": 4,
											"value": "526F756E6420646F6573206E6F742061636365707420616E79206D6F72652063"
										},
										{
											"begin": 15444,
											"end": 15445,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15432,
											"end": 15446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15425,
											"end": 15483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15517,
											"end": 15525,
											"name": "PUSH",
											"source": 4,
											"value": "68616E6765730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15512,
											"end": 15514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15504,
											"end": 15510,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15500,
											"end": 15515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15493,
											"end": 15526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15308,
											"end": 15533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15308,
											"end": 15533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15539,
											"end": 15905,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 15539,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15681,
											"end": 15684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15702,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15766,
											"end": 15768,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 15761,
											"end": 15764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15702,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 15702,
											"end": 15769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15702,
											"end": 15769,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 15702,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15695,
											"end": 15769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15778,
											"end": 15871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 15867,
											"end": 15870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15778,
											"end": 15871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 15778,
											"end": 15871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15778,
											"end": 15871,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 15778,
											"end": 15871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15896,
											"end": 15898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15891,
											"end": 15894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15887,
											"end": 15899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15880,
											"end": 15899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15880,
											"end": 15899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15539,
											"end": 15905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15539,
											"end": 15905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15539,
											"end": 15905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15539,
											"end": 15905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16330,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 15911,
											"end": 16330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16104,
											"end": 16113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16100,
											"end": 16118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16092,
											"end": 16118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16092,
											"end": 16118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16164,
											"end": 16173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16158,
											"end": 16162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16154,
											"end": 16174,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16150,
											"end": 16151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16139,
											"end": 16148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16135,
											"end": 16152,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16128,
											"end": 16175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16192,
											"end": 16323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 16318,
											"end": 16322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16192,
											"end": 16323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 16192,
											"end": 16323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16192,
											"end": 16323,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 16192,
											"end": 16323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16184,
											"end": 16323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16184,
											"end": 16323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15911,
											"end": 16330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16336,
											"end": 16516,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 16336,
											"end": 16516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16384,
											"end": 16461,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16381,
											"end": 16382,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16374,
											"end": 16462,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16481,
											"end": 16485,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 16478,
											"end": 16479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16471,
											"end": 16486,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16505,
											"end": 16509,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 16502,
											"end": 16503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16495,
											"end": 16510,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16522,
											"end": 16702,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 16522,
											"end": 16702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16570,
											"end": 16647,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16567,
											"end": 16568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16560,
											"end": 16648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16667,
											"end": 16671,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 16664,
											"end": 16665,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16657,
											"end": 16672,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16691,
											"end": 16695,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 16688,
											"end": 16689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16681,
											"end": 16696,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16740,
											"end": 16741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16757,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 16775,
											"end": 16776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 16757,
											"end": 16777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16757,
											"end": 16777,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 16757,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16752,
											"end": 16777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16752,
											"end": 16777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16791,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 16809,
											"end": 16810,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16791,
											"end": 16811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 16791,
											"end": 16811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16791,
											"end": 16811,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 16791,
											"end": 16811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16786,
											"end": 16811,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16786,
											"end": 16811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16830,
											"end": 16831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16820,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 16820,
											"end": 16855,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16835,
											"end": 16853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 16835,
											"end": 16853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 16835,
											"end": 16853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16835,
											"end": 16853,
											"name": "tag",
											"source": 4,
											"value": "481"
										},
										{
											"begin": 16835,
											"end": 16853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16820,
											"end": 16855,
											"name": "tag",
											"source": 4,
											"value": "480"
										},
										{
											"begin": 16820,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16876,
											"end": 16877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16873,
											"end": 16874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16869,
											"end": 16878,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 16864,
											"end": 16878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16864,
											"end": 16878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16890,
											"end": 17123,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 16890,
											"end": 17123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16929,
											"end": 16932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 16970,
											"end": 16975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 16952,
											"end": 16976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 16952,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16943,
											"end": 16976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16943,
											"end": 16976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16998,
											"end": 17064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16991,
											"end": 16996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16988,
											"end": 17065,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16985,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 16985,
											"end": 17088,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 17068,
											"end": 17086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "tag",
											"source": 4,
											"value": "485"
										},
										{
											"begin": 17068,
											"end": 17086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16985,
											"end": 17088,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 16985,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17115,
											"end": 17116,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17108,
											"end": 17113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17104,
											"end": 17117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17097,
											"end": 17117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17097,
											"end": 17117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16890,
											"end": 17123,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16890,
											"end": 17123,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16890,
											"end": 17123,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16890,
											"end": 17123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17300,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 17129,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17168,
											"end": 17171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17191,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 17209,
											"end": 17214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17191,
											"end": 17215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 17191,
											"end": 17215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17191,
											"end": 17215,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 17191,
											"end": 17215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17182,
											"end": 17215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17182,
											"end": 17215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17237,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17230,
											"end": 17235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17227,
											"end": 17242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17224,
											"end": 17265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 17224,
											"end": 17265,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17245,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 17245,
											"end": 17263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 17245,
											"end": 17263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17245,
											"end": 17263,
											"name": "tag",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 17245,
											"end": 17263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17224,
											"end": 17265,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 17224,
											"end": 17265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17292,
											"end": 17293,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17285,
											"end": 17290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17281,
											"end": 17294,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17274,
											"end": 17294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17274,
											"end": 17294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17306,
											"end": 17400,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 17306,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17339,
											"end": 17347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17387,
											"end": 17392,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17383,
											"end": 17385,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17379,
											"end": 17393,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17358,
											"end": 17393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17358,
											"end": 17393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17306,
											"end": 17400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17306,
											"end": 17400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17306,
											"end": 17400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17306,
											"end": 17400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17406,
											"end": 17500,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 17406,
											"end": 17500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17445,
											"end": 17452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17474,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 17488,
											"end": 17493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17474,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 17474,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17474,
											"end": 17494,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 17474,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17463,
											"end": 17494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17463,
											"end": 17494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17406,
											"end": 17500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17406,
											"end": 17500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17406,
											"end": 17500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17406,
											"end": 17500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17506,
											"end": 17606,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 17506,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17545,
											"end": 17552,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 17594,
											"end": 17599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 17574,
											"end": 17600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 17574,
											"end": 17600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17563,
											"end": 17600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17563,
											"end": 17600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17506,
											"end": 17606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17506,
											"end": 17606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17506,
											"end": 17606,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17506,
											"end": 17606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17612,
											"end": 17769,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 17612,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17717,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 17737,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 17755,
											"end": 17760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17737,
											"end": 17761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 17737,
											"end": 17761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17737,
											"end": 17761,
											"name": "tag",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 17737,
											"end": 17761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17717,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 17717,
											"end": 17762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17717,
											"end": 17762,
											"name": "tag",
											"source": 4,
											"value": "496"
										},
										{
											"begin": 17717,
											"end": 17762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17712,
											"end": 17715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17705,
											"end": 17763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17612,
											"end": 17769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17612,
											"end": 17769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17612,
											"end": 17769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17854,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 17775,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17814,
											"end": 17821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17843,
											"end": 17848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17832,
											"end": 17848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17832,
											"end": 17848,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17775,
											"end": 17854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17860,
											"end": 18017,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 17860,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17965,
											"end": 18010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "500"
										},
										{
											"begin": 17985,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "501"
										},
										{
											"begin": 18003,
											"end": 18008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17985,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 17985,
											"end": 18009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17985,
											"end": 18009,
											"name": "tag",
											"source": 4,
											"value": "501"
										},
										{
											"begin": 17985,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17965,
											"end": 18010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 17965,
											"end": 18010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17965,
											"end": 18010,
											"name": "tag",
											"source": 4,
											"value": "500"
										},
										{
											"begin": 17965,
											"end": 18010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17960,
											"end": 17963,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17953,
											"end": 18011,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17860,
											"end": 18017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17860,
											"end": 18017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17860,
											"end": 18017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18163,
											"end": 18166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18178,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 18249,
											"end": 18252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18240,
											"end": 18246,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 18178,
											"end": 18253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 18178,
											"end": 18253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18178,
											"end": 18253,
											"name": "tag",
											"source": 4,
											"value": "503"
										},
										{
											"begin": 18178,
											"end": 18253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18278,
											"end": 18280,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 18273,
											"end": 18276,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18269,
											"end": 18281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18262,
											"end": 18281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18262,
											"end": 18281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18291,
											"end": 18366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 18362,
											"end": 18365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18353,
											"end": 18359,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 18291,
											"end": 18366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 18291,
											"end": 18366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 18291,
											"end": 18366,
											"name": "tag",
											"source": 4,
											"value": "504"
										},
										{
											"begin": 18291,
											"end": 18366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18391,
											"end": 18393,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 18386,
											"end": 18389,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 18382,
											"end": 18394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18375,
											"end": 18394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 18375,
											"end": 18394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18411,
											"end": 18414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18404,
											"end": 18414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 18404,
											"end": 18414,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 18023,
											"end": 18420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"blockjack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bets(address)": "89a78f1a",
							"deal()": "553df021",
							"dealer()": "9de2ee21",
							"hands(address,uint256)": "efa2e37f",
							"hit()": "2ae3594a",
							"initialBet()": "1d73c64c",
							"phase()": "b1c9fe6e",
							"placeBet()": "f90f4560",
							"playerDecisions(address)": "f120daf3",
							"roundSessionExpiry()": "e69828b1",
							"stand()": "c2897b10"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_initialBet\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_roundSessionExpiry\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Bust\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Hit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Stand\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dealer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hands\",\"outputs\":[{\"internalType\":\"enum BlockJack.Card\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialBet\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phase\",\"outputs\":[{\"internalType\":\"enum BlockJack.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerDecisions\",\"outputs\":[{\"internalType\":\"enum BlockJack.PlayerDecision\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roundSessionExpiry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"TODO\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TODO\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"TODO\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"blockjack.sol\":\"BlockJack\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"blockjack.sol\":{\"keccak256\":\"0x49e0a3459319b765ce119cb8b8144f431df4e0eaa5ae27f7b2cfda5e0ccf71b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87879c3b6332c0a7948343529d3d91fada201065f1a2ef365f60ccacf40498b2\",\"dweb:/ipfs/QmSXFpcgZueC5C13f7JSXZaJEwrvE128NZ15hBVT9CYqET\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3440,
								"contract": "blockjack.sol:BlockJack",
								"label": "initialBet",
								"offset": 0,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 3442,
								"contract": "blockjack.sol:BlockJack",
								"label": "roundSessionExpiry",
								"offset": 2,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 3444,
								"contract": "blockjack.sol:BlockJack",
								"label": "dealer",
								"offset": 4,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3446,
								"contract": "blockjack.sol:BlockJack",
								"label": "currentRoundTimeout",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 3448,
								"contract": "blockjack.sol:BlockJack",
								"label": "multiplier",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 3466,
								"contract": "blockjack.sol:BlockJack",
								"label": "players",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 3472,
								"contract": "blockjack.sol:BlockJack",
								"label": "hands",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_enum(Card)4017)dyn_storage)"
							},
							{
								"astId": 3476,
								"contract": "blockjack.sol:BlockJack",
								"label": "bets",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3481,
								"contract": "blockjack.sol:BlockJack",
								"label": "playerDecisions",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_enum(PlayerDecision)4024)"
							},
							{
								"astId": 3484,
								"contract": "blockjack.sol:BlockJack",
								"label": "phase",
								"offset": 0,
								"slot": "7",
								"type": "t_enum(Phase)4020"
							},
							{
								"astId": 3490,
								"contract": "blockjack.sol:BlockJack",
								"label": "enumValues",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_enum(Card)4017,t_array(t_uint8)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_enum(Card)4017)dyn_storage": {
								"base": "t_enum(Card)4017",
								"encoding": "dynamic_array",
								"label": "enum BlockJack.Card[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint8)dyn_storage": {
								"base": "t_uint8",
								"encoding": "dynamic_array",
								"label": "uint8[]",
								"numberOfBytes": "32"
							},
							"t_enum(Card)4017": {
								"encoding": "inplace",
								"label": "enum BlockJack.Card",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)4020": {
								"encoding": "inplace",
								"label": "enum BlockJack.Phase",
								"numberOfBytes": "1"
							},
							"t_enum(PlayerDecision)4024": {
								"encoding": "inplace",
								"label": "enum BlockJack.PlayerDecision",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_enum(Card)4017)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum BlockJack.Card[])",
								"numberOfBytes": "32",
								"value": "t_array(t_enum(Card)4017)dyn_storage"
							},
							"t_mapping(t_address,t_enum(PlayerDecision)4024)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum BlockJack.PlayerDecision)",
								"numberOfBytes": "32",
								"value": "t_enum(PlayerDecision)4024"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_enum(Card)4017,t_array(t_uint8)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_enum(Card)4017",
								"label": "mapping(enum BlockJack.Card => uint8[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint8)dyn_storage"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "TODO",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:0",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51
							],
							"name": "Panic",
							"nameLocation": "665:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:0",
										"text": "@dev generic / unspecified error"
									},
									"id": 6,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "718:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:0",
										"text": "@dev used by the assert() builtin"
									},
									"id": 10,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "806:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:0",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 14,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "897:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:0",
										"text": "@dev division or modulo by zero"
									},
									"id": 18,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "990:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:0",
										"text": "@dev enum conversion error"
									},
									"id": 22,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1080:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:0",
										"text": "@dev invalid encoding in storage"
									},
									"id": 26,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1181:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:0",
										"text": "@dev empty array pop"
									},
									"id": 30,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1271:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:0",
										"text": "@dev array out of bounds access"
									},
									"id": 34,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1365:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:0",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 38,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1493:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 36,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:0",
										"text": "@dev calling invalid internal function"
									},
									"id": 42,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 51,
									"src": "1593:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1819:151:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:0",
													"nodeType": "YulBlock",
													"src": "1854:110:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:0",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:0",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:0"
																},
																"nativeSrc": "1868:24:0",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:0"
															},
															"nativeSrc": "1868:24:0",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:0"
																},
																"nativeSrc": "1905:18:0",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:0"
															},
															"nativeSrc": "1905:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:0",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:0"
																},
																"nativeSrc": "1936:18:0",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:0"
															},
															"nativeSrc": "1936:18:0",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 45,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 48,
												"nodeType": "InlineAssembly",
												"src": "1829:135:0"
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:0",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1791:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:0"
									},
									"scope": 51,
									"src": "1776:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 52,
							"src": "657:1315:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1657
						],
						"Panic": [
							51
						],
						"SafeCast": [
							3422
						]
					},
					"id": 1658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 53,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 55,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1658,
							"sourceUnit": 52,
							"src": "129:35:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 54,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 51,
										"src": "137:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1658,
							"sourceUnit": 3423,
							"src": "165:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 56,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3422,
										"src": "173:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 58,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1657,
							"linearizedBaseContracts": [
								1657
							],
							"name": "Math",
							"nameLocation": "289:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 63,
									"members": [
										{
											"id": 59,
											"name": "Floor",
											"nameLocation": "324:5:1",
											"nodeType": "EnumValue",
											"src": "324:5:1"
										},
										{
											"id": 60,
											"name": "Ceil",
											"nameLocation": "367:4:1",
											"nodeType": "EnumValue",
											"src": "367:4:1"
										},
										{
											"id": 61,
											"name": "Trunc",
											"nameLocation": "409:5:1",
											"nodeType": "EnumValue",
											"src": "409:5:1"
										},
										{
											"id": 62,
											"name": "Expand",
											"nameLocation": "439:6:1",
											"nodeType": "EnumValue",
											"src": "439:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:1",
									"nodeType": "EnumDefinition",
									"src": "300:169:1"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "677:140:1",
										"statements": [
											{
												"id": 93,
												"nodeType": "UncheckedBlock",
												"src": "687:124:1",
												"statements": [
													{
														"assignments": [
															76
														],
														"declarations": [
															{
																"constant": false,
																"id": 76,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 93,
																"src": "711:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 75,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 80,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "723:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 78,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "727:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 81,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "746:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 82,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "750:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 88,
														"nodeType": "IfStatement",
														"src": "742:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 74,
															"id": 87,
															"nodeType": "Return",
															"src": "753:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 90,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "798:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 91,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 74,
														"id": 92,
														"nodeType": "Return",
														"src": "784:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:1",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "602:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "613:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "647:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "661:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:1"
									},
									"scope": 1657,
									"src": "586:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1028:113:1",
										"statements": [
											{
												"id": 121,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 107,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1066:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 108,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "1070:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 114,
														"nodeType": "IfStatement",
														"src": "1062:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 112,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 106,
															"id": 113,
															"nodeType": "Return",
															"src": "1073:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 116,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "1118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 117,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1122:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 119,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 106,
														"id": 120,
														"nodeType": "Return",
														"src": "1104:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "953:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "964:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "998:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1012:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:1"
									},
									"scope": 1657,
									"src": "937:204:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1355:417:1",
										"statements": [
											{
												"id": 163,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1623:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 142,
														"nodeType": "IfStatement",
														"src": "1619:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 134,
															"id": 141,
															"nodeType": "Return",
															"src": "1631:16:1"
														}
													},
													{
														"assignments": [
															144
														],
														"declarations": [
															{
																"constant": false,
																"id": 144,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 163,
																"src": "1661:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 143,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 148,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 145,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1673:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1677:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 149,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1696:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 150,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "1700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1705:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 158,
														"nodeType": "IfStatement",
														"src": "1692:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 134,
															"id": 157,
															"nodeType": "Return",
															"src": "1708:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 160,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "1753:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 161,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 134,
														"id": 162,
														"nodeType": "Return",
														"src": "1739:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1280:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1291:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1325:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1339:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:1"
									},
									"scope": 1657,
									"src": "1264:508:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "1987:114:1",
										"statements": [
											{
												"id": 191,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "2025:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 184,
														"nodeType": "IfStatement",
														"src": "2021:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 176,
															"id": 183,
															"nodeType": "Return",
															"src": "2033:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 186,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "2078:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 187,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "2082:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 189,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 176,
														"id": 190,
														"nodeType": "Return",
														"src": "2064:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:1",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1912:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1923:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1957:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1971:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:1"
									},
									"scope": 1657,
									"src": "1896:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2326:114:1",
										"statements": [
											{
												"id": 219,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2364:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 212,
														"nodeType": "IfStatement",
														"src": "2360:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 204,
															"id": 211,
															"nodeType": "Return",
															"src": "2372:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 214,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "2417:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 215,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2421:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 217,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 204,
														"id": 218,
														"nodeType": "Return",
														"src": "2403:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2251:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2262:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2296:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "2310:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:1"
									},
									"scope": 1657,
									"src": "2235:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2912:207:1",
										"statements": [
											{
												"id": 246,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3060:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 234,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 226,
																						"src": "3066:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 235,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 228,
																						"src": "3070:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 237,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 240,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "3091:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 238,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3422,
																					"src": "3075:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:1",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3421,
																				"src": "3075:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 232,
														"id": 245,
														"nodeType": "Return",
														"src": "3053:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:1",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2842:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2869:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2903:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:1"
									},
									"scope": 1657,
									"src": "2825:294:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3256:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "3281:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "3285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 262,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3288:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 263,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3291:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 258,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3273:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 265,
												"nodeType": "Return",
												"src": "3266:27:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3202:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3213:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:1"
									},
									"scope": 1657,
									"src": "3189:111:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3438:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "3463:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3467:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 281,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "3470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 282,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "3473:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 284,
												"nodeType": "Return",
												"src": "3448:27:1"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3384:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:1"
									},
									"scope": 1657,
									"src": "3371:111:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "3666:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 296,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 289,
																	"src": "3721:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 297,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "3725:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 299,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 300,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3731:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 301,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3735:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 303,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 295,
												"id": 307,
												"nodeType": "Return",
												"src": "3713:28:1"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3623:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3657:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:1"
									},
									"scope": 1657,
									"src": "3595:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "4040:633:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 319,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "4054:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "IfStatement",
												"src": "4050:150:1",
												"trueBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "4062:138:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 325,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "4166:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:1",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "4166:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 322,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "4154:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:1",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 50,
																	"src": "4154:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 328,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:1"
														}
													]
												}
											},
											{
												"id": 348,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:1",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 333,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "4630:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 331,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "4614:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "4614:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 339,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 337,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 312,
																							"src": "4641:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 338,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 340,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 341,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 314,
																				"src": "4650:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 318,
														"id": 347,
														"nodeType": "Return",
														"src": "4607:49:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3986:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "3997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4031:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:1"
									},
									"scope": 1657,
									"src": "3969:704:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "5094:4128:1",
										"statements": [
											{
												"id": 485,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:1",
												"statements": [
													{
														"assignments": [
															363
														],
														"declarations": [
															{
																"constant": false,
																"id": 363,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "5433:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 362,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 367,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 365,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5453:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:1"
													},
													{
														"assignments": [
															369
														],
														"declarations": [
															{
																"constant": false,
																"id": 369,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "5513:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 368,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 370,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:1"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:1",
															"nodeType": "YulBlock",
															"src": "5593:122:1",
															"statements": [
																{
																	"nativeSrc": "5611:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:1"
																				},
																				"nativeSrc": "5634:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:1"
																		},
																		"nativeSrc": "5621:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:1",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:1",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:1"
																				},
																				"nativeSrc": "5671:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:1"
																				},
																				"nativeSrc": "5687:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:1"
																		},
																		"nativeSrc": "5667:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:1",
																"valueSize": 1
															},
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:1",
																"valueSize": 1
															},
															{
																"declaration": 353,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:1",
																"valueSize": 1
															},
															{
																"declaration": 355,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:1",
																"valueSize": 1
															}
														],
														"id": 371,
														"nodeType": "InlineAssembly",
														"src": "5584:131:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "5796:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 380,
														"nodeType": "IfStatement",
														"src": "5792:368:1",
														"trueBody": {
															"id": 379,
															"nodeType": "Block",
															"src": "5808:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 375,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "6126:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 376,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "6134:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 361,
																	"id": 378,
																	"nodeType": "Return",
																	"src": "6119:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6270:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 382,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "6285:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "6266:143:1",
														"trueBody": {
															"id": 398,
															"nodeType": "Block",
															"src": "6292:117:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 388,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 357,
																							"src": "6330:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 391,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "6348:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 392,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:1",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 18,
																						"src": "6348:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 393,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 51,
																							"src": "6372:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:1",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 14,
																						"src": "6372:20:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 387,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 248,
																					"src": "6322:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 384,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "6310:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:1",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 50,
																			"src": "6310:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 397,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:1"
																}
															]
														}
													},
													{
														"assignments": [
															401
														],
														"declarations": [
															{
																"constant": false,
																"id": 401,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "6664:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 400,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 402,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:1"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:1",
															"nodeType": "YulBlock",
															"src": "6704:291:1",
															"statements": [
																{
																	"nativeSrc": "6773:38:1",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:1"
																		},
																		"nativeSrc": "6786:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:1",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:1"
																				},
																				"nativeSrc": "6913:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:1"
																		},
																		"nativeSrc": "6902:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:1",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:1"
																		},
																		"nativeSrc": "6960:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:1",
																"valueSize": 1
															},
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:1",
																"valueSize": 1
															},
															{
																"declaration": 369,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:1",
																"valueSize": 1
															},
															{
																"declaration": 401,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:1",
																"valueSize": 1
															},
															{
																"declaration": 401,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:1",
																"valueSize": 1
															},
															{
																"declaration": 401,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:1",
																"valueSize": 1
															},
															{
																"declaration": 353,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:1",
																"valueSize": 1
															},
															{
																"declaration": 355,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:1",
																"valueSize": 1
															}
														],
														"id": 403,
														"nodeType": "InlineAssembly",
														"src": "6695:300:1"
													},
													{
														"assignments": [
															405
														],
														"declarations": [
															{
																"constant": false,
																"id": 405,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "7199:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 404,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 412,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "7214:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 408,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "7233:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 410,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:1"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:1",
															"nodeType": "YulBlock",
															"src": "7268:366:1",
															"statements": [
																{
																	"nativeSrc": "7333:37:1",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:1"
																		},
																		"nativeSrc": "7348:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:1"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:1",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:1"
																		},
																		"nativeSrc": "7446:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:1",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:1"
																						},
																						"nativeSrc": "7597:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:1"
																				},
																				"nativeSrc": "7593:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:1"
																		},
																		"nativeSrc": "7589:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:1",
																"valueSize": 1
															},
															{
																"declaration": 357,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:1",
																"valueSize": 1
															},
															{
																"declaration": 363,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:1",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:1",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:1",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:1",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:1",
																"valueSize": 1
															},
															{
																"declaration": 405,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:1",
																"valueSize": 1
															}
														],
														"id": 413,
														"nodeType": "InlineAssembly",
														"src": "7259:375:1"
													},
													{
														"expression": {
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 414,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "7700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 415,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "7709:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 416,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "7717:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 419,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:1"
													},
													{
														"assignments": [
															421
														],
														"declarations": [
															{
																"constant": false,
																"id": 421,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 485,
																"src": "8056:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 420,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 428,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 423,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "8079:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 425,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:1"
													},
													{
														"expression": {
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 429,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8312:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 431,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8327:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 432,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8341:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 436,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 437,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8382:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 439,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8397:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 440,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8411:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:1"
													},
													{
														"expression": {
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 445,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8454:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 447,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8469:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 448,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8483:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 452,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:1"
													},
													{
														"expression": {
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 453,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 455,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8540:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 456,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8554:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 460,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:1"
													},
													{
														"expression": {
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 461,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8598:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 463,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8613:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 464,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8627:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 468,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:1"
													},
													{
														"expression": {
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 469,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8672:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 471,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "8687:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 472,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8701:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 476,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:1"
													},
													{
														"expression": {
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "9154:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 478,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "9163:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 479,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "9171:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 482,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:1"
													},
													{
														"expression": {
															"id": 483,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "9199:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 361,
														"id": 484,
														"nodeType": "Return",
														"src": "9192:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:1",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "5012:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "5023:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "5034:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "5078:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:1"
									},
									"scope": 1657,
									"src": "4996:4226:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "9461:128:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "9485:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 504,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "9488:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 505,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "9491:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 502,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																487,
																524
															],
															"referencedDeclaration": 487,
															"src": "9478:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 510,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "9539:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$63",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$63",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 509,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "9522:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$63_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 513,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 490,
																				"src": "9559:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 514,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 492,
																				"src": "9562:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 515,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 494,
																				"src": "9565:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 512,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 507,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3422,
																"src": "9506:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:1",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3421,
															"src": "9506:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 501,
												"id": 522,
												"nodeType": "Return",
												"src": "9471:111:1"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:1",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9367:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9378:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9389:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9410:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 495,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "9410:8:1"
													},
													"referencedDeclaration": 63,
													"src": "9410:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9452:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:1"
									},
									"scope": 1657,
									"src": "9351:238:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "10223:1849:1",
										"statements": [
											{
												"id": 619,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "10261:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 539,
														"nodeType": "IfStatement",
														"src": "10257:20:1",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 533,
															"id": 538,
															"nodeType": "Return",
															"src": "10269:8:1"
														}
													},
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 619,
																"src": "10748:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "10768:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 543,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "10772:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:1"
													},
													{
														"assignments": [
															547
														],
														"declarations": [
															{
																"constant": false,
																"id": 547,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 619,
																"src": "10787:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 546,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 549,
														"initialValue": {
															"id": 548,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "10801:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:1"
													},
													{
														"assignments": [
															551
														],
														"declarations": [
															{
																"constant": false,
																"id": 551,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 619,
																"src": "10938:8:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 550,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 553,
														"initialValue": {
															"hexValue": "30",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:1"
													},
													{
														"assignments": [
															555
														],
														"declarations": [
															{
																"constant": false,
																"id": 555,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 619,
																"src": "10964:8:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 554,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 557,
														"initialValue": {
															"hexValue": "31",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:1"
													},
													{
														"body": {
															"id": 594,
															"nodeType": "Block",
															"src": "11014:882:1",
															"statements": [
																{
																	"assignments": [
																		562
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 562,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:1",
																			"nodeType": "VariableDeclaration",
																			"scope": 594,
																			"src": "11032:16:1",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 566,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 563,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "11051:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 564,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 541,
																			"src": "11057:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:1"
																},
																{
																	"expression": {
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 567,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 547,
																					"src": "11086:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 568,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 541,
																					"src": "11091:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 569,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 570,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 541,
																					"src": "11191:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 571,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 547,
																						"src": "11436:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 574,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 572,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 541,
																							"src": "11442:9:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 573,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 562,
																							"src": "11454:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 576,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 578,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:1"
																},
																{
																	"expression": {
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 579,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "11500:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 580,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "11503:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 581,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 582,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 555,
																					"src": "11585:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 583,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 551,
																						"src": "11839:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 584,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 555,
																							"src": "11843:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 587,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 562,
																									"src": "11854:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 586,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 585,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:1",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 588,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 591,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 593,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:1"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "10998:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 595,
														"nodeType": "WhileStatement",
														"src": "10991:905:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "11914:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 601,
														"nodeType": "IfStatement",
														"src": "11910:22:1",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 533,
															"id": 600,
															"nodeType": "Return",
															"src": "11924:8:1"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 603,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "11983:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 606,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "11990:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:1",
																				"subExpression": {
																					"id": 609,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "12003:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 615,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "12015:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 613,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 602,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "11975:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 533,
														"id": 618,
														"nodeType": "Return",
														"src": "11968:50:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:1",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "10169:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "10180:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "10214:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:1"
									},
									"scope": 1657,
									"src": "10153:1919:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "12672:82:1",
										"statements": [
											{
												"id": 640,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 633,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "12725:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 634,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "12728:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 637,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "12735:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 631,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "12713:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$1657_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:1",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 678,
																"src": "12713:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 630,
														"id": 639,
														"nodeType": "Return",
														"src": "12706:31:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:1",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "12618:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "12629:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "12663:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:1"
									},
									"scope": 1657,
									"src": "12597:157:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "13524:174:1",
										"statements": [
											{
												"assignments": [
													655,
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13535:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "13549:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "13577:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 660,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "13580:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "13583:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															702,
															784
														],
														"referencedDeclaration": 702,
														"src": "13567:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:1"
											},
											{
												"condition": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:1",
													"subExpression": {
														"id": 664,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "13600:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "13595:74:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "13609:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 669,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "13635:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:1",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "13635:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 666,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "13623:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:1",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 50,
																	"src": "13623:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 672,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 675,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "13685:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 653,
												"id": 676,
												"nodeType": "Return",
												"src": "13678:13:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:1",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "13459:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "13470:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "13481:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:1"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "13515:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:1"
									},
									"scope": 1657,
									"src": "13443:255:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "14552:1493:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "14566:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "14562:29:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 697,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 691,
													"id": 698,
													"nodeType": "Return",
													"src": "14574:17:1"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:1",
													"nodeType": "YulBlock",
													"src": "14626:1413:1",
													"statements": [
														{
															"nativeSrc": "14640:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:1"
																},
																"nativeSrc": "14651:11:1",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:1",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:1"
																},
																"nativeSrc": "15563:17:1",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:1"
															},
															"nativeSrc": "15563:17:1",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:1"
																		},
																		"nativeSrc": "15600:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:1"
																},
																"nativeSrc": "15593:28:1",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:1"
															},
															"nativeSrc": "15593:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:1"
																		},
																		"nativeSrc": "15641:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:1"
																},
																"nativeSrc": "15634:28:1",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:1"
															},
															"nativeSrc": "15634:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:1"
																		},
																		"nativeSrc": "15682:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:1"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:1"
																},
																"nativeSrc": "15675:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:1"
															},
															"nativeSrc": "15675:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:1"
																		},
																		"nativeSrc": "15720:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:1"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:1"
																},
																"nativeSrc": "15713:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:1"
															},
															"nativeSrc": "15713:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:1",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:1"
																		},
																		"nativeSrc": "15758:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:1"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:1"
																},
																"nativeSrc": "15751:25:1",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:1"
															},
															"nativeSrc": "15751:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:1"
														},
														{
															"nativeSrc": "15938:57:1",
															"nodeType": "YulAssignment",
															"src": "15938:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:1"
																		},
																		"nativeSrc": "15960:5:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:1",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:1",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:1",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:1"
																},
																"nativeSrc": "15949:46:1",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:1"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:1"
																}
															]
														},
														{
															"nativeSrc": "16008:21:1",
															"nodeType": "YulAssignment",
															"src": "16008:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:1"
																},
																"nativeSrc": "16018:11:1",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 681,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:1",
														"valueSize": 1
													},
													{
														"declaration": 683,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:1",
														"valueSize": 1
													},
													{
														"declaration": 685,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:1",
														"valueSize": 1
													},
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:1",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:1",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "14466:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "14477:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "14488:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "14522:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "14536:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:1"
									},
									"scope": 1657,
									"src": "14447:1598:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "16242:179:1",
										"statements": [
											{
												"assignments": [
													715,
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "16253:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "16267:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 716,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 719,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "16300:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 720,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "16303:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 721,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "16306:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 718,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															702,
															784
														],
														"referencedDeclaration": 784,
														"src": "16290:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:1"
											},
											{
												"condition": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:1",
													"subExpression": {
														"id": 724,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "16323:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 734,
												"nodeType": "IfStatement",
												"src": "16318:74:1",
												"trueBody": {
													"id": 733,
													"nodeType": "Block",
													"src": "16332:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 729,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 51,
																			"src": "16358:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:1",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "16358:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 726,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "16346:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$51_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:1",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 50,
																	"src": "16346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 732,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 735,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "16408:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 713,
												"id": 736,
												"nodeType": "Return",
												"src": "16401:13:1"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:1",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16157:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16173:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16189:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 708,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:1"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "16228:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:1"
									},
									"scope": 1657,
									"src": "16141:280:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "16675:771:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 753,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "16700:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 752,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "16689:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "16685:47:1",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 751,
													"id": 761,
													"nodeType": "Return",
													"src": "16704:28:1"
												}
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "16743:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"expression": {
														"id": 765,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "16758:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:1"
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 768,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "16848:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 771,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "16874:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 773,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "16884:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 775,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "16894:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 776,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "16900:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 777,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "16903:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 778,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "16906:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 769,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:1",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:1"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:1",
													"nodeType": "YulBlock",
													"src": "16944:496:1",
													"statements": [
														{
															"nativeSrc": "16958:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:1"
																},
																"nativeSrc": "16973:17:1",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:1"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:1",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:1",
															"nodeType": "YulAssignment",
															"src": "17080:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:1"
																		},
																		"nativeSrc": "17102:5:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:1",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:1"
																		},
																		"nativeSrc": "17124:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:1"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:1"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:1"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:1"
																},
																"nativeSrc": "17091:62:1",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:1"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:1"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:1"
																},
																"nativeSrc": "17302:20:1",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:1"
															},
															"nativeSrc": "17302:20:1",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:1"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:1"
																		},
																		"nativeSrc": "17411:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:1"
																},
																"nativeSrc": "17398:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:1"
															},
															"nativeSrc": "17398:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:1"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:1",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:1",
														"valueSize": 1
													},
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:1",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:1",
														"valueSize": 1
													},
													{
														"declaration": 748,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:1",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 782,
												"nodeType": "InlineAssembly",
												"src": "16919:521:1"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:1",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "16548:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "16572:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "16596:14:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:1"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "16640:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "16654:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:1"
									},
									"scope": 1657,
									"src": "16520:926:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "17601:176:1",
										"statements": [
											{
												"body": {
													"id": 812,
													"nodeType": "Block",
													"src": "17658:92:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 803,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "17676:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 805,
																	"indexExpression": {
																		"id": 804,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "17686:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 811,
															"nodeType": "IfStatement",
															"src": "17672:68:1",
															"trueBody": {
																"id": 810,
																"nodeType": "Block",
																"src": "17695:45:1",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 791,
																		"id": 809,
																		"nodeType": "Return",
																		"src": "17713:12:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 796,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "17631:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 797,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "17635:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"initializationExpression": {
													"assignments": [
														793
													],
													"declarations": [
														{
															"constant": false,
															"id": 793,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 813,
															"src": "17616:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 792,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 795,
													"initialValue": {
														"hexValue": "30",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:1",
														"subExpression": {
															"id": 800,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "17655:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 802,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:1"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 791,
												"id": 815,
												"nodeType": "Return",
												"src": "17759:11:1"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:1",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "17549:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:1"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "17595:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:1"
									},
									"scope": 1657,
									"src": "17529:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "18137:5124:1",
										"statements": [
											{
												"id": 1034,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "18241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 831,
														"nodeType": "IfStatement",
														"src": "18237:53:1",
														"trueBody": {
															"id": 830,
															"nodeType": "Block",
															"src": "18249:41:1",
															"statements": [
																{
																	"expression": {
																		"id": 828,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "18274:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 824,
																	"id": 829,
																	"nodeType": "Return",
																	"src": "18267:8:1"
																}
															]
														}
													},
													{
														"assignments": [
															833
														],
														"declarations": [
															{
																"constant": false,
																"id": 833,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:1",
																"nodeType": "VariableDeclaration",
																"scope": 1034,
																"src": "19217:10:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 832,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 835,
														"initialValue": {
															"id": 834,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "19230:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:1"
													},
													{
														"assignments": [
															837
														],
														"declarations": [
															{
																"constant": false,
																"id": 837,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:1",
																"nodeType": "VariableDeclaration",
																"scope": 1034,
																"src": "19245:10:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 839,
														"initialValue": {
															"hexValue": "31",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 840,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19278:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 855,
														"nodeType": "IfStatement",
														"src": "19274:92:1",
														"trueBody": {
															"id": 854,
															"nodeType": "Block",
															"src": "19296:70:1",
															"statements": [
																{
																	"expression": {
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19314:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 849,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:1"
																},
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 850,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19342:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 856,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19383:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 860,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 871,
														"nodeType": "IfStatement",
														"src": "19379:90:1",
														"trueBody": {
															"id": 870,
															"nodeType": "Block",
															"src": "19400:69:1",
															"statements": [
																{
																	"expression": {
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 862,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19418:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 865,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:1"
																},
																{
																	"expression": {
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 866,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19445:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 869,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 872,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19486:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 887,
														"nodeType": "IfStatement",
														"src": "19482:90:1",
														"trueBody": {
															"id": 886,
															"nodeType": "Block",
															"src": "19503:69:1",
															"statements": [
																{
																	"expression": {
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 878,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19521:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 881,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:1"
																},
																{
																	"expression": {
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 882,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19548:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 885,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 888,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19589:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 892,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "19585:89:1",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "19606:68:1",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19624:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:1"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19651:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19691:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 919,
														"nodeType": "IfStatement",
														"src": "19687:87:1",
														"trueBody": {
															"id": 918,
															"nodeType": "Block",
															"src": "19707:67:1",
															"statements": [
																{
																	"expression": {
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 910,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19725:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 913,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:1"
																},
																{
																	"expression": {
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 914,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19751:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 917,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19791:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 924,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 935,
														"nodeType": "IfStatement",
														"src": "19787:87:1",
														"trueBody": {
															"id": 934,
															"nodeType": "Block",
															"src": "19807:67:1",
															"statements": [
																{
																	"expression": {
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "19825:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 929,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:1"
																},
																{
																	"expression": {
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 930,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19851:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 933,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 936,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "19891:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 947,
														"nodeType": "IfStatement",
														"src": "19887:61:1",
														"trueBody": {
															"id": 946,
															"nodeType": "Block",
															"src": "19907:41:1",
															"statements": [
																{
																	"expression": {
																		"id": 944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 942,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "19925:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 945,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:1"
																}
															]
														}
													},
													{
														"expression": {
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 948,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "20368:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 950,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "20378:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 956,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:1"
													},
													{
														"expression": {
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 957,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22273:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 958,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22279:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 959,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22284:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 960,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22288:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 963,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 967,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:1"
													},
													{
														"expression": {
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 968,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22382:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 969,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22388:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 970,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22393:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 971,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22397:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 974,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 978,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:1"
													},
													{
														"expression": {
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 979,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22493:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 980,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22499:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 981,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22504:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 982,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22508:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 985,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 989,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:1"
													},
													{
														"expression": {
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 990,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22602:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 991,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22608:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 992,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22613:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 993,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22617:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 996,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1000,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:1"
													},
													{
														"expression": {
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1001,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22712:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1002,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22718:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1003,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22723:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1004,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22727:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1007,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1011,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:1"
													},
													{
														"expression": {
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1012,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "22822:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1013,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "22828:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1014,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "22833:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1015,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "22837:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1018,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1022,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1023,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "23211:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1026,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "23232:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1027,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "23237:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1028,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 837,
																				"src": "23241:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1024,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "23216:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "23216:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 824,
														"id": 1033,
														"nodeType": "Return",
														"src": "23204:40:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "18094:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:1"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "18128:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:1"
									},
									"scope": 1657,
									"src": "18080:5181:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "23434:171:1",
										"statements": [
											{
												"id": 1068,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:1",
												"statements": [
													{
														"assignments": [
															1048
														],
														"declarations": [
															{
																"constant": false,
																"id": 1048,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1068,
																"src": "23468:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1047,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1052,
														"initialValue": {
															"arguments": [
																{
																	"id": 1050,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1039,
																	"src": "23490:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1049,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1036,
																	1070
																],
																"referencedDeclaration": 1036,
																"src": "23485:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "23513:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1057,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1042,
																					"src": "23555:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1056,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "23538:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$63_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1059,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1048,
																					"src": "23568:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1060,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1048,
																					"src": "23577:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1062,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "23586:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1054,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "23522:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "23522:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1046,
														"id": 1067,
														"nodeType": "Return",
														"src": "23506:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:1",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "23372:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "23383:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1040,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "23383:8:1"
													},
													"referencedDeclaration": 63,
													"src": "23383:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:1"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "23425:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:1"
									},
									"scope": 1657,
									"src": "23358:247:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "23796:981:1",
										"statements": [
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "23806:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"hexValue": "30",
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:1"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "23834:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1084,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:1"
											},
											{
												"id": 1262,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:1",
												"statements": [
													{
														"expression": {
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1085,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "23879:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1089,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "23907:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 1092,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1090,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 1091,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 1093,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1087,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "23891:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "23891:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:1"
													},
													{
														"expression": {
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1101,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "23944:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1102,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "23954:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1104,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:1"
													},
													{
														"expression": {
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1105,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "23971:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1106,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "23981:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1108,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:1"
													},
													{
														"expression": {
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1109,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "23999:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1113,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24026:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 1116,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1114,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 1115,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 1117,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1111,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24010:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24010:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1124,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:1"
													},
													{
														"expression": {
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1125,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24062:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1126,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24072:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1128,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:1"
													},
													{
														"expression": {
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1129,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24089:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1130,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24099:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1132,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:1"
													},
													{
														"expression": {
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1133,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24117:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1137,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24144:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 1140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 1139,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 1141,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1135,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24128:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24128:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1148,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:1"
													},
													{
														"expression": {
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1149,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24180:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1150,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24190:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1152,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:1"
													},
													{
														"expression": {
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24207:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1154,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24217:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1156,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:1"
													},
													{
														"expression": {
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1157,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24235:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1161,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24262:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 1167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 1164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1162,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 1163,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 1165,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1159,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24246:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24246:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1172,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:1"
													},
													{
														"expression": {
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1173,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24298:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1174,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24308:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1176,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:1"
													},
													{
														"expression": {
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1177,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24325:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1178,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24335:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1180,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:1"
													},
													{
														"expression": {
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1181,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24353:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1185,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24379:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 1188,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1186,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 1187,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 1189,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1190,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1183,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24363:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24363:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1196,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:1"
													},
													{
														"expression": {
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24414:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1198,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24424:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1200,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:1"
													},
													{
														"expression": {
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1201,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24441:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1202,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24451:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1204,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:1"
													},
													{
														"expression": {
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1205,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24469:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1209,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24495:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 1212,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1210,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 1211,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 1213,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1207,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24479:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24479:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1220,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:1"
													},
													{
														"expression": {
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1221,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24530:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1222,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24540:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1224,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:1"
													},
													{
														"expression": {
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1225,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24557:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1226,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24567:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1228,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:1"
													},
													{
														"expression": {
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1229,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24585:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1233,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "24611:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 1236,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 1234,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 1235,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 1237,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1231,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3422,
																			"src": "24595:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:1",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3421,
																		"src": "24595:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1244,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:1"
													},
													{
														"expression": {
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1245,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "24646:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 1246,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24656:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1248,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:1"
													},
													{
														"expression": {
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1249,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24673:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1250,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "24683:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:1"
													},
													{
														"expression": {
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "24701:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1256,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "24727:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1254,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "24711:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "24711:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1261,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:1"
													}
												]
											},
											{
												"expression": {
													"id": 1263,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1079,
													"src": "24764:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1264,
												"nodeType": "Return",
												"src": "24757:13:1"
											}
										]
									},
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "23749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:1"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "23787:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:1"
									},
									"scope": 1657,
									"src": "23735:1042:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "25010:175:1",
										"statements": [
											{
												"id": 1298,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:1",
												"statements": [
													{
														"assignments": [
															1278
														],
														"declarations": [
															{
																"constant": false,
																"id": 1278,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1298,
																"src": "25044:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1282,
														"initialValue": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "25066:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1279,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1266,
																	1300
																],
																"referencedDeclaration": 1266,
																"src": "25061:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "25093:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1287,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1272,
																					"src": "25135:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1286,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "25118:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$63_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1289,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1290,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1278,
																					"src": "25153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1292,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1269,
																				"src": "25162:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1284,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "25102:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "25102:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1276,
														"id": 1297,
														"nodeType": "Return",
														"src": "25086:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "24944:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "24959:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "24959:8:1"
													},
													"referencedDeclaration": 63,
													"src": "24959:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:1"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "25001:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:1"
									},
									"scope": 1657,
									"src": "24930:255:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "25378:854:1",
										"statements": [
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "25388:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1311,
												"initialValue": {
													"hexValue": "30",
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:1"
											},
											{
												"id": 1425,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1312,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "25444:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1328,
														"nodeType": "IfStatement",
														"src": "25440:103:1",
														"trueBody": {
															"id": 1327,
															"nodeType": "Block",
															"src": "25463:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25481:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:1"
																},
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "25516:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "25560:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1345,
														"nodeType": "IfStatement",
														"src": "25556:103:1",
														"trueBody": {
															"id": 1344,
															"nodeType": "Block",
															"src": "25579:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25597:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:1"
																},
																{
																	"expression": {
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1340,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "25632:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1343,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "25676:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1362,
														"nodeType": "IfStatement",
														"src": "25672:103:1",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "25695:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25713:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:1"
																},
																{
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "25748:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1363,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "25792:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1379,
														"nodeType": "IfStatement",
														"src": "25788:100:1",
														"trueBody": {
															"id": 1378,
															"nodeType": "Block",
															"src": "25810:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1368,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25828:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:1"
																},
																{
																	"expression": {
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1374,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "25862:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1377,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "25905:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1396,
														"nodeType": "IfStatement",
														"src": "25901:100:1",
														"trueBody": {
															"id": 1395,
															"nodeType": "Block",
															"src": "25923:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1385,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "25941:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:1"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "25975:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1397,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "26018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1413,
														"nodeType": "IfStatement",
														"src": "26014:100:1",
														"trueBody": {
															"id": 1412,
															"nodeType": "Block",
															"src": "26036:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "26054:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1407,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:1"
																},
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "26088:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "26131:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1424,
														"nodeType": "IfStatement",
														"src": "26127:66:1",
														"trueBody": {
															"id": 1423,
															"nodeType": "Block",
															"src": "26149:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1419,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "26167:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1422,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1426,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1309,
													"src": "26219:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1307,
												"id": 1427,
												"nodeType": "Return",
												"src": "26212:13:1"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25331:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:1"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25369:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:1"
									},
									"scope": 1657,
									"src": "25316:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "26467:177:1",
										"statements": [
											{
												"id": 1461,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:1",
												"statements": [
													{
														"assignments": [
															1441
														],
														"declarations": [
															{
																"constant": false,
																"id": 1441,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1461,
																"src": "26501:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1445,
														"initialValue": {
															"arguments": [
																{
																	"id": 1443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "26524:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1442,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1429,
																	1463
																],
																"referencedDeclaration": 1429,
																"src": "26518:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "26551:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1450,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "26593:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1449,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "26576:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$63_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 1453,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1441,
																					"src": "26612:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1455,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "26621:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1447,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "26560:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "26560:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1460,
														"nodeType": "Return",
														"src": "26544:83:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "26401:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "26416:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1433,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "26416:8:1"
													},
													"referencedDeclaration": 63,
													"src": "26416:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:1"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "26458:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:1"
									},
									"scope": 1657,
									"src": "26386:258:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "26964:674:1",
										"statements": [
											{
												"assignments": [
													1472
												],
												"declarations": [
													{
														"constant": false,
														"id": 1472,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "26974:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"hexValue": "30",
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:1"
											},
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 1599,
														"src": "27002:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:1"
											},
											{
												"id": 1596,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:1",
												"statements": [
													{
														"expression": {
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1478,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "27048:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "27071:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 1487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 1484,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1482,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 1483,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 1485,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1479,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27055:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27055:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1491,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:1"
													},
													{
														"expression": {
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "27108:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1493,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27118:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1497,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:1"
													},
													{
														"expression": {
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1498,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "27142:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1499,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27152:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1503,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:1"
													},
													{
														"expression": {
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1504,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "27176:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "27199:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 1510,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1508,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 1509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 1511,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1505,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27183:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27183:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1517,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:1"
													},
													{
														"expression": {
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "27235:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1519,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27245:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1523,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:1"
													},
													{
														"expression": {
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1524,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "27268:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1525,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27278:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1529,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:1"
													},
													{
														"expression": {
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1530,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "27301:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "27324:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 1536,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1534,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 1535,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 1537,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1531,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27308:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27308:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1543,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:1"
													},
													{
														"expression": {
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "27360:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1545,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27370:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1549,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:1"
													},
													{
														"expression": {
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1550,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "27393:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1551,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27403:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1555,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:1"
													},
													{
														"expression": {
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1556,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "27426:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1559,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "27449:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 1562,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1560,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 1561,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 1563,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1557,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27433:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27433:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1569,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:1"
													},
													{
														"expression": {
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "27485:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1571,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27495:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1575,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:1"
													},
													{
														"expression": {
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1576,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "27518:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1577,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "27528:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1581,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:1"
													},
													{
														"expression": {
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "27551:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "27577:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 1588,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1586,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 1587,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 1589,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1583,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27561:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27561:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1595,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:1"
													}
												]
											},
											{
												"expression": {
													"id": 1597,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1472,
													"src": "27625:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1598,
												"nodeType": "Return",
												"src": "27618:13:1"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "26917:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:1"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "26955:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:1"
									},
									"scope": 1657,
									"src": "26901:737:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "27875:184:1",
										"statements": [
											{
												"id": 1635,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:1",
												"statements": [
													{
														"assignments": [
															1612
														],
														"declarations": [
															{
																"constant": false,
																"id": 1612,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1635,
																"src": "27909:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1616,
														"initialValue": {
															"arguments": [
																{
																	"id": 1614,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "27933:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1613,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1600,
																	1637
																],
																"referencedDeclaration": 1600,
																"src": "27926:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1617,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "27960:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1621,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1606,
																					"src": "28002:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$63",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1620,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1656,
																				"src": "27985:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$63_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1623,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1626,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1624,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1612,
																								"src": "28021:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 1625,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1627,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1629,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1603,
																				"src": "28036:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1618,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "27969:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$3422_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:1",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3421,
																	"src": "27969:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1610,
														"id": 1634,
														"nodeType": "Return",
														"src": "27953:89:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "27809:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "27824:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1605,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1604,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "27824:8:1"
													},
													"referencedDeclaration": 63,
													"src": "27824:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:1"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "27866:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:1"
									},
									"scope": 1657,
									"src": "27793:266:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "28257:48:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "28280:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$63",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$63",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1646,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1654,
												"nodeType": "Return",
												"src": "28267:31:1"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "28209:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$63",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1639,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 63,
														"src": "28209:8:1"
													},
													"referencedDeclaration": 63,
													"src": "28209:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$63",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:1"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "28251:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:1"
									},
									"scope": 1657,
									"src": "28183:122:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1658,
							"src": "281:28026:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3422
						]
					},
					"id": 3423,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1660,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:2",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 3422,
							"linearizedBaseContracts": [
								3422
							],
							"name": "SafeCast",
							"nameLocation": "777:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:2",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 1667,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "902:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1667,
												"src": "914:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:2"
									},
									"src": "865:64:2"
								},
								{
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:2",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 1672,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "1049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1669,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:2"
									},
									"src": "1015:48:2"
								},
								{
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:2",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 1679,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1177:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1674,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "1189:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1676,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:2"
									},
									"src": "1141:62:2"
								},
								{
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:2",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 1684,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1323:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:2"
									},
									"src": "1289:49:2"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "1695:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1692,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "1709:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 1694,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 1693,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1705,
												"nodeType": "IfStatement",
												"src": "1705:105:2",
												"trueBody": {
													"id": 1704,
													"nodeType": "Block",
													"src": "1736:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 1701,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "1793:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1699,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "1757:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1703,
															"nodeType": "RevertStatement",
															"src": "1750:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "1834:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 1706,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 1691,
												"id": 1710,
												"nodeType": "Return",
												"src": "1819:21:2"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:2",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:2"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1686:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 1689,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:2"
									},
									"scope": 3422,
									"src": "1629:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2204:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1720,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "2218:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 1722,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 1721,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "2214:105:2",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "2245:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 1729,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "2302:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1727,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "2266:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1731,
															"nodeType": "RevertStatement",
															"src": "2259:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1736,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "2343:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 1734,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1738,
												"nodeType": "Return",
												"src": "2328:21:2"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:2",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2157:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:2"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2195:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 1717,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:2"
									},
									"scope": 3422,
									"src": "2138:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "2713:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1748,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "2727:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 1750,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 1749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1761,
												"nodeType": "IfStatement",
												"src": "2723:105:2",
												"trueBody": {
													"id": 1760,
													"nodeType": "Block",
													"src": "2754:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 1757,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "2811:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1755,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "2775:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1759,
															"nodeType": "RevertStatement",
															"src": "2768:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1764,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "2852:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 1762,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 1747,
												"id": 1766,
												"nodeType": "Return",
												"src": "2837:21:2"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:2",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2666:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:2"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "2704:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 1745,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:2"
									},
									"scope": 3422,
									"src": "2647:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "3222:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1776,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1771,
														"src": "3236:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 1778,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 1777,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1789,
												"nodeType": "IfStatement",
												"src": "3232:105:2",
												"trueBody": {
													"id": 1788,
													"nodeType": "Block",
													"src": "3263:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 1785,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1771,
																		"src": "3320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1783,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "3284:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1787,
															"nodeType": "RevertStatement",
															"src": "3277:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1792,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1771,
															"src": "3361:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 1790,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1794,
												"nodeType": "Return",
												"src": "3346:21:2"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:2",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "3175:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:2"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1796,
												"src": "3213:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 1773,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:2"
									},
									"scope": 3422,
									"src": "3156:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "3731:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "3745:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 1806,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 1805,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "3741:105:2",
												"trueBody": {
													"id": 1816,
													"nodeType": "Block",
													"src": "3772:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 1813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "3829:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1811,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "3793:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1815,
															"nodeType": "RevertStatement",
															"src": "3786:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "3870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 1818,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1822,
												"nodeType": "Return",
												"src": "3855:21:2"
											}
										]
									},
									"documentation": {
										"id": 1797,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:2",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:2"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "3722:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 1801,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:2"
									},
									"scope": 3422,
									"src": "3665:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "4240:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1832,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "4254:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 1834,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 1833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"nodeType": "IfStatement",
												"src": "4250:105:2",
												"trueBody": {
													"id": 1844,
													"nodeType": "Block",
													"src": "4281:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 1841,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "4338:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1839,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4302:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1843,
															"nodeType": "RevertStatement",
															"src": "4295:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1827,
															"src": "4379:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 1846,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1850,
												"nodeType": "Return",
												"src": "4364:21:2"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:2",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4193:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:2"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4231:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 1829,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:2"
									},
									"scope": 3422,
									"src": "4174:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "4749:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1860,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "4763:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 1862,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 1861,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1873,
												"nodeType": "IfStatement",
												"src": "4759:105:2",
												"trueBody": {
													"id": 1872,
													"nodeType": "Block",
													"src": "4790:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 1868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 1869,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "4847:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1867,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4811:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1871,
															"nodeType": "RevertStatement",
															"src": "4804:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1876,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "4888:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 1874,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1878,
												"nodeType": "Return",
												"src": "4873:21:2"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:2",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4702:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:2"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4740:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 1857,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:2"
									},
									"scope": 3422,
									"src": "4683:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "5258:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "5272:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 1890,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 1889,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1901,
												"nodeType": "IfStatement",
												"src": "5268:105:2",
												"trueBody": {
													"id": 1900,
													"nodeType": "Block",
													"src": "5299:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 1897,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "5356:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1895,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "5320:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1899,
															"nodeType": "RevertStatement",
															"src": "5313:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "5397:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 1902,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 1887,
												"id": 1906,
												"nodeType": "Return",
												"src": "5382:21:2"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:2",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5211:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:2"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5249:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 1885,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:2"
									},
									"scope": 3422,
									"src": "5192:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "5767:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1916,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "5781:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 1918,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 1917,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1929,
												"nodeType": "IfStatement",
												"src": "5777:105:2",
												"trueBody": {
													"id": 1928,
													"nodeType": "Block",
													"src": "5808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 1925,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "5865:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1923,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "5829:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1927,
															"nodeType": "RevertStatement",
															"src": "5822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "5906:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 1930,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1934,
												"nodeType": "Return",
												"src": "5891:21:2"
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:2",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "5720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:2"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "5758:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 1913,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:2"
									},
									"scope": 3422,
									"src": "5701:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "6276:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1944,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "6290:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 1946,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 1945,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1957,
												"nodeType": "IfStatement",
												"src": "6286:105:2",
												"trueBody": {
													"id": 1956,
													"nodeType": "Block",
													"src": "6317:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 1953,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "6374:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1951,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "6338:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1955,
															"nodeType": "RevertStatement",
															"src": "6331:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1960,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "6415:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 1958,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1962,
												"nodeType": "Return",
												"src": "6400:21:2"
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:2",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6229:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:2"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6267:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 1941,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:2"
									},
									"scope": 3422,
									"src": "6210:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "6785:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1972,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "6799:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 1974,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 1973,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1985,
												"nodeType": "IfStatement",
												"src": "6795:105:2",
												"trueBody": {
													"id": 1984,
													"nodeType": "Block",
													"src": "6826:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 1981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "6883:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1979,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "6847:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1983,
															"nodeType": "RevertStatement",
															"src": "6840:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "6924:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 1986,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 1971,
												"id": 1990,
												"nodeType": "Return",
												"src": "6909:21:2"
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:2",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "6738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:2"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "6776:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 1969,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:2"
									},
									"scope": 3422,
									"src": "6719:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "7294:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2000,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1995,
														"src": "7308:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2002,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2001,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "7304:105:2",
												"trueBody": {
													"id": 2012,
													"nodeType": "Block",
													"src": "7335:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "7392:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2007,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "7356:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2011,
															"nodeType": "RevertStatement",
															"src": "7349:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "7433:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2014,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1999,
												"id": 2018,
												"nodeType": "Return",
												"src": "7418:21:2"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:2",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "7247:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:2"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "7285:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1997,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:2"
									},
									"scope": 3422,
									"src": "7228:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "7803:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2028,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2023,
														"src": "7817:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2030,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2029,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "7813:105:2",
												"trueBody": {
													"id": 2040,
													"nodeType": "Block",
													"src": "7844:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2037,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "7901:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2035,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "7865:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2039,
															"nodeType": "RevertStatement",
															"src": "7858:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2044,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "7942:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2042,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2027,
												"id": 2046,
												"nodeType": "Return",
												"src": "7927:21:2"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:2",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "7756:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:2"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "7794:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2025,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:2"
									},
									"scope": 3422,
									"src": "7737:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "8312:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2056,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "8326:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2058,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2057,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"nodeType": "IfStatement",
												"src": "8322:105:2",
												"trueBody": {
													"id": 2068,
													"nodeType": "Block",
													"src": "8353:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "8410:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2063,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "8374:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2067,
															"nodeType": "RevertStatement",
															"src": "8367:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "8451:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2070,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2055,
												"id": 2074,
												"nodeType": "Return",
												"src": "8436:21:2"
											}
										]
									},
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:2",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "8265:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:2"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "8303:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2053,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:2"
									},
									"scope": 3422,
									"src": "8246:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "8821:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "8835:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2086,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2085,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2097,
												"nodeType": "IfStatement",
												"src": "8831:105:2",
												"trueBody": {
													"id": 2096,
													"nodeType": "Block",
													"src": "8862:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2093,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2079,
																		"src": "8919:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2091,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "8883:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2095,
															"nodeType": "RevertStatement",
															"src": "8876:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "8960:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2098,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2083,
												"id": 2102,
												"nodeType": "Return",
												"src": "8945:21:2"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:2",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "8774:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:2"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "8812:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2081,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:2"
									},
									"scope": 3422,
									"src": "8755:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "9330:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2112,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "9344:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2114,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2113,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2125,
												"nodeType": "IfStatement",
												"src": "9340:105:2",
												"trueBody": {
													"id": 2124,
													"nodeType": "Block",
													"src": "9371:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2121,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "9428:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2119,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "9392:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2123,
															"nodeType": "RevertStatement",
															"src": "9385:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "9469:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2126,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2111,
												"id": 2130,
												"nodeType": "Return",
												"src": "9454:21:2"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:2",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "9283:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:2"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "9321:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:2"
									},
									"scope": 3422,
									"src": "9264:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "9839:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2140,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "9853:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2142,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2141,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2153,
												"nodeType": "IfStatement",
												"src": "9849:105:2",
												"trueBody": {
													"id": 2152,
													"nodeType": "Block",
													"src": "9880:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2149,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "9937:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2147,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "9901:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2151,
															"nodeType": "RevertStatement",
															"src": "9894:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2156,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "9978:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2154,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2139,
												"id": 2158,
												"nodeType": "Return",
												"src": "9963:21:2"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:2",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "9792:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:2"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "9830:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2137,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:2"
									},
									"scope": 3422,
									"src": "9773:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "10348:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2168,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "10362:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2170,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2169,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2181,
												"nodeType": "IfStatement",
												"src": "10358:105:2",
												"trueBody": {
													"id": 2180,
													"nodeType": "Block",
													"src": "10389:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2177,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "10446:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2175,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "10410:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2179,
															"nodeType": "RevertStatement",
															"src": "10403:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2184,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "10487:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2182,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2167,
												"id": 2186,
												"nodeType": "Return",
												"src": "10472:21:2"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:2",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "10301:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:2"
									},
									"returnParameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "10339:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2165,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:2"
									},
									"scope": 3422,
									"src": "10282:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2215,
										"nodeType": "Block",
										"src": "10857:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2196,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "10871:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2198,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2197,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2209,
												"nodeType": "IfStatement",
												"src": "10867:105:2",
												"trueBody": {
													"id": 2208,
													"nodeType": "Block",
													"src": "10898:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2191,
																		"src": "10955:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2203,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "10919:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2207,
															"nodeType": "RevertStatement",
															"src": "10912:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2212,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "10996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2210,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2195,
												"id": 2214,
												"nodeType": "Return",
												"src": "10981:21:2"
											}
										]
									},
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:2",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "10810:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:2"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "10848:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2193,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:2"
									},
									"scope": 3422,
									"src": "10791:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "11360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2224,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "11374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2226,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2225,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2237,
												"nodeType": "IfStatement",
												"src": "11370:103:2",
												"trueBody": {
													"id": 2236,
													"nodeType": "Block",
													"src": "11400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2233,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "11456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2231,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "11421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2235,
															"nodeType": "RevertStatement",
															"src": "11414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2240,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2219,
															"src": "11496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2238,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2242,
												"nodeType": "Return",
												"src": "11482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:2",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "11314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:2"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "11352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2221,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:2"
									},
									"scope": 3422,
									"src": "11296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2271,
										"nodeType": "Block",
										"src": "11860:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2252,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2247,
														"src": "11874:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2254,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2253,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"nodeType": "IfStatement",
												"src": "11870:103:2",
												"trueBody": {
													"id": 2264,
													"nodeType": "Block",
													"src": "11900:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2261,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2247,
																		"src": "11956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2259,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "11921:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2263,
															"nodeType": "RevertStatement",
															"src": "11914:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2268,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "11996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2266,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2251,
												"id": 2270,
												"nodeType": "Return",
												"src": "11982:20:2"
											}
										]
									},
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:2",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "11814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:2"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2272,
												"src": "11852:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2249,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:2"
									},
									"scope": 3422,
									"src": "11796:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "12360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2280,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "12374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 2282,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 2281,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2293,
												"nodeType": "IfStatement",
												"src": "12370:103:2",
												"trueBody": {
													"id": 2292,
													"nodeType": "Block",
													"src": "12400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2289,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2275,
																		"src": "12456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2287,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "12421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2291,
															"nodeType": "RevertStatement",
															"src": "12414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2275,
															"src": "12496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 2294,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 2279,
												"id": 2298,
												"nodeType": "Return",
												"src": "12482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:2",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "12314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:2"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "12352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2277,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:2"
									},
									"scope": 3422,
									"src": "12296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2327,
										"nodeType": "Block",
										"src": "12860:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "12874:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 2310,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 2309,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 2313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2321,
												"nodeType": "IfStatement",
												"src": "12870:103:2",
												"trueBody": {
													"id": 2320,
													"nodeType": "Block",
													"src": "12900:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2317,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2303,
																		"src": "12956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2315,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "12921:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2319,
															"nodeType": "RevertStatement",
															"src": "12914:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2324,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2303,
															"src": "12996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 2322,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 2307,
												"id": 2326,
												"nodeType": "Return",
												"src": "12982:20:2"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:2",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "12814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:2"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "12852:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 2305,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:2"
									},
									"scope": 3422,
									"src": "12796:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2355,
										"nodeType": "Block",
										"src": "13360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2336,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2331,
														"src": "13374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2338,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 2337,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 2341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "13370:103:2",
												"trueBody": {
													"id": 2348,
													"nodeType": "Block",
													"src": "13400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2345,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2331,
																		"src": "13456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2343,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2347,
															"nodeType": "RevertStatement",
															"src": "13414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2352,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "13496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2350,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2335,
												"id": 2354,
												"nodeType": "Return",
												"src": "13482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2329,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:2",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "13314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:2"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "13352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2333,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:2"
									},
									"scope": 3422,
									"src": "13296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "13860:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2364,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "13874:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 2366,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 2365,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2377,
												"nodeType": "IfStatement",
												"src": "13870:103:2",
												"trueBody": {
													"id": 2376,
													"nodeType": "Block",
													"src": "13900:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2373,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "13956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2371,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13921:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2375,
															"nodeType": "RevertStatement",
															"src": "13914:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2380,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "13996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 2378,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 2363,
												"id": 2382,
												"nodeType": "Return",
												"src": "13982:20:2"
											}
										]
									},
									"documentation": {
										"id": 2357,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:2",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "13814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:2"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "13852:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 2361,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:2"
									},
									"scope": 3422,
									"src": "13796:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "14360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2392,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2387,
														"src": "14374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 2394,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 2393,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 2397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2405,
												"nodeType": "IfStatement",
												"src": "14370:103:2",
												"trueBody": {
													"id": 2404,
													"nodeType": "Block",
													"src": "14400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2401,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2387,
																		"src": "14456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2399,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "14421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2403,
															"nodeType": "RevertStatement",
															"src": "14414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2408,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "14496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 2406,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2391,
												"id": 2410,
												"nodeType": "Return",
												"src": "14482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:2",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "14314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:2"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "14352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2389,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:2"
									},
									"scope": 3422,
									"src": "14296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "14860:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2420,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "14874:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 2422,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 2421,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2433,
												"nodeType": "IfStatement",
												"src": "14870:103:2",
												"trueBody": {
													"id": 2432,
													"nodeType": "Block",
													"src": "14900:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2429,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "14956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2427,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "14921:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2431,
															"nodeType": "RevertStatement",
															"src": "14914:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2436,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "14996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 2434,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 2419,
												"id": 2438,
												"nodeType": "Return",
												"src": "14982:20:2"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:2",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "14814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:2"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "14852:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2417,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:2"
									},
									"scope": 3422,
									"src": "14796:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "15360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2448,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "15374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2450,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 2449,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 2453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2461,
												"nodeType": "IfStatement",
												"src": "15370:103:2",
												"trueBody": {
													"id": 2460,
													"nodeType": "Block",
													"src": "15400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2457,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "15456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2455,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "15421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2459,
															"nodeType": "RevertStatement",
															"src": "15414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "15496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2462,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2447,
												"id": 2466,
												"nodeType": "Return",
												"src": "15482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:2",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "15314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:2"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "15352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2445,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:2"
									},
									"scope": 3422,
									"src": "15296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2495,
										"nodeType": "Block",
										"src": "15860:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2476,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "15874:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 2478,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 2477,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2489,
												"nodeType": "IfStatement",
												"src": "15870:103:2",
												"trueBody": {
													"id": 2488,
													"nodeType": "Block",
													"src": "15900:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "15956:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2483,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "15921:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2487,
															"nodeType": "RevertStatement",
															"src": "15914:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2492,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "15996:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2490,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 2475,
												"id": 2494,
												"nodeType": "Return",
												"src": "15982:20:2"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:2",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "15814:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:2"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "15852:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2473,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:2"
									},
									"scope": 3422,
									"src": "15796:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2523,
										"nodeType": "Block",
										"src": "16360:149:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2504,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "16374:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 2506,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 2505,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 2509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2517,
												"nodeType": "IfStatement",
												"src": "16370:103:2",
												"trueBody": {
													"id": 2516,
													"nodeType": "Block",
													"src": "16400:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2513,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2499,
																		"src": "16456:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2511,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "16421:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2515,
															"nodeType": "RevertStatement",
															"src": "16414:48:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "16496:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 2518,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 2521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2503,
												"id": 2522,
												"nodeType": "Return",
												"src": "16482:20:2"
											}
										]
									},
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:2",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "16314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:2"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "16352:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2501,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:2"
									},
									"scope": 3422,
									"src": "16296:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2551,
										"nodeType": "Block",
										"src": "16854:146:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2532,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2527,
														"src": "16868:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 2534,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 2533,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 2537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2545,
												"nodeType": "IfStatement",
												"src": "16864:101:2",
												"trueBody": {
													"id": 2544,
													"nodeType": "Block",
													"src": "16893:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2541,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2527,
																		"src": "16948:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2539,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "16914:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2543,
															"nodeType": "RevertStatement",
															"src": "16907:47:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2548,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "16987:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2546,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:2",
															"typeDescriptions": {}
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2531,
												"id": 2550,
												"nodeType": "Return",
												"src": "16974:19:2"
											}
										]
									},
									"documentation": {
										"id": 2525,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:2",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "16809:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:2"
									},
									"returnParameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2552,
												"src": "16847:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2529,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:2"
									},
									"scope": 3422,
									"src": "16792:208:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "17236:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2560,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "17250:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "IfStatement",
												"src": "17246:81:2",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "17261:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2555,
																		"src": "17310:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2563,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "17282:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2566,
															"nodeType": "RevertStatement",
															"src": "17275:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "17351:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2559,
												"id": 2573,
												"nodeType": "Return",
												"src": "17336:21:2"
											}
										]
									},
									"documentation": {
										"id": 2553,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:2",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "17190:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2554,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:2"
									},
									"returnParameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "17227:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:2"
									},
									"scope": 3422,
									"src": "17171:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "17761:150:2",
										"statements": [
											{
												"expression": {
													"id": 2588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2583,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "17771:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2586,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2578,
																"src": "17791:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 2584,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 2589,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2590,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2581,
														"src": "17811:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2591,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2578,
														"src": "17825:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2599,
												"nodeType": "IfStatement",
												"src": "17807:98:2",
												"trueBody": {
													"id": 2598,
													"nodeType": "Block",
													"src": "17832:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2595,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2578,
																		"src": "17888:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2593,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "17853:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2597,
															"nodeType": "RevertStatement",
															"src": "17846:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:2",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "17705:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2577,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:2"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "17742:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 2580,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:2"
									},
									"scope": 3422,
									"src": "17687:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "18308:150:2",
										"statements": [
											{
												"expression": {
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2609,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "18318:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2604,
																"src": "18338:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 2610,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2616,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "18358:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2617,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2604,
														"src": "18372:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2625,
												"nodeType": "IfStatement",
												"src": "18354:98:2",
												"trueBody": {
													"id": 2624,
													"nodeType": "Block",
													"src": "18379:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2604,
																		"src": "18435:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2619,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "18400:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2623,
															"nodeType": "RevertStatement",
															"src": "18393:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2602,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:2",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "18252:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2603,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:2"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "18289:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 2606,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:2"
									},
									"scope": 3422,
									"src": "18234:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2652,
										"nodeType": "Block",
										"src": "18855:150:2",
										"statements": [
											{
												"expression": {
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2635,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2633,
														"src": "18865:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2638,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2630,
																"src": "18885:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 2636,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2633,
														"src": "18905:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2643,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2630,
														"src": "18919:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2651,
												"nodeType": "IfStatement",
												"src": "18901:98:2",
												"trueBody": {
													"id": 2650,
													"nodeType": "Block",
													"src": "18926:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2647,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2630,
																		"src": "18982:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2645,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "18947:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2649,
															"nodeType": "RevertStatement",
															"src": "18940:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2628,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:2",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "18799:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2629,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:2"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2653,
												"src": "18836:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 2632,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:2"
									},
									"scope": 3422,
									"src": "18781:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2678,
										"nodeType": "Block",
										"src": "19402:150:2",
										"statements": [
											{
												"expression": {
													"id": 2666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2661,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "19412:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2664,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2656,
																"src": "19432:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 2662,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 2667,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2668,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "19452:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2669,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "19466:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2677,
												"nodeType": "IfStatement",
												"src": "19448:98:2",
												"trueBody": {
													"id": 2676,
													"nodeType": "Block",
													"src": "19473:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2673,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2656,
																		"src": "19529:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2671,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "19494:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2675,
															"nodeType": "RevertStatement",
															"src": "19487:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2654,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:2",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "19346:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2655,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:2"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2679,
												"src": "19383:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 2658,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:2"
									},
									"scope": 3422,
									"src": "19328:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2704,
										"nodeType": "Block",
										"src": "19949:150:2",
										"statements": [
											{
												"expression": {
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2687,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "19959:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2690,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "19979:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 2688,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 2693,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2694,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "19999:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2695,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2682,
														"src": "20013:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2703,
												"nodeType": "IfStatement",
												"src": "19995:98:2",
												"trueBody": {
													"id": 2702,
													"nodeType": "Block",
													"src": "20020:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2699,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2682,
																		"src": "20076:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2697,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "20041:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2701,
															"nodeType": "RevertStatement",
															"src": "20034:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2680,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:2",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "19893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2681,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:2"
									},
									"returnParameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2705,
												"src": "19930:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 2684,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:2"
									},
									"scope": 3422,
									"src": "19875:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "20496:150:2",
										"statements": [
											{
												"expression": {
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2713,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2711,
														"src": "20506:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2716,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "20526:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 2714,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 2719,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2720,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2711,
														"src": "20546:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2721,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "20560:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2729,
												"nodeType": "IfStatement",
												"src": "20542:98:2",
												"trueBody": {
													"id": 2728,
													"nodeType": "Block",
													"src": "20567:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2725,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2708,
																		"src": "20623:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2723,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "20588:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2727,
															"nodeType": "RevertStatement",
															"src": "20581:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:2",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "20440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2707,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:2"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "20477:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 2710,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:2"
									},
									"scope": 3422,
									"src": "20422:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2756,
										"nodeType": "Block",
										"src": "21043:150:2",
										"statements": [
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2739,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "21053:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2742,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2734,
																"src": "21073:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 2740,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2746,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2737,
														"src": "21093:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2747,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "21107:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2755,
												"nodeType": "IfStatement",
												"src": "21089:98:2",
												"trueBody": {
													"id": 2754,
													"nodeType": "Block",
													"src": "21114:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2751,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2734,
																		"src": "21170:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2749,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "21135:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2753,
															"nodeType": "RevertStatement",
															"src": "21128:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2732,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:2",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "20987:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2733,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:2"
									},
									"returnParameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "21024:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 2736,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:2"
									},
									"scope": 3422,
									"src": "20969:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "21590:150:2",
										"statements": [
											{
												"expression": {
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2765,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "21600:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2768,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2760,
																"src": "21620:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 2766,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 2771,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2772,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2763,
														"src": "21640:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2773,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2760,
														"src": "21654:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2781,
												"nodeType": "IfStatement",
												"src": "21636:98:2",
												"trueBody": {
													"id": 2780,
													"nodeType": "Block",
													"src": "21661:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2777,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2760,
																		"src": "21717:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2775,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "21682:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2779,
															"nodeType": "RevertStatement",
															"src": "21675:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2758,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:2",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "21534:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2759,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:2"
									},
									"returnParameters": {
										"id": 2764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "21571:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 2762,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:2"
									},
									"scope": 3422,
									"src": "21516:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "22137:150:2",
										"statements": [
											{
												"expression": {
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2791,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "22147:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2794,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2786,
																"src": "22167:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 2792,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 2797,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2798,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "22187:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2799,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2786,
														"src": "22201:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2807,
												"nodeType": "IfStatement",
												"src": "22183:98:2",
												"trueBody": {
													"id": 2806,
													"nodeType": "Block",
													"src": "22208:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2803,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2786,
																		"src": "22264:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2801,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "22229:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2805,
															"nodeType": "RevertStatement",
															"src": "22222:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:2",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "22081:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2785,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:2"
									},
									"returnParameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "22118:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 2788,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:2"
									},
									"scope": 3422,
									"src": "22063:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "22684:150:2",
										"statements": [
											{
												"expression": {
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2817,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2815,
														"src": "22694:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2820,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2812,
																"src": "22714:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 2818,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 2823,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2824,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2815,
														"src": "22734:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2825,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2812,
														"src": "22748:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2833,
												"nodeType": "IfStatement",
												"src": "22730:98:2",
												"trueBody": {
													"id": 2832,
													"nodeType": "Block",
													"src": "22755:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2829,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "22811:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2827,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "22776:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2831,
															"nodeType": "RevertStatement",
															"src": "22769:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:2",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "22628:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2811,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:2"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "22665:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 2814,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:2"
									},
									"scope": 3422,
									"src": "22610:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "23231:150:2",
										"statements": [
											{
												"expression": {
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2843,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "23241:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2846,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "23261:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 2844,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 2849,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2850,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2841,
														"src": "23281:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2851,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "23295:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2859,
												"nodeType": "IfStatement",
												"src": "23277:98:2",
												"trueBody": {
													"id": 2858,
													"nodeType": "Block",
													"src": "23302:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2855,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2838,
																		"src": "23358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2853,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "23323:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2857,
															"nodeType": "RevertStatement",
															"src": "23316:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:2",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "23175:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2837,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:2"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "23212:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 2840,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:2"
									},
									"scope": 3422,
									"src": "23157:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2886,
										"nodeType": "Block",
										"src": "23778:150:2",
										"statements": [
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2869,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "23788:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2872,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2864,
																"src": "23808:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 2870,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2876,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "23828:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2877,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "23842:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2885,
												"nodeType": "IfStatement",
												"src": "23824:98:2",
												"trueBody": {
													"id": 2884,
													"nodeType": "Block",
													"src": "23849:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2881,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2864,
																		"src": "23905:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2879,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "23870:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2883,
															"nodeType": "RevertStatement",
															"src": "23863:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2862,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:2",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "23722:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2863,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:2"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "23759:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 2866,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:2"
									},
									"scope": 3422,
									"src": "23704:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2912,
										"nodeType": "Block",
										"src": "24325:150:2",
										"statements": [
											{
												"expression": {
													"id": 2900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2895,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "24335:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2898,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "24355:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 2896,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 2901,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2902,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "24375:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2903,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "24389:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2911,
												"nodeType": "IfStatement",
												"src": "24371:98:2",
												"trueBody": {
													"id": 2910,
													"nodeType": "Block",
													"src": "24396:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2907,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2890,
																		"src": "24452:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2905,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "24417:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2909,
															"nodeType": "RevertStatement",
															"src": "24410:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2888,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:2",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "24269:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2889,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:2"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2913,
												"src": "24306:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 2892,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:2"
									},
									"scope": 3422,
									"src": "24251:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "24872:150:2",
										"statements": [
											{
												"expression": {
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2921,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "24882:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2924,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2916,
																"src": "24902:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 2922,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 2927,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2928,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "24922:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2929,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "24936:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2937,
												"nodeType": "IfStatement",
												"src": "24918:98:2",
												"trueBody": {
													"id": 2936,
													"nodeType": "Block",
													"src": "24943:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2933,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2916,
																		"src": "24999:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2931,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "24964:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2935,
															"nodeType": "RevertStatement",
															"src": "24957:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2914,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:2",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "24816:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:2"
									},
									"returnParameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2919,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "24853:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 2918,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:2"
									},
									"scope": 3422,
									"src": "24798:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "25419:150:2",
										"statements": [
											{
												"expression": {
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2947,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2945,
														"src": "25429:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2950,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2942,
																"src": "25449:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 2948,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2954,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2945,
														"src": "25469:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2955,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "25483:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2963,
												"nodeType": "IfStatement",
												"src": "25465:98:2",
												"trueBody": {
													"id": 2962,
													"nodeType": "Block",
													"src": "25490:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2959,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "25546:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2957,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "25511:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2961,
															"nodeType": "RevertStatement",
															"src": "25504:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:2",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "25363:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2941,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:2"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "25400:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 2944,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:2"
									},
									"scope": 3422,
									"src": "25345:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2990,
										"nodeType": "Block",
										"src": "25966:150:2",
										"statements": [
											{
												"expression": {
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2973,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "25976:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2976,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2968,
																"src": "25996:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 2974,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 2977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2980,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "26016:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2981,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "26030:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2989,
												"nodeType": "IfStatement",
												"src": "26012:98:2",
												"trueBody": {
													"id": 2988,
													"nodeType": "Block",
													"src": "26037:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2985,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2968,
																		"src": "26093:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2983,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "26058:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2987,
															"nodeType": "RevertStatement",
															"src": "26051:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:2",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "25910:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2967,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:2"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2991,
												"src": "25947:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2970,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:2"
									},
									"scope": 3422,
									"src": "25892:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3016,
										"nodeType": "Block",
										"src": "26513:150:2",
										"statements": [
											{
												"expression": {
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2999,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "26523:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3002,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "26543:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3000,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3005,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3006,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2997,
														"src": "26563:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3007,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2994,
														"src": "26577:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3015,
												"nodeType": "IfStatement",
												"src": "26559:98:2",
												"trueBody": {
													"id": 3014,
													"nodeType": "Block",
													"src": "26584:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3011,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "26640:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3009,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "26605:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3013,
															"nodeType": "RevertStatement",
															"src": "26598:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2992,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:2",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "26457:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2993,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:2"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "26494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 2996,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:2"
									},
									"scope": 3422,
									"src": "26439:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "27060:150:2",
										"statements": [
											{
												"expression": {
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3025,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "27070:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3020,
																"src": "27090:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3026,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3032,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3023,
														"src": "27110:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "27124:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3041,
												"nodeType": "IfStatement",
												"src": "27106:98:2",
												"trueBody": {
													"id": 3040,
													"nodeType": "Block",
													"src": "27131:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3037,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "27187:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3035,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "27152:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3039,
															"nodeType": "RevertStatement",
															"src": "27145:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3018,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:2",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "27004:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3019,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:2"
									},
									"returnParameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "27041:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3022,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:2"
									},
									"scope": 3422,
									"src": "26986:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3068,
										"nodeType": "Block",
										"src": "27607:150:2",
										"statements": [
											{
												"expression": {
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3051,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "27617:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "27637:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3052,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3058,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "27657:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3059,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3046,
														"src": "27671:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3067,
												"nodeType": "IfStatement",
												"src": "27653:98:2",
												"trueBody": {
													"id": 3066,
													"nodeType": "Block",
													"src": "27678:73:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3063,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3046,
																		"src": "27734:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3061,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "27699:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3065,
															"nodeType": "RevertStatement",
															"src": "27692:48:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3044,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:2",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "27551:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3045,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:2"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3069,
												"src": "27588:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3048,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:2"
									},
									"scope": 3422,
									"src": "27533:224:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3094,
										"nodeType": "Block",
										"src": "28147:148:2",
										"statements": [
											{
												"expression": {
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3077,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "28157:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3080,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3072,
																"src": "28176:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3078,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3083,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3084,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "28196:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3085,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3072,
														"src": "28210:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3093,
												"nodeType": "IfStatement",
												"src": "28192:97:2",
												"trueBody": {
													"id": 3092,
													"nodeType": "Block",
													"src": "28217:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3089,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3072,
																		"src": "28272:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3087,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "28238:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3091,
															"nodeType": "RevertStatement",
															"src": "28231:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3070,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:2",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "28092:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3071,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:2"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "28129:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3074,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:2"
									},
									"scope": 3422,
									"src": "28075:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "28685:148:2",
										"statements": [
											{
												"expression": {
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3103,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "28695:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3106,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3098,
																"src": "28714:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3104,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3109,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3110,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3101,
														"src": "28734:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3111,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "28748:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3119,
												"nodeType": "IfStatement",
												"src": "28730:97:2",
												"trueBody": {
													"id": 3118,
													"nodeType": "Block",
													"src": "28755:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3115,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3098,
																		"src": "28810:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3113,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "28776:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3117,
															"nodeType": "RevertStatement",
															"src": "28769:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3096,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:2",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "28630:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3097,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:2"
									},
									"returnParameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "28667:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3100,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:2"
									},
									"scope": 3422,
									"src": "28613:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3146,
										"nodeType": "Block",
										"src": "29223:148:2",
										"statements": [
											{
												"expression": {
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3129,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "29233:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3132,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "29252:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3130,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3136,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "29272:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3137,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "29286:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3145,
												"nodeType": "IfStatement",
												"src": "29268:97:2",
												"trueBody": {
													"id": 3144,
													"nodeType": "Block",
													"src": "29293:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3141,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3124,
																		"src": "29348:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3139,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "29314:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3143,
															"nodeType": "RevertStatement",
															"src": "29307:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:2",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "29168:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3123,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:2"
									},
									"returnParameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "29205:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3126,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:2"
									},
									"scope": 3422,
									"src": "29151:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3172,
										"nodeType": "Block",
										"src": "29761:148:2",
										"statements": [
											{
												"expression": {
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3155,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "29771:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3158,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "29790:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3156,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3161,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3162,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "29810:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3163,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "29824:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3171,
												"nodeType": "IfStatement",
												"src": "29806:97:2",
												"trueBody": {
													"id": 3170,
													"nodeType": "Block",
													"src": "29831:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3167,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3150,
																		"src": "29886:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3165,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "29852:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3169,
															"nodeType": "RevertStatement",
															"src": "29845:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:2",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "29706:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3149,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:2"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "29743:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3152,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:2"
									},
									"scope": 3422,
									"src": "29689:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "30299:148:2",
										"statements": [
											{
												"expression": {
													"id": 3186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3181,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "30309:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3184,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "30328:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3182,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3187,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "30348:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3189,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3176,
														"src": "30362:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3197,
												"nodeType": "IfStatement",
												"src": "30344:97:2",
												"trueBody": {
													"id": 3196,
													"nodeType": "Block",
													"src": "30369:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3193,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3176,
																		"src": "30424:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3191,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "30390:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3195,
															"nodeType": "RevertStatement",
															"src": "30383:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3174,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:2",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "30244:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3175,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:2"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "30281:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3178,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:2"
									},
									"scope": 3422,
									"src": "30227:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3224,
										"nodeType": "Block",
										"src": "30837:148:2",
										"statements": [
											{
												"expression": {
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3207,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "30847:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3210,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3202,
																"src": "30866:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3208,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3213,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "30886:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3215,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3202,
														"src": "30900:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3223,
												"nodeType": "IfStatement",
												"src": "30882:97:2",
												"trueBody": {
													"id": 3222,
													"nodeType": "Block",
													"src": "30907:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3219,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3202,
																		"src": "30962:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3217,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "30928:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3221,
															"nodeType": "RevertStatement",
															"src": "30921:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3200,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:2",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "30782:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3201,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:2"
									},
									"returnParameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3225,
												"src": "30819:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3204,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:2"
									},
									"scope": 3422,
									"src": "30765:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "31375:148:2",
										"statements": [
											{
												"expression": {
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3233,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "31385:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3228,
																"src": "31404:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3234,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3239,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3240,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3231,
														"src": "31424:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3241,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3228,
														"src": "31438:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3249,
												"nodeType": "IfStatement",
												"src": "31420:97:2",
												"trueBody": {
													"id": 3248,
													"nodeType": "Block",
													"src": "31445:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3245,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3228,
																		"src": "31500:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3243,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "31466:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3247,
															"nodeType": "RevertStatement",
															"src": "31459:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3226,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:2",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "31320:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3227,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:2"
									},
									"returnParameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "31357:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3230,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:2"
									},
									"scope": 3422,
									"src": "31303:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3276,
										"nodeType": "Block",
										"src": "31913:148:2",
										"statements": [
											{
												"expression": {
													"id": 3264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3259,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "31923:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3262,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3254,
																"src": "31942:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3260,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3265,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3266,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3257,
														"src": "31962:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3267,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3254,
														"src": "31976:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3275,
												"nodeType": "IfStatement",
												"src": "31958:97:2",
												"trueBody": {
													"id": 3274,
													"nodeType": "Block",
													"src": "31983:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3271,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3254,
																		"src": "32038:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3269,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "32004:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3273,
															"nodeType": "RevertStatement",
															"src": "31997:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:2",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "31858:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3253,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:2"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3277,
												"src": "31895:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3256,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:2"
									},
									"scope": 3422,
									"src": "31841:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "32451:148:2",
										"statements": [
											{
												"expression": {
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3285,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "32461:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3288,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "32480:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 3286,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3292,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "32500:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3293,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3280,
														"src": "32514:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3301,
												"nodeType": "IfStatement",
												"src": "32496:97:2",
												"trueBody": {
													"id": 3300,
													"nodeType": "Block",
													"src": "32521:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "32576:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3295,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "32542:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3299,
															"nodeType": "RevertStatement",
															"src": "32535:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3278,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:2",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "32396:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3279,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:2"
									},
									"returnParameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "32433:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 3282,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:2"
									},
									"scope": 3422,
									"src": "32379:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "32989:148:2",
										"statements": [
											{
												"expression": {
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3311,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3309,
														"src": "32999:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3314,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3306,
																"src": "33018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 3312,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3317,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3318,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3309,
														"src": "33038:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3319,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "33052:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3327,
												"nodeType": "IfStatement",
												"src": "33034:97:2",
												"trueBody": {
													"id": 3326,
													"nodeType": "Block",
													"src": "33059:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3323,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3306,
																		"src": "33114:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3321,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "33080:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3325,
															"nodeType": "RevertStatement",
															"src": "33073:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3304,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:2",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "32934:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3305,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:2"
									},
									"returnParameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "32971:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3308,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:2"
									},
									"scope": 3422,
									"src": "32917:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3354,
										"nodeType": "Block",
										"src": "33527:148:2",
										"statements": [
											{
												"expression": {
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3337,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "33537:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3340,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3332,
																"src": "33556:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3338,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:2",
																"typeDescriptions": {}
															}
														},
														"id": 3341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3344,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3335,
														"src": "33576:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3345,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3332,
														"src": "33590:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3353,
												"nodeType": "IfStatement",
												"src": "33572:97:2",
												"trueBody": {
													"id": 3352,
													"nodeType": "Block",
													"src": "33597:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3349,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3332,
																		"src": "33652:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3347,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "33618:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3351,
															"nodeType": "RevertStatement",
															"src": "33611:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:2",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3332,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "33472:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:2"
									},
									"returnParameters": {
										"id": 3336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3355,
												"src": "33509:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3334,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:2"
									},
									"scope": 3422,
									"src": "33455:220:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3380,
										"nodeType": "Block",
										"src": "34058:146:2",
										"statements": [
											{
												"expression": {
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3363,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "34068:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3366,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3358,
																"src": "34086:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 3364,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 3367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 3369,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3370,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "34106:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3371,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3358,
														"src": "34120:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3379,
												"nodeType": "IfStatement",
												"src": "34102:96:2",
												"trueBody": {
													"id": 3378,
													"nodeType": "Block",
													"src": "34127:71:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3375,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3358,
																		"src": "34181:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3373,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "34148:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3377,
															"nodeType": "RevertStatement",
															"src": "34141:46:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3356,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:2",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "34004:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3357,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:2"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 3381,
												"src": "34041:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 3360,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:2"
									},
									"scope": 3422,
									"src": "33988:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3410,
										"nodeType": "Block",
										"src": "34444:250:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3389,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3384,
														"src": "34557:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 3393,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 3392,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 3396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3390,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3404,
												"nodeType": "IfStatement",
												"src": "34553:105:2",
												"trueBody": {
													"id": 3403,
													"nodeType": "Block",
													"src": "34592:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3400,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3384,
																		"src": "34641:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3399,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "34613:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3402,
															"nodeType": "RevertStatement",
															"src": "34606:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3407,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3384,
															"src": "34681:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3405,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3388,
												"id": 3409,
												"nodeType": "Return",
												"src": "34667:20:2"
											}
										]
									},
									"documentation": {
										"id": 3382,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:2",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 3411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "34398:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:2"
									},
									"returnParameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3411,
												"src": "34436:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3386,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:2"
									},
									"scope": 3422,
									"src": "34380:314:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3420,
										"nodeType": "Block",
										"src": "34853:87:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:2",
													"nodeType": "YulBlock",
													"src": "34888:46:2",
													"statements": [
														{
															"nativeSrc": "34902:22:2",
															"nodeType": "YulAssignment",
															"src": "34902:22:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:2",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:2"
																		},
																		"nativeSrc": "34914:9:2",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:2"
																},
																"nativeSrc": "34907:17:2",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:2"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:2",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3414,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:2",
														"valueSize": 1
													},
													{
														"declaration": 3417,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:2",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 3419,
												"nodeType": "InlineAssembly",
												"src": "34863:71:2"
											}
										]
									},
									"documentation": {
										"id": 3412,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:2",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 3421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "34811:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:2"
									},
									"returnParameters": {
										"id": 3418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "34842:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:2"
									},
									"scope": 3422,
									"src": "34795:145:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3423,
							"src": "769:34173:2",
							"usedErrors": [
								1667,
								1672,
								1679,
								1684
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:2"
				},
				"id": 2
			},
			"blockjack.sol": {
				"ast": {
					"absolutePath": "blockjack.sol",
					"exportedSymbols": {
						"BlockJack": [
							4025
						],
						"Math": [
							1657
						],
						"Panic": [
							51
						],
						"SafeCast": [
							3422
						]
					},
					"id": 4026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3424,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 3425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4026,
							"sourceUnit": 1658,
							"src": "58:53:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BlockJack",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3426,
								"nodeType": "StructuredDocumentation",
								"src": "113:50:3",
								"text": "@title TODO\n @author TODO\n @notice TODO"
							},
							"fullyImplemented": true,
							"id": 4025,
							"linearizedBaseContracts": [
								4025
							],
							"name": "BlockJack",
							"nameLocation": "172:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3429,
									"mutability": "constant",
									"name": "ZERO_INDEX_SHIFT",
									"nameLocation": "213:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "188:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3427,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "188:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3428,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "232:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3432,
									"mutability": "constant",
									"name": "MAX_CARD_VALUE",
									"nameLocation": "264:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "239:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "239:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3431,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "281:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3435,
									"mutability": "constant",
									"name": "BLACK_JACK",
									"nameLocation": "314:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "289:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3433,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3231",
										"id": 3434,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "327:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_21_by_1",
											"typeString": "int_const 21"
										},
										"value": "21"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 3438,
									"mutability": "constant",
									"name": "DEALER_DECISION",
									"nameLocation": "360:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "335:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3436,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3137",
										"id": 3437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "17"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1d73c64c",
									"id": 3440,
									"mutability": "mutable",
									"name": "initialBet",
									"nameLocation": "400:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "386:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3439,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "386:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e69828b1",
									"id": 3442,
									"mutability": "mutable",
									"name": "roundSessionExpiry",
									"nameLocation": "430:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "416:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3441,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "416:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9de2ee21",
									"id": 3444,
									"mutability": "mutable",
									"name": "dealer",
									"nameLocation": "469:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "454:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3443,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "454:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3446,
									"mutability": "mutable",
									"name": "currentRoundTimeout",
									"nameLocation": "489:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "481:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3445,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3448,
									"mutability": "mutable",
									"name": "multiplier",
									"nameLocation": "522:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "514:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3447,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3451,
									"mutability": "constant",
									"name": "numberOfCards",
									"nameLocation": "553:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "538:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3449,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "538:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3133",
										"id": 3450,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "569:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_13_by_1",
											"typeString": "int_const 13"
										},
										"value": "13"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "7eddbf27696273b85afcfa4ac444b5cbe6a9cb035d808d8e28b25c1fa694a659",
									"id": 3455,
									"name": "Hit",
									"nameLocation": "584:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3453,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "604:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3455,
												"src": "588:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:24:3"
									},
									"src": "578:34:3"
								},
								{
									"anonymous": false,
									"eventSelector": "cbe57ba0262dc3a1cbaf4b18552f05b3ae49736af8011369b89319b35dc20375",
									"id": 3459,
									"name": "Stand",
									"nameLocation": "623:5:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3457,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "645:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "629:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "628:24:3"
									},
									"src": "617:36:3"
								},
								{
									"anonymous": false,
									"eventSelector": "fd11b87f2af9b86645a7a933e90e504d91320eaf8bd112573a23a3ca82d56c5e",
									"id": 3463,
									"name": "Bust",
									"nameLocation": "664:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "685:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 3463,
												"src": "669:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:24:3"
									},
									"src": "658:35:3"
								},
								{
									"constant": false,
									"id": 3466,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "717:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "699:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 3464,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "699:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3465,
										"nodeType": "ArrayTypeName",
										"src": "699:9:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "efa2e37f",
									"id": 3472,
									"mutability": "mutable",
									"name": "hands",
									"nameLocation": "764:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "730:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
										"typeString": "mapping(address => enum BlockJack.Card[])"
									},
									"typeName": {
										"id": 3471,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "738:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "730:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
											"typeString": "mapping(address => enum BlockJack.Card[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3469,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3468,
													"name": "Card",
													"nameLocations": [
														"749:4:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4017,
													"src": "749:4:3"
												},
												"referencedDeclaration": 4017,
												"src": "749:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Card_$4017",
													"typeString": "enum BlockJack.Card"
												}
											},
											"id": 3470,
											"nodeType": "ArrayTypeName",
											"src": "749:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage_ptr",
												"typeString": "enum BlockJack.Card[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a78f1a",
									"id": 3476,
									"mutability": "mutable",
									"name": "bets",
									"nameLocation": "810:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "775:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3475,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3473,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "775:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3474,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "794:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f120daf3",
									"id": 3481,
									"mutability": "mutable",
									"name": "playerDecisions",
									"nameLocation": "862:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "820:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
										"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
									},
									"typeName": {
										"id": 3480,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:34:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
											"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3479,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3478,
												"name": "PlayerDecision",
												"nameLocations": [
													"839:14:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4024,
												"src": "839:14:3"
											},
											"referencedDeclaration": 4024,
											"src": "839:14:3",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_PlayerDecision_$4024",
												"typeString": "enum BlockJack.PlayerDecision"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1c9fe6e",
									"id": 3484,
									"mutability": "mutable",
									"name": "phase",
									"nameLocation": "896:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "883:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$4020",
										"typeString": "enum BlockJack.Phase"
									},
									"typeName": {
										"id": 3483,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3482,
											"name": "Phase",
											"nameLocations": [
												"883:5:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4020,
											"src": "883:5:3"
										},
										"referencedDeclaration": 4020,
										"src": "883:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$4020",
											"typeString": "enum BlockJack.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3490,
									"mutability": "mutable",
									"name": "enumValues",
									"nameLocation": "941:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 4025,
									"src": "908:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_Card_$4017_$_t_array$_t_uint8_$dyn_storage_$",
										"typeString": "mapping(enum BlockJack.Card => uint8[])"
									},
									"typeName": {
										"id": 3489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3486,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3485,
												"name": "Card",
												"nameLocations": [
													"916:4:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4017,
												"src": "916:4:3"
											},
											"referencedDeclaration": 4017,
											"src": "916:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Card_$4017",
												"typeString": "enum BlockJack.Card"
											}
										},
										"nodeType": "Mapping",
										"src": "908:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_Card_$4017_$_t_array$_t_uint8_$dyn_storage_$",
											"typeString": "mapping(enum BlockJack.Card => uint8[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3487,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "924:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"id": 3488,
											"nodeType": "ArrayTypeName",
											"src": "924:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
												"typeString": "uint8[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3521,
										"nodeType": "Block",
										"src": "1069:187:3",
										"statements": [
											{
												"expression": {
													"id": 3502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3499,
														"name": "dealer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3444,
														"src": "1079:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3500,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1088:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1092:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1088:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1079:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3503,
												"nodeType": "ExpressionStatement",
												"src": "1079:19:3"
											},
											{
												"expression": {
													"id": 3506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3504,
														"name": "initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "1108:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3505,
														"name": "_initialBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3492,
														"src": "1121:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1108:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 3507,
												"nodeType": "ExpressionStatement",
												"src": "1108:24:3"
											},
											{
												"expression": {
													"id": 3510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3508,
														"name": "roundSessionExpiry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3442,
														"src": "1142:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3509,
														"name": "_roundSessionExpiry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3494,
														"src": "1163:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1142:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 3511,
												"nodeType": "ExpressionStatement",
												"src": "1142:40:3"
											},
											{
												"expression": {
													"id": 3515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3512,
														"name": "phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "1192:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4020",
															"typeString": "enum BlockJack.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3513,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4020,
															"src": "1200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																"typeString": "type(enum BlockJack.Phase)"
															}
														},
														"id": 3514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1206:9:3",
														"memberName": "PlaceBets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4018,
														"src": "1200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4020",
															"typeString": "enum BlockJack.Phase"
														}
													},
													"src": "1192:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4020",
														"typeString": "enum BlockJack.Phase"
													}
												},
												"id": 3516,
												"nodeType": "ExpressionStatement",
												"src": "1192:23:3"
											},
											{
												"expression": {
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3517,
														"name": "multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "1225:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3518,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3496,
														"src": "1238:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1225:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3520,
												"nodeType": "ExpressionStatement",
												"src": "1225:24:3"
											}
										]
									},
									"id": 3522,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "_initialBet",
												"nameLocation": "986:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 3522,
												"src": "979:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3491,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "979:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "_roundSessionExpiry",
												"nameLocation": "1014:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 3522,
												"src": "1007:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3493,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1007:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3496,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "1051:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 3522,
												"src": "1043:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:99:3"
									},
									"returnParameters": {
										"id": 3498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1069:0:3"
									},
									"scope": 4025,
									"src": "958:298:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3564,
										"nodeType": "Block",
										"src": "1297:286:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$4020",
																"typeString": "enum BlockJack.Phase"
															},
															"id": 3529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3526,
																"name": "phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "1315:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3527,
																	"name": "Phase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4020,
																	"src": "1324:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																		"typeString": "type(enum BlockJack.Phase)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1330:9:3",
																"memberName": "PlaceBets",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4018,
																"src": "1324:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																}
															},
															"src": "1315:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742074616b696e6720616e79206e657720706c61796572732e",
															"id": 3530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1341:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a",
																"typeString": "literal_string \"Not taking any new players.\""
															},
															"value": "Not taking any new players."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aada755683745e651d5744b00ffa67769ed0c172468a25c4a55135e7100dcc3a",
																"typeString": "literal_string \"Not taking any new players.\""
															}
														],
														"id": 3525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1307:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1307:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3532,
												"nodeType": "ExpressionStatement",
												"src": "1307:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3534,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1389:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1393:5:3",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1389:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3536,
																"name": "initialBet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3440,
																"src": "1402:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"src": "1389:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f727265637420696e697469616c206265742e",
															"id": 3538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1414:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc",
																"typeString": "literal_string \"Incorrect initial bet.\""
															},
															"value": "Incorrect initial bet."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0b7005da01020791f1d9dfc902eab32abbb83a7e6a4a8f6090a558c12a30cbc",
																"typeString": "literal_string \"Incorrect initial bet.\""
															}
														],
														"id": 3533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1381:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3540,
												"nodeType": "ExpressionStatement",
												"src": "1381:58:3"
											},
											{
												"expression": {
													"id": 3547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3541,
															"name": "bets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "1449:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3544,
														"indexExpression": {
															"expression": {
																"id": 3542,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1454:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1458:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1454:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1449:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3545,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1468:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1472:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1468:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1449:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3548,
												"nodeType": "ExpressionStatement",
												"src": "1449:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3552,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1500:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1504:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1500:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3549,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "1487:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1495:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1487:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 3554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3555,
												"nodeType": "ExpressionStatement",
												"src": "1487:24:3"
											},
											{
												"expression": {
													"id": 3562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3556,
															"name": "playerDecisions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3481,
															"src": "1522:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
															}
														},
														"id": 3559,
														"indexExpression": {
															"expression": {
																"id": 3557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1538:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1542:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1538:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1522:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PlayerDecision_$4024",
															"typeString": "enum BlockJack.PlayerDecision"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3560,
															"name": "PlayerDecision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4024,
															"src": "1552:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																"typeString": "type(enum BlockJack.PlayerDecision)"
															}
														},
														"id": 3561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1567:9:3",
														"memberName": "Undecided",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4021,
														"src": "1552:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PlayerDecision_$4024",
															"typeString": "enum BlockJack.PlayerDecision"
														}
													},
													"src": "1522:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PlayerDecision_$4024",
														"typeString": "enum BlockJack.PlayerDecision"
													}
												},
												"id": 3563,
												"nodeType": "ExpressionStatement",
												"src": "1522:54:3"
											}
										]
									},
									"functionSelector": "f90f4560",
									"id": 3565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBet",
									"nameLocation": "1271:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1279:2:3"
									},
									"returnParameters": {
										"id": 3524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:3"
									},
									"scope": 4025,
									"src": "1262:321:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3633,
										"nodeType": "Block",
										"src": "1612:673:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3569,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1630:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1634:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1630:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3571,
																"name": "dealer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3444,
																"src": "1644:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1630:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206465616c65722063616e206465616c",
															"id": 3573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1652:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2",
																"typeString": "literal_string \"Only the dealer can deal\""
															},
															"value": "Only the dealer can deal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d72e50b595257ebc5db48b4ab6c2fc30629176ec831ab36ed59ebd1124248eb2",
																"typeString": "literal_string \"Only the dealer can deal\""
															}
														],
														"id": 3568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1622:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1622:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3575,
												"nodeType": "ExpressionStatement",
												"src": "1622:57:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3577,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1710:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1716:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1710:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3579,
																"name": "currentRoundTimeout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3446,
																"src": "1729:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1710:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e7420726f756e64206973207374696c6c2072756e6e696e672e",
															"id": 3581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1762:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3",
																"typeString": "literal_string \"Current round is still running.\""
															},
															"value": "Current round is still running."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3d08ac55332948a9475970ede6edd8e4663ccf03319f87ce82bf1f71cbf7ae3",
																"typeString": "literal_string \"Current round is still running.\""
															}
														],
														"id": 3576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1689:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:116:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3583,
												"nodeType": "ExpressionStatement",
												"src": "1689:116:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																},
																"id": 3588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3585,
																	"name": "phase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3484,
																	"src": "1837:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3586,
																		"name": "Phase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4020,
																		"src": "1846:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																			"typeString": "type(enum BlockJack.Phase)"
																		}
																	},
																	"id": 3587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1852:9:3",
																	"memberName": "PlaceBets",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4018,
																	"src": "1846:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"src": "1837:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																},
																"id": 3592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3589,
																	"name": "phase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3484,
																	"src": "1865:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3590,
																		"name": "Phase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4020,
																		"src": "1874:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																			"typeString": "type(enum BlockJack.Phase)"
																		}
																	},
																	"id": 3591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1880:10:3",
																	"memberName": "HitOrStand",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4019,
																	"src": "1874:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"src": "1865:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1837:53:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f7420696e20636f72726563742073746174652e",
															"id": 3594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1904:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4",
																"typeString": "literal_string \"Game not in correct state.\""
															},
															"value": "Game not in correct state."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35026b5279ed6a65f883f988ceca774d328ed91fceedfeb7a7c468eaa0a978f4",
																"typeString": "literal_string \"Game not in correct state.\""
															}
														],
														"id": 3584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1816:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:126:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3596,
												"nodeType": "ExpressionStatement",
												"src": "1816:126:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$4020",
														"typeString": "enum BlockJack.Phase"
													},
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3597,
														"name": "phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "1957:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4020",
															"typeString": "enum BlockJack.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3598,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4020,
															"src": "1966:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																"typeString": "type(enum BlockJack.Phase)"
															}
														},
														"id": 3599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1972:9:3",
														"memberName": "PlaceBets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4018,
														"src": "1966:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4020",
															"typeString": "enum BlockJack.Phase"
														}
													},
													"src": "1957:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Phase_$4020",
															"typeString": "enum BlockJack.Phase"
														},
														"id": 3616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3613,
															"name": "phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3484,
															"src": "2105:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Phase_$4020",
																"typeString": "enum BlockJack.Phase"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3614,
																"name": "Phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4020,
																"src": "2114:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																	"typeString": "type(enum BlockJack.Phase)"
																}
															},
															"id": 3615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2120:10:3",
															"memberName": "HitOrStand",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4019,
															"src": "2114:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Phase_$4020",
																"typeString": "enum BlockJack.Phase"
															}
														},
														"src": "2105:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3624,
													"nodeType": "IfStatement",
													"src": "2101:109:3",
													"trueBody": {
														"id": 3623,
														"nodeType": "Block",
														"src": "2132:78:3",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3617,
																		"name": "dealCardsToPlayers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3756,
																		"src": "2146:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																			"typeString": "function ()"
																		}
																	},
																	"id": 3618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2146:20:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3619,
																"nodeType": "ExpressionStatement",
																"src": "2146:20:3"
															},
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3620,
																		"name": "finalDealerReveal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3841,
																		"src": "2180:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																			"typeString": "function ()"
																		}
																	},
																	"id": 3621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2180:19:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3622,
																"nodeType": "ExpressionStatement",
																"src": "2180:19:3"
															}
														]
													}
												},
												"id": 3625,
												"nodeType": "IfStatement",
												"src": "1953:257:3",
												"trueBody": {
													"id": 3612,
													"nodeType": "Block",
													"src": "1983:112:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3601,
																	"name": "dealInitialHand",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3795,
																	"src": "1997:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1997:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3603,
															"nodeType": "ExpressionStatement",
															"src": "1997:17:3"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3604,
																	"name": "dealCardToDealer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3807,
																	"src": "2028:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2028:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3606,
															"nodeType": "ExpressionStatement",
															"src": "2028:18:3"
														},
														{
															"expression": {
																"id": 3610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3607,
																	"name": "phase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3484,
																	"src": "2060:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3608,
																		"name": "Phase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4020,
																		"src": "2068:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																			"typeString": "type(enum BlockJack.Phase)"
																		}
																	},
																	"id": 3609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2074:10:3",
																	"memberName": "HitOrStand",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4019,
																	"src": "2068:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4020",
																		"typeString": "enum BlockJack.Phase"
																	}
																},
																"src": "2060:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																}
															},
															"id": 3611,
															"nodeType": "ExpressionStatement",
															"src": "2060:24:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3626,
														"name": "currentRoundTimeout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3446,
														"src": "2220:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3627,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2242:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2248:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2242:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3629,
															"name": "roundSessionExpiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "2260:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2242:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2220:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3632,
												"nodeType": "ExpressionStatement",
												"src": "2220:58:3"
											}
										]
									},
									"functionSelector": "553df021",
									"id": 3634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deal",
									"nameLocation": "1598:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:3"
									},
									"returnParameters": {
										"id": 3567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:0:3"
									},
									"scope": 4025,
									"src": "1589:696:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3647,
										"nodeType": "Block",
										"src": "2343:63:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3641,
																	"name": "getRandomNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3667,
																	"src": "2365:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 3642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2365:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3643,
																"name": "numberOfCards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3451,
																"src": "2385:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2365:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3640,
														"name": "Card",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4017,
														"src": "2360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Card_$4017_$",
															"typeString": "type(enum BlockJack.Card)"
														}
													},
													"id": 3645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2360:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Card_$4017",
														"typeString": "enum BlockJack.Card"
													}
												},
												"functionReturnParameters": 3639,
												"id": 3646,
												"nodeType": "Return",
												"src": "2353:46:3"
											}
										]
									},
									"id": 3648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCard",
									"nameLocation": "2300:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2307:2:3"
									},
									"returnParameters": {
										"id": 3639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "card",
												"nameLocation": "2337:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 3648,
												"src": "2332:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Card_$4017",
													"typeString": "enum BlockJack.Card"
												},
												"typeName": {
													"id": 3637,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3636,
														"name": "Card",
														"nameLocations": [
															"2332:4:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4017,
														"src": "2332:4:3"
													},
													"referencedDeclaration": 4017,
													"src": "2332:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Card_$4017",
														"typeString": "enum BlockJack.Card"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:11:3"
									},
									"scope": 4025,
									"src": "2291:115:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3666,
										"nodeType": "Block",
										"src": "2471:89:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 3658,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2523:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2527:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2523:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 3660,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2535:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 3661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2541:9:3",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2535:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3656,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2506:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 3657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2510:12:3",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "2506:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 3662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2506:45:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 3655,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2496:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 3663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2496:56:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2488:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2488:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 3664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2488:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3652,
												"id": 3665,
												"nodeType": "Return",
												"src": "2481:72:3"
											}
										]
									},
									"id": 3667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRandomNumber",
									"nameLocation": "2421:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2436:2:3"
									},
									"returnParameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3667,
												"src": "2462:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2461:9:3"
									},
									"scope": 4025,
									"src": "2412:148:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3755,
										"nodeType": "Block",
										"src": "2604:960:3",
										"statements": [
											{
												"body": {
													"id": 3753,
													"nodeType": "Block",
													"src": "2659:899:3",
													"statements": [
														{
															"assignments": [
																3682
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3682,
																	"mutability": "mutable",
																	"name": "playerAddress",
																	"nameLocation": "2681:13:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 3753,
																	"src": "2673:21:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2673:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3686,
															"initialValue": {
																"baseExpression": {
																	"id": 3683,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3466,
																	"src": "2697:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3685,
																"indexExpression": {
																	"id": 3684,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3671,
																	"src": "2705:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2697:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2673:34:3"
														},
														{
															"assignments": [
																3689
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3689,
																	"mutability": "mutable",
																	"name": "decision",
																	"nameLocation": "2736:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 3753,
																	"src": "2721:23:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																		"typeString": "enum BlockJack.PlayerDecision"
																	},
																	"typeName": {
																		"id": 3688,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 3687,
																			"name": "PlayerDecision",
																			"nameLocations": [
																				"2721:14:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 4024,
																			"src": "2721:14:3"
																		},
																		"referencedDeclaration": 4024,
																		"src": "2721:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																			"typeString": "enum BlockJack.PlayerDecision"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3693,
															"initialValue": {
																"baseExpression": {
																	"id": 3690,
																	"name": "playerDecisions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3481,
																	"src": "2747:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																		"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																	}
																},
																"id": 3692,
																"indexExpression": {
																	"id": 3691,
																	"name": "playerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3682,
																	"src": "2763:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2747:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2721:56:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																},
																"id": 3697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3694,
																	"name": "decision",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3689,
																	"src": "2795:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																		"typeString": "enum BlockJack.PlayerDecision"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3695,
																		"name": "PlayerDecision",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4024,
																		"src": "2807:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																			"typeString": "type(enum BlockJack.PlayerDecision)"
																		}
																	},
																	"id": 3696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2822:3:3",
																	"memberName": "Hit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4022,
																	"src": "2807:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																		"typeString": "enum BlockJack.PlayerDecision"
																	}
																},
																"src": "2795:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																		"typeString": "enum BlockJack.PlayerDecision"
																	},
																	"id": 3738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3735,
																		"name": "decision",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3689,
																		"src": "3286:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																			"typeString": "enum BlockJack.PlayerDecision"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3736,
																			"name": "PlayerDecision",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4024,
																			"src": "3298:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																				"typeString": "type(enum BlockJack.PlayerDecision)"
																			}
																		},
																		"id": 3737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3313:9:3",
																		"memberName": "Undecided",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4021,
																		"src": "3298:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																			"typeString": "enum BlockJack.PlayerDecision"
																		}
																	},
																	"src": "3286:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 3751,
																"nodeType": "IfStatement",
																"src": "3282:266:3",
																"trueBody": {
																	"id": 3750,
																	"nodeType": "Block",
																	"src": "3324:224:3",
																	"statements": [
																		{
																			"eventCall": {
																				"arguments": [
																					{
																						"id": 3740,
																						"name": "playerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3682,
																						"src": "3448:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 3739,
																					"name": "Stand",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3459,
																					"src": "3442:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																						"typeString": "function (address)"
																					}
																				},
																				"id": 3741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3442:20:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 3742,
																			"nodeType": "EmitStatement",
																			"src": "3437:25:3"
																		},
																		{
																			"expression": {
																				"id": 3748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 3743,
																						"name": "playerDecisions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3481,
																						"src": "3480:15:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																							"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																						}
																					},
																					"id": 3745,
																					"indexExpression": {
																						"id": 3744,
																						"name": "playerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3682,
																						"src": "3496:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "3480:30:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																						"typeString": "enum BlockJack.PlayerDecision"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"expression": {
																						"id": 3746,
																						"name": "PlayerDecision",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4024,
																						"src": "3513:14:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																							"typeString": "type(enum BlockJack.PlayerDecision)"
																						}
																					},
																					"id": 3747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3528:5:3",
																					"memberName": "Stand",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4023,
																					"src": "3513:20:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																						"typeString": "enum BlockJack.PlayerDecision"
																					}
																				},
																				"src": "3480:53:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																					"typeString": "enum BlockJack.PlayerDecision"
																				}
																			},
																			"id": 3749,
																			"nodeType": "ExpressionStatement",
																			"src": "3480:53:3"
																		}
																	]
																}
															},
															"id": 3752,
															"nodeType": "IfStatement",
															"src": "2791:757:3",
															"trueBody": {
																"id": 3734,
																"nodeType": "Block",
																"src": "2827:449:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 3702,
																						"name": "getCard",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3648,
																						"src": "2871:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_Card_$4017_$",
																							"typeString": "function () view returns (enum BlockJack.Card)"
																						}
																					},
																					"id": 3703,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2871:9:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Card_$4017",
																						"typeString": "enum BlockJack.Card"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Card_$4017",
																						"typeString": "enum BlockJack.Card"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 3698,
																						"name": "hands",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3472,
																						"src": "2845:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																							"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																						}
																					},
																					"id": 3700,
																					"indexExpression": {
																						"id": 3699,
																						"name": "playerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3682,
																						"src": "2851:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2845:20:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																						"typeString": "enum BlockJack.Card[] storage ref"
																					}
																				},
																				"id": 3701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2866:4:3",
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "2845:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$_t_enum$_Card_$4017_$returns$__$attached_to$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$",
																					"typeString": "function (enum BlockJack.Card[] storage pointer,enum BlockJack.Card)"
																				}
																			},
																			"id": 3704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2845:36:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3705,
																		"nodeType": "ExpressionStatement",
																		"src": "2845:36:3"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 3707,
																							"name": "hands",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3472,
																							"src": "2913:5:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																								"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																							}
																						},
																						"id": 3709,
																						"indexExpression": {
																							"id": 3708,
																							"name": "playerAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3682,
																							"src": "2919:13:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2913:20:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																							"typeString": "enum BlockJack.Card[] storage ref"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																							"typeString": "enum BlockJack.Card[] storage ref"
																						}
																					],
																					"id": 3706,
																					"name": "sumOfHand",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4003,
																					"src": "2903:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_Card_$4017_$dyn_memory_ptr_$returns$_t_uint256_$",
																						"typeString": "function (enum BlockJack.Card[] memory) pure returns (uint256)"
																					}
																				},
																				"id": 3710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2903:31:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3711,
																				"name": "BLACK_JACK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3435,
																				"src": "2937:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2903:44:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 3732,
																			"nodeType": "Block",
																			"src": "3164:98:3",
																			"statements": [
																				{
																					"expression": {
																						"id": 3730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3725,
																								"name": "playerDecisions",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3481,
																								"src": "3186:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																									"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																								}
																							},
																							"id": 3727,
																							"indexExpression": {
																								"id": 3726,
																								"name": "playerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3682,
																								"src": "3202:13:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3186:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																								"typeString": "enum BlockJack.PlayerDecision"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"id": 3728,
																								"name": "PlayerDecision",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4024,
																								"src": "3219:14:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																									"typeString": "type(enum BlockJack.PlayerDecision)"
																								}
																							},
																							"id": 3729,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "3234:9:3",
																							"memberName": "Undecided",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4021,
																							"src": "3219:24:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																								"typeString": "enum BlockJack.PlayerDecision"
																							}
																						},
																						"src": "3186:57:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																							"typeString": "enum BlockJack.PlayerDecision"
																						}
																					},
																					"id": 3731,
																					"nodeType": "ExpressionStatement",
																					"src": "3186:57:3"
																				}
																			]
																		},
																		"id": 3733,
																		"nodeType": "IfStatement",
																		"src": "2899:363:3",
																		"trueBody": {
																			"id": 3724,
																			"nodeType": "Block",
																			"src": "2949:209:3",
																			"statements": [
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 3714,
																								"name": "playerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3682,
																								"src": "3050:13:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 3713,
																							"name": "Bust",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3463,
																							"src": "3045:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																								"typeString": "function (address)"
																							}
																						},
																						"id": 3715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3045:19:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 3716,
																					"nodeType": "EmitStatement",
																					"src": "3040:24:3"
																				},
																				{
																					"expression": {
																						"id": 3722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3717,
																								"name": "playerDecisions",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3481,
																								"src": "3086:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																									"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																								}
																							},
																							"id": 3719,
																							"indexExpression": {
																								"id": 3718,
																								"name": "playerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3682,
																								"src": "3102:13:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3086:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																								"typeString": "enum BlockJack.PlayerDecision"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"id": 3720,
																								"name": "PlayerDecision",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4024,
																								"src": "3119:14:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																									"typeString": "type(enum BlockJack.PlayerDecision)"
																								}
																							},
																							"id": 3721,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "3134:5:3",
																							"memberName": "Stand",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 4023,
																							"src": "3119:20:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																								"typeString": "enum BlockJack.PlayerDecision"
																							}
																						},
																						"src": "3086:53:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																							"typeString": "enum BlockJack.PlayerDecision"
																						}
																					},
																					"id": 3723,
																					"nodeType": "ExpressionStatement",
																					"src": "3086:53:3"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3674,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3671,
														"src": "2634:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3675,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "2638:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2646:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2638:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2634:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3754,
												"initializationExpression": {
													"assignments": [
														3671
													],
													"declarations": [
														{
															"constant": false,
															"id": 3671,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2627:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 3754,
															"src": "2619:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3670,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2619:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3673,
													"initialValue": {
														"hexValue": "30",
														"id": 3672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2631:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2619:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2654:3:3",
														"subExpression": {
															"id": 3678,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3671,
															"src": "2654:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3680,
													"nodeType": "ExpressionStatement",
													"src": "2654:3:3"
												},
												"nodeType": "ForStatement",
												"src": "2614:944:3"
											}
										]
									},
									"id": 3756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dealCardsToPlayers",
									"nameLocation": "2575:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:2:3"
									},
									"returnParameters": {
										"id": 3669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2604:0:3"
									},
									"scope": 4025,
									"src": "2566:998:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3794,
										"nodeType": "Block",
										"src": "3605:220:3",
										"statements": [
											{
												"body": {
													"id": 3792,
													"nodeType": "Block",
													"src": "3660:159:3",
													"statements": [
														{
															"assignments": [
																3771
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3771,
																	"mutability": "mutable",
																	"name": "playerAddress",
																	"nameLocation": "3682:13:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 3792,
																	"src": "3674:21:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3770,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3674:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3775,
															"initialValue": {
																"baseExpression": {
																	"id": 3772,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3466,
																	"src": "3698:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 3774,
																"indexExpression": {
																	"id": 3773,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3760,
																	"src": "3706:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3698:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3674:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3780,
																			"name": "getCard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3648,
																			"src": "3748:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_Card_$4017_$",
																				"typeString": "function () view returns (enum BlockJack.Card)"
																			}
																		},
																		"id": 3781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3748:9:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3776,
																			"name": "hands",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3472,
																			"src": "3722:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																				"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																			}
																		},
																		"id": 3778,
																		"indexExpression": {
																			"id": 3777,
																			"name": "playerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3771,
																			"src": "3728:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3722:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																			"typeString": "enum BlockJack.Card[] storage ref"
																		}
																	},
																	"id": 3779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3743:4:3",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3722:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$_t_enum$_Card_$4017_$returns$__$attached_to$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$",
																		"typeString": "function (enum BlockJack.Card[] storage pointer,enum BlockJack.Card)"
																	}
																},
																"id": 3782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3722:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3783,
															"nodeType": "ExpressionStatement",
															"src": "3722:36:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3788,
																			"name": "getCard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3648,
																			"src": "3798:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_Card_$4017_$",
																				"typeString": "function () view returns (enum BlockJack.Card)"
																			}
																		},
																		"id": 3789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3798:9:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3784,
																			"name": "hands",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3472,
																			"src": "3772:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																				"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																			}
																		},
																		"id": 3786,
																		"indexExpression": {
																			"id": 3785,
																			"name": "playerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3771,
																			"src": "3778:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3772:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																			"typeString": "enum BlockJack.Card[] storage ref"
																		}
																	},
																	"id": 3787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3793:4:3",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3772:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$_t_enum$_Card_$4017_$returns$__$attached_to$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$",
																		"typeString": "function (enum BlockJack.Card[] storage pointer,enum BlockJack.Card)"
																	}
																},
																"id": 3790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3772:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3791,
															"nodeType": "ExpressionStatement",
															"src": "3772:36:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3763,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3760,
														"src": "3635:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3764,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "3639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 3765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3647:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3639:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3635:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3793,
												"initializationExpression": {
													"assignments": [
														3760
													],
													"declarations": [
														{
															"constant": false,
															"id": 3760,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3628:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 3793,
															"src": "3620:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3759,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3620:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3762,
													"initialValue": {
														"hexValue": "30",
														"id": 3761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3632:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3620:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3655:3:3",
														"subExpression": {
															"id": 3767,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3760,
															"src": "3655:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3769,
													"nodeType": "ExpressionStatement",
													"src": "3655:3:3"
												},
												"nodeType": "ForStatement",
												"src": "3615:204:3"
											}
										]
									},
									"id": 3795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dealInitialHand",
									"nameLocation": "3579:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3594:2:3"
									},
									"returnParameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:3"
									},
									"scope": 4025,
									"src": "3570:255:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3806,
										"nodeType": "Block",
										"src": "3867:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3802,
																"name": "getCard",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3648,
																"src": "3896:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_Card_$4017_$",
																	"typeString": "function () view returns (enum BlockJack.Card)"
																}
															},
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3896:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Card_$4017",
																"typeString": "enum BlockJack.Card"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Card_$4017",
																"typeString": "enum BlockJack.Card"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 3798,
																"name": "hands",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3472,
																"src": "3877:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																	"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																}
															},
															"id": 3800,
															"indexExpression": {
																"id": 3799,
																"name": "dealer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3444,
																"src": "3883:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3877:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																"typeString": "enum BlockJack.Card[] storage ref"
															}
														},
														"id": 3801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3891:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3877:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$_t_enum$_Card_$4017_$returns$__$attached_to$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$",
															"typeString": "function (enum BlockJack.Card[] storage pointer,enum BlockJack.Card)"
														}
													},
													"id": 3804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3877:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3805,
												"nodeType": "ExpressionStatement",
												"src": "3877:29:3"
											}
										]
									},
									"id": 3807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dealCardToDealer",
									"nameLocation": "3840:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:2:3"
									},
									"returnParameters": {
										"id": 3797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3867:0:3"
									},
									"scope": 4025,
									"src": "3831:82:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3840,
										"nodeType": "Block",
										"src": "3956:215:3",
										"statements": [
											{
												"body": {
													"id": 3825,
													"nodeType": "Block",
													"src": "4017:54:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3821,
																			"name": "getCard",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3648,
																			"src": "4050:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_Card_$4017_$",
																				"typeString": "function () view returns (enum BlockJack.Card)"
																			}
																		},
																		"id": 3822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4050:9:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_enum$_Card_$4017",
																			"typeString": "enum BlockJack.Card"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3817,
																			"name": "hands",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3472,
																			"src": "4031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																				"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																			}
																		},
																		"id": 3819,
																		"indexExpression": {
																			"id": 3818,
																			"name": "dealer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3444,
																			"src": "4037:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																			"typeString": "enum BlockJack.Card[] storage ref"
																		}
																	},
																	"id": 3820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4045:4:3",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4031:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$_t_enum$_Card_$4017_$returns$__$attached_to$_t_array$_t_enum$_Card_$4017_$dyn_storage_ptr_$",
																		"typeString": "function (enum BlockJack.Card[] storage pointer,enum BlockJack.Card)"
																	}
																},
																"id": 3823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4031:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3824,
															"nodeType": "ExpressionStatement",
															"src": "4031:29:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 3811,
																	"name": "hands",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3472,
																	"src": "3983:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																		"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																	}
																},
																"id": 3813,
																"indexExpression": {
																	"id": 3812,
																	"name": "dealer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3444,
																	"src": "3989:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3983:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																	"typeString": "enum BlockJack.Card[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																	"typeString": "enum BlockJack.Card[] storage ref"
																}
															],
															"id": 3810,
															"name": "sumOfHand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4003,
															"src": "3973:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_Card_$4017_$dyn_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (enum BlockJack.Card[] memory) pure returns (uint256)"
															}
														},
														"id": 3814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3973:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3815,
														"name": "DEALER_DECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3438,
														"src": "4000:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3973:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3826,
												"nodeType": "WhileStatement",
												"src": "3966:105:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 3828,
																	"name": "hands",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3472,
																	"src": "4094:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_enum$_Card_$4017_$dyn_storage_$",
																		"typeString": "mapping(address => enum BlockJack.Card[] storage ref)"
																	}
																},
																"id": 3830,
																"indexExpression": {
																	"id": 3829,
																	"name": "dealer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3444,
																	"src": "4100:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4094:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																	"typeString": "enum BlockJack.Card[] storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage",
																	"typeString": "enum BlockJack.Card[] storage ref"
																}
															],
															"id": 3827,
															"name": "sumOfHand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4003,
															"src": "4084:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_array$_t_enum$_Card_$4017_$dyn_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (enum BlockJack.Card[] memory) pure returns (uint256)"
															}
														},
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4084:24:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3832,
														"name": "BLACK_JACK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "4111:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4084:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3839,
												"nodeType": "IfStatement",
												"src": "4080:85:3",
												"trueBody": {
													"id": 3838,
													"nodeType": "Block",
													"src": "4123:42:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3835,
																		"name": "dealer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3444,
																		"src": "4147:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3834,
																	"name": "Bust",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3463,
																	"src": "4142:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 3836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4142:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3837,
															"nodeType": "EmitStatement",
															"src": "4137:17:3"
														}
													]
												}
											}
										]
									},
									"id": 3841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalDealerReveal",
									"nameLocation": "3928:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3945:2:3"
									},
									"returnParameters": {
										"id": 3809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3956:0:3"
									},
									"scope": 4025,
									"src": "3919:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3865,
										"nodeType": "Block",
										"src": "4199:216:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															},
															"id": 3851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3845,
																	"name": "playerDecisions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3481,
																	"src": "4230:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																		"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																	}
																},
																"id": 3848,
																"indexExpression": {
																	"expression": {
																		"id": 3846,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4246:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4250:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4246:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4230:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 3849,
																	"name": "PlayerDecision",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4024,
																	"src": "4261:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																		"typeString": "type(enum BlockJack.PlayerDecision)"
																	}
																},
																"id": 3850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4276:5:3",
																"memberName": "Stand",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4023,
																"src": "4261:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																}
															},
															"src": "4230:51:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6179657220616c72656164792073656c6563746564207374616e64206f6e63652e",
															"id": 3852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4295:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32",
																"typeString": "literal_string \"Player already selected stand once.\""
															},
															"value": "Player already selected stand once."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ec1228b404e956169d0484841331a9127a67ddaf066b0f01678d6a2b3a2bf32",
																"typeString": "literal_string \"Player already selected stand once.\""
															}
														],
														"id": 3844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4209:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:133:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3854,
												"nodeType": "ExpressionStatement",
												"src": "4209:133:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3856,
																"name": "PlayerDecision",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4024,
																"src": "4359:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																	"typeString": "type(enum BlockJack.PlayerDecision)"
																}
															},
															"id": 3857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4374:3:3",
															"memberName": "Hit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4022,
															"src": "4359:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															}
														],
														"id": 3855,
														"name": "decide",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "4352:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PlayerDecision_$4024_$returns$__$",
															"typeString": "function (enum BlockJack.PlayerDecision)"
														}
													},
													"id": 3858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4352:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3859,
												"nodeType": "ExpressionStatement",
												"src": "4352:26:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3861,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4397:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4401:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4397:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3860,
														"name": "Hit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3455,
														"src": "4393:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:15:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3864,
												"nodeType": "EmitStatement",
												"src": "4388:20:3"
											}
										]
									},
									"functionSelector": "2ae3594a",
									"id": 3866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hit",
									"nameLocation": "4186:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4189:2:3"
									},
									"returnParameters": {
										"id": 3843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4199:0:3"
									},
									"scope": 4025,
									"src": "4177:238:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3890,
										"nodeType": "Block",
										"src": "4445:216:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															},
															"id": 3876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3870,
																	"name": "playerDecisions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3481,
																	"src": "4476:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																		"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
																	}
																},
																"id": 3873,
																"indexExpression": {
																	"expression": {
																		"id": 3871,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4492:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4496:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4492:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4476:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 3874,
																	"name": "PlayerDecision",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4024,
																	"src": "4507:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																		"typeString": "type(enum BlockJack.PlayerDecision)"
																	}
																},
																"id": 3875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4522:3:3",
																"memberName": "Hit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4022,
																"src": "4507:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																	"typeString": "enum BlockJack.PlayerDecision"
																}
															},
															"src": "4476:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6179657220616c72656164792073656c656374656420686974206f6e63652e",
															"id": 3877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4539:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2",
																"typeString": "literal_string \"Player already selected hit once.\""
															},
															"value": "Player already selected hit once."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55d61d3eae7193339ec9d4c137dc49c3ee2bfe89fb28616b7783332d8b2932f2",
																"typeString": "literal_string \"Player already selected hit once.\""
															}
														],
														"id": 3869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4455:129:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3879,
												"nodeType": "ExpressionStatement",
												"src": "4455:129:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3881,
																"name": "PlayerDecision",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4024,
																"src": "4601:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_PlayerDecision_$4024_$",
																	"typeString": "type(enum BlockJack.PlayerDecision)"
																}
															},
															"id": 3882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4616:5:3",
															"memberName": "Stand",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4023,
															"src": "4601:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_PlayerDecision_$4024",
																"typeString": "enum BlockJack.PlayerDecision"
															}
														],
														"id": 3880,
														"name": "decide",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3931,
														"src": "4594:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_enum$_PlayerDecision_$4024_$returns$__$",
															"typeString": "function (enum BlockJack.PlayerDecision)"
														}
													},
													"id": 3883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4594:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3884,
												"nodeType": "ExpressionStatement",
												"src": "4594:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3886,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4643:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4647:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4643:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3885,
														"name": "Stand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3459,
														"src": "4637:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4637:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3889,
												"nodeType": "EmitStatement",
												"src": "4632:22:3"
											}
										]
									},
									"functionSelector": "c2897b10",
									"id": 3891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stand",
									"nameLocation": "4430:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4435:2:3"
									},
									"returnParameters": {
										"id": 3868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:0:3"
									},
									"scope": 4025,
									"src": "4421:240:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3930,
										"nodeType": "Block",
										"src": "4716:388:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3898,
																	"name": "bets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3476,
																	"src": "4734:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3901,
																"indexExpression": {
																	"expression": {
																		"id": 3899,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4739:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4743:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4739:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4734:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4754:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4734:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c61796572206469646e277420706c61636520616e7920626574732e",
															"id": 3904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4757:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586",
																"typeString": "literal_string \"Player didn't place any bets.\""
															},
															"value": "Player didn't place any bets."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a52b03190be48a892f25881fbab8ec7436b44b38ef6bf0a37b8f541d7852b586",
																"typeString": "literal_string \"Player didn't place any bets.\""
															}
														],
														"id": 3897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4726:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4726:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3906,
												"nodeType": "ExpressionStatement",
												"src": "4726:63:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$4020",
																"typeString": "enum BlockJack.Phase"
															},
															"id": 3911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3908,
																"name": "phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "4820:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3909,
																	"name": "Phase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4020,
																	"src": "4829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Phase_$4020_$",
																		"typeString": "type(enum BlockJack.Phase)"
																	}
																},
																"id": 3910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4835:10:3",
																"memberName": "HitOrStand",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4019,
																"src": "4829:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4020",
																	"typeString": "enum BlockJack.Phase"
																}
															},
															"src": "4820:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e746c79206e6f7420616c6c6f77696e6720686974206f72207374616e6420616374696f6e732e",
															"id": 3912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4859:46:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241",
																"typeString": "literal_string \"Currently not allowing hit or stand actions.\""
															},
															"value": "Currently not allowing hit or stand actions."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb0991e1d3190e9b4d171769a8f2f10ceb998fa48113193dee223603d5b8e241",
																"typeString": "literal_string \"Currently not allowing hit or stand actions.\""
															}
														],
														"id": 3907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4799:116:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3914,
												"nodeType": "ExpressionStatement",
												"src": "4799:116:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3916,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4946:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4952:9:3",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4946:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3918,
																"name": "currentRoundTimeout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3446,
																"src": "4965:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4946:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f756e6420646f6573206e6f742061636365707420616e79206d6f7265206368616e676573",
															"id": 3920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4998:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f",
																"typeString": "literal_string \"Round does not accept any more changes\""
															},
															"value": "Round does not accept any more changes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3331c30bc9c8458f73cdad029b424885524a3c20db404aaced47c6aadaf78d4f",
																"typeString": "literal_string \"Round does not accept any more changes\""
															}
														],
														"id": 3915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:123:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3922,
												"nodeType": "ExpressionStatement",
												"src": "4925:123:3"
											},
											{
												"expression": {
													"id": 3928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3923,
															"name": "playerDecisions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3481,
															"src": "5059:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_enum$_PlayerDecision_$4024_$",
																"typeString": "mapping(address => enum BlockJack.PlayerDecision)"
															}
														},
														"id": 3926,
														"indexExpression": {
															"expression": {
																"id": 3924,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5075:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5079:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5075:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5059:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PlayerDecision_$4024",
															"typeString": "enum BlockJack.PlayerDecision"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3927,
														"name": "decision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3894,
														"src": "5089:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_PlayerDecision_$4024",
															"typeString": "enum BlockJack.PlayerDecision"
														}
													},
													"src": "5059:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PlayerDecision_$4024",
														"typeString": "enum BlockJack.PlayerDecision"
													}
												},
												"id": 3929,
												"nodeType": "ExpressionStatement",
												"src": "5059:38:3"
											}
										]
									},
									"id": 3931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decide",
									"nameLocation": "4676:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3894,
												"mutability": "mutable",
												"name": "decision",
												"nameLocation": "4698:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 3931,
												"src": "4683:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PlayerDecision_$4024",
													"typeString": "enum BlockJack.PlayerDecision"
												},
												"typeName": {
													"id": 3893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3892,
														"name": "PlayerDecision",
														"nameLocations": [
															"4683:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4024,
														"src": "4683:14:3"
													},
													"referencedDeclaration": 4024,
													"src": "4683:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PlayerDecision_$4024",
														"typeString": "enum BlockJack.PlayerDecision"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:25:3"
									},
									"returnParameters": {
										"id": 3896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4716:0:3"
									},
									"scope": 4025,
									"src": "4667:437:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4002,
										"nodeType": "Block",
										"src": "5217:433:3",
										"statements": [
											{
												"assignments": [
													3941
												],
												"declarations": [
													{
														"constant": false,
														"id": 3941,
														"mutability": "mutable",
														"name": "aceCount",
														"nameLocation": "5235:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 4002,
														"src": "5227:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3940,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5227:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3943,
												"initialValue": {
													"hexValue": "30",
													"id": 3942,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5246:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5227:20:3"
											},
											{
												"body": {
													"id": 3980,
													"nodeType": "Block",
													"src": "5299:193:3",
													"statements": [
														{
															"expression": {
																"id": 3968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3955,
																	"name": "totalSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3938,
																	"src": "5313:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 3960,
																							"name": "hand",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3935,
																							"src": "5359:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_memory_ptr",
																								"typeString": "enum BlockJack.Card[] memory"
																							}
																						},
																						"id": 3962,
																						"indexExpression": {
																							"id": 3961,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3945,
																							"src": "5364:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5359:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Card_$4017",
																							"typeString": "enum BlockJack.Card"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Card_$4017",
																							"typeString": "enum BlockJack.Card"
																						}
																					],
																					"id": 3959,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5351:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3958,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5351:7:3",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5351:16:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 3964,
																				"name": "ZERO_INDEX_SHIFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3429,
																				"src": "5370:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5351:35:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3966,
																			"name": "MAX_CARD_VALUE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3432,
																			"src": "5404:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3956,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "5325:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1657_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 3957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5330:3:3",
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 286,
																		"src": "5325:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5325:107:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5313:119:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3969,
															"nodeType": "ExpressionStatement",
															"src": "5313:119:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Card_$4017",
																	"typeString": "enum BlockJack.Card"
																},
																"id": 3975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3970,
																		"name": "hand",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3935,
																		"src": "5450:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_memory_ptr",
																			"typeString": "enum BlockJack.Card[] memory"
																		}
																	},
																	"id": 3972,
																	"indexExpression": {
																		"id": 3971,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3945,
																		"src": "5455:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5450:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Card_$4017",
																		"typeString": "enum BlockJack.Card"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3973,
																		"name": "Card",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4017,
																		"src": "5461:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Card_$4017_$",
																			"typeString": "type(enum BlockJack.Card)"
																		}
																	},
																	"id": 3974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5466:3:3",
																	"memberName": "Ace",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4004,
																	"src": "5461:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Card_$4017",
																		"typeString": "enum BlockJack.Card"
																	}
																},
																"src": "5450:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3979,
															"nodeType": "IfStatement",
															"src": "5446:35:3",
															"trueBody": {
																"expression": {
																	"id": 3977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5471:10:3",
																	"subExpression": {
																		"id": 3976,
																		"name": "aceCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3941,
																		"src": "5471:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3978,
																"nodeType": "ExpressionStatement",
																"src": "5471:10:3"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3948,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3945,
														"src": "5277:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3949,
															"name": "hand",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3935,
															"src": "5281:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_memory_ptr",
																"typeString": "enum BlockJack.Card[] memory"
															}
														},
														"id": 3950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5281:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5277:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3981,
												"initializationExpression": {
													"assignments": [
														3945
													],
													"declarations": [
														{
															"constant": false,
															"id": 3945,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5270:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 3981,
															"src": "5262:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3944,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5262:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3947,
													"initialValue": {
														"hexValue": "30",
														"id": 3946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5274:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5262:13:3"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5294:3:3",
														"subExpression": {
															"id": 3952,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3945,
															"src": "5294:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3954,
													"nodeType": "ExpressionStatement",
													"src": "5294:3:3"
												},
												"nodeType": "ForStatement",
												"src": "5257:235:3"
											},
											{
												"body": {
													"id": 3998,
													"nodeType": "Block",
													"src": "5554:64:3",
													"statements": [
														{
															"expression": {
																"id": 3993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3991,
																	"name": "totalSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3938,
																	"src": "5568:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 3992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5580:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "5568:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3994,
															"nodeType": "ExpressionStatement",
															"src": "5568:14:3"
														},
														{
															"expression": {
																"id": 3996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "5597:10:3",
																"subExpression": {
																	"id": 3995,
																	"name": "aceCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3941,
																	"src": "5597:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3997,
															"nodeType": "ExpressionStatement",
															"src": "5597:10:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3982,
															"name": "aceCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3941,
															"src": "5509:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5509:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3985,
																"name": "totalSum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3938,
																"src": "5525:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3130",
																"id": 3986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5536:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "5525:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 3988,
															"name": "BLACK_JACK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3435,
															"src": "5542:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5525:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5509:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3999,
												"nodeType": "WhileStatement",
												"src": "5502:116:3"
											},
											{
												"expression": {
													"id": 4000,
													"name": "totalSum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3938,
													"src": "5635:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3939,
												"id": 4001,
												"nodeType": "Return",
												"src": "5628:15:3"
											}
										]
									},
									"id": 4003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumOfHand",
									"nameLocation": "5119:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3935,
												"mutability": "mutable",
												"name": "hand",
												"nameLocation": "5143:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 4003,
												"src": "5129:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_memory_ptr",
													"typeString": "enum BlockJack.Card[]"
												},
												"typeName": {
													"baseType": {
														"id": 3933,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3932,
															"name": "Card",
															"nameLocations": [
																"5129:4:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 4017,
															"src": "5129:4:3"
														},
														"referencedDeclaration": 4017,
														"src": "5129:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Card_$4017",
															"typeString": "enum BlockJack.Card"
														}
													},
													"id": 3934,
													"nodeType": "ArrayTypeName",
													"src": "5129:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_Card_$4017_$dyn_storage_ptr",
														"typeString": "enum BlockJack.Card[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5128:20:3"
									},
									"returnParameters": {
										"id": 3939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3938,
												"mutability": "mutable",
												"name": "totalSum",
												"nameLocation": "5203:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 4003,
												"src": "5195:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5194:18:3"
									},
									"scope": 4025,
									"src": "5110:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "BlockJack.Card",
									"id": 4017,
									"members": [
										{
											"id": 4004,
											"name": "Ace",
											"nameLocation": "5676:3:3",
											"nodeType": "EnumValue",
											"src": "5676:3:3"
										},
										{
											"id": 4005,
											"name": "Two",
											"nameLocation": "5689:3:3",
											"nodeType": "EnumValue",
											"src": "5689:3:3"
										},
										{
											"id": 4006,
											"name": "Three",
											"nameLocation": "5702:5:3",
											"nodeType": "EnumValue",
											"src": "5702:5:3"
										},
										{
											"id": 4007,
											"name": "Four",
											"nameLocation": "5717:4:3",
											"nodeType": "EnumValue",
											"src": "5717:4:3"
										},
										{
											"id": 4008,
											"name": "Five",
											"nameLocation": "5731:4:3",
											"nodeType": "EnumValue",
											"src": "5731:4:3"
										},
										{
											"id": 4009,
											"name": "Six",
											"nameLocation": "5745:3:3",
											"nodeType": "EnumValue",
											"src": "5745:3:3"
										},
										{
											"id": 4010,
											"name": "Seven",
											"nameLocation": "5758:5:3",
											"nodeType": "EnumValue",
											"src": "5758:5:3"
										},
										{
											"id": 4011,
											"name": "Eight",
											"nameLocation": "5773:5:3",
											"nodeType": "EnumValue",
											"src": "5773:5:3"
										},
										{
											"id": 4012,
											"name": "Nine",
											"nameLocation": "5788:4:3",
											"nodeType": "EnumValue",
											"src": "5788:4:3"
										},
										{
											"id": 4013,
											"name": "Ten",
											"nameLocation": "5802:3:3",
											"nodeType": "EnumValue",
											"src": "5802:3:3"
										},
										{
											"id": 4014,
											"name": "Jack",
											"nameLocation": "5815:4:3",
											"nodeType": "EnumValue",
											"src": "5815:4:3"
										},
										{
											"id": 4015,
											"name": "Queen",
											"nameLocation": "5829:5:3",
											"nodeType": "EnumValue",
											"src": "5829:5:3"
										},
										{
											"id": 4016,
											"name": "King",
											"nameLocation": "5844:4:3",
											"nodeType": "EnumValue",
											"src": "5844:4:3"
										}
									],
									"name": "Card",
									"nameLocation": "5661:4:3",
									"nodeType": "EnumDefinition",
									"src": "5656:198:3"
								},
								{
									"canonicalName": "BlockJack.Phase",
									"id": 4020,
									"members": [
										{
											"id": 4018,
											"name": "PlaceBets",
											"nameLocation": "5880:9:3",
											"nodeType": "EnumValue",
											"src": "5880:9:3"
										},
										{
											"id": 4019,
											"name": "HitOrStand",
											"nameLocation": "5899:10:3",
											"nodeType": "EnumValue",
											"src": "5899:10:3"
										}
									],
									"name": "Phase",
									"nameLocation": "5864:5:3",
									"nodeType": "EnumDefinition",
									"src": "5859:56:3"
								},
								{
									"canonicalName": "BlockJack.PlayerDecision",
									"id": 4024,
									"members": [
										{
											"id": 4021,
											"name": "Undecided",
											"nameLocation": "5951:9:3",
											"nodeType": "EnumValue",
											"src": "5951:9:3"
										},
										{
											"id": 4022,
											"name": "Hit",
											"nameLocation": "5970:3:3",
											"nodeType": "EnumValue",
											"src": "5970:3:3"
										},
										{
											"id": 4023,
											"name": "Stand",
											"nameLocation": "5983:5:3",
											"nodeType": "EnumValue",
											"src": "5983:5:3"
										}
									],
									"name": "PlayerDecision",
									"nameLocation": "5926:14:3",
									"nodeType": "EnumDefinition",
									"src": "5921:73:3"
								}
							],
							"scope": 4026,
							"src": "163:5833:3",
							"usedErrors": [],
							"usedEvents": [
								3455,
								3459,
								3463
							]
						}
					],
					"src": "32:5965:3"
				},
				"id": 3
			}
		}
	}
}